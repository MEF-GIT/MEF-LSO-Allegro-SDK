$schema: http://json-schema.org/draft-07/schema#
$id: urn:mef:lso:spec:service:iperf-configuration:v0.0.1:all
x-mef-target: ServiceSpecificTestProfileAttributes
description: Service Function Testing for iPerf Configuration
title: 
    MEF LSO - iPerf Configuration for Service Function Testing
    # MEF Forum - Date: 20250212  Edit-level: 
    # File: ip/ipSat/iPerfConfiguration.yaml
    #
    # ---------------------
    # Disclaimer
    # 
    # Â© MEF Forum 2025. All Rights Reserved.
    # 
    # The information in this publication is freely available for reproduction
    # and use by any recipient and is believed to be accurate as of its
    # publication date. Such information is subject to change without notice
    # and MEF Forum (MEF) is not responsible for any errors. MEF does not
    # assume responsibility to update or correct any information in this
    # publication. No representation or warranty, expressed or implied, is
    # made by MEF concerning the completeness, accuracy, or applicability of
    # any information contained herein and no liability of any kind shall be
    # assumed by MEF as a result of reliance upon such information.
    # 
    # The information contained herein is intended to be used without
    # modification by the recipient or user of this document. MEF is not
    # responsible or liable for any modifications to this document made by any
    # other party.
    # 
    # The receipt or any use of this document or its contents
    # does not in any way create, by implication or otherwise:
    # 
    # a) any express or implied license or right to or under any patent,
    # copyright, trademark or trade secret rights held or claimed by any MEF
    # member which are or may be associated with the ideas, techniques,
    # concepts or expressions contained herein; nor
    # 
    # b) any warranty or representation that any MEF members will announce
    # any product(s) and/or service(s) related thereto, or if such
    # announcements are made, that such announced product(s) and/or service(s)
    # embody any or all of the ideas, technologies, or concepts contained
    # herein; nor
    # 
    # c) any form of relationship between any MEF member and the recipient
    # or user of this document.
    # 
    # Implementation or use of specific MEF standards, specifications, or
    # recommendations will be voluntary, and no Member shall be obliged to
    # implement them by virtue of participation in MEF Forum. MEF is a
    # non-profit international organization to enable the development and
    # worldwide adoption of agile, assured and orchestrated network services.
    # MEF does not, expressly or otherwise, endorse or promote any specific
    # products or services.
    # ---------------------
    #
type: object
properties:
  description: >-
    iPerf Configuration for Service Function Testing.
  generalOptions:
    $ref: '#/definitions/GeneralOptions'
  serverSpecificOptions:
    $ref: '#/definitions/ServerSpecificOptions'
  clientSpecificOptions:
    $ref: '#/definitions/ClientSpecificOptions'
definitions:
  Affinity: 
    type: object
    description: >-
      Set the CPU affinity, if possible (Linux and FreeBSD only). On both the client and
      server you can set the local affinity by using the n form of this argument (where n
      is a CPU number). In addition, on the client you can override the server's affinity 
      for just that one test, using the n,m form of argument. Note that when using this 
      feature, a process will only be bound to a single CPU (as opposed to a set containing
      potentially multiple CPUs).
    properties: 
      numberOfCpus:
        type: integer
        description: >-
          Represents the total number of available CPU cores on the system.
      boundCpus:
        type: array
        items:
          type: integer
        description: >-
          Specifies which CPU cores (numbered from 0) that are bound to the process.
  ClientSpecificOptions:
    description: The client-specific options for iPerf.
    type: object
    properties:
      client:
        type: string
        description: The client to connect to.
      sctp: 
        type: boolean
        description: Use SCTP (Stream Control Transmission Protocol) rather than TCP.
        default: false
      bandwidth:
        type: integer
        description: >-
          Set target bandwidth to n bits/sec (default 1 Mbit/sec).
  GeneralOptions:
    type: object
    properties:
      port:
        type: integer
        description: >-
          The server port for the server to listen on and the client to connect to.
          This should be the same in both client and server.
        default: 5201
      clientSidePort:
        type: integer
        description: Option to specify the client-side port.
      format:
        $ref: '../satCommon.yaml#/definitions/InformationRateUnits'
      interval:
        type: integer
        description: >-
          Sets the interval time in seconds between periodic bandwidth, jitter, and 
          loss reports. If non-zero, a report is made every interval seconds of the
          bandwidth since the last report. If zero, no periodic reports are printed.
          Default is zero.
        default: 0
      filename:
        type: string
        description: >-
          Client-side: read from the the file and write to the network, instead of using
          random data.
          Server-side: read from the network and write to the file, instead of throwing the
          data away.
      affinity:
        description: Set the CPU affinity.
        $ref: '#/definitions/Affinity'
      bind:
        description: Bind to the host.
        $ref: '../satCommon.yaml#/definitions/Ipv4OrIpv6Address'
      verbose:
        type: boolean
        description: Set verbose mode.
        default: false
      json:
        type: boolean
        description: Output in JSON format.
        default: false
      logfile:
        type: string
        description: >-
          Log output to the specified file. If file exists, it appends to it.
  ServerSpecificOptions:
    type: object
    properties:
      server:
        type: string
        description: The server to connect to.



