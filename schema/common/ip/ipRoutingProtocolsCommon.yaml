---
$schema: http://json-schema.org/draft-07/schema#
title:
  MEF LSO IP Common Types
  # ---------------------
  # Disclaimer
  #
  # Â© MEF Forum 2023. All Rights Reserved.
  #
  # The information in this publication is freely available for reproduction
  # and use by any recipient and is believed to be accurate as of its
  # publication date. Such information is subject to change without notice
  # and MEF Forum (MEF) is not responsible for any errors. MEF does not
  # assume responsibility to update or correct any information in this
  # publication. No representation or warranty, expressed or implied, is
  # made by MEF concerning the completeness, accuracy, or applicability of
  # any information contained herein and no liability of any kind shall be
  # assumed by MEF as a result of reliance upon such information.
  #
  # The information contained herein is intended to be used without
  # modification by the recipient or user of this document. MEF is not
  # responsible or liable for any modifications to this document made by any
  # other party.
  #
  # The receipt or any use of this document or its contents
  # does not in any way create, by implication or otherwise:
  #
  # a) any express or implied license or right to or under any patent,
  # copyright, trademark or trade secret rights held or claimed by any MEF
  # member which are or may be associated with the ideas, techniques,
  # concepts or expressions contained herein; nor
  #
  # b) any warranty or representation that any MEF members will announce
  # any product(s) and/or service(s) related thereto, or if such
  # announcements are made, that such announced product(s) and/or service(s)
  # embody any or all of the ideas, technologies, or concepts contained
  # herein; nor
  #
  # c) any form of relationship between any MEF member and the recipient
  # or user of this document.
  #
  # Implementation or use of specific MEF standards, specifications, or
  # recommendations will be voluntary, and no Member shall be obliged to
  # implement them by virtue of participation in MEF Forum. MEF is a
  # non-profit international organization to enable the development and
  # worldwide adoption of agile, assured and orchestrated network services.
  # MEF does not, expressly or otherwise, endorse or promote any specific
  # products or services.
  # ---------------------
  #
definitions:
  AccessLinkBfd:
    description: >-
      The Access Link BFD Service Attribute indicates whether Bidirectional
      Forwarding Detection (BFD) is enabled on the UNI Access Link. Reference
      MEF 61.1 Section 13.8 and Section 16.5
    type: object
    properties:
      connectionAddressFamily:
        description: >-
          The Connection Address Family parameter specifies whether the session
          is established over IPv4 or IPv6 or whether two separate sessions are
          established using IPv4 and IPv6. Reference - MEF 61.1 Section 13.8 and
          16.5
        $ref: '#/definitions/AddressFamilyIpv4Ipv6Both'
      transmissionInterval:
        description:
          Transmission Interval Reference - MEF 61.1 Section 13.8 and 16.5
        type: integer
        minimum: 0
      detectMultiplier:
        description: >-
          BFD Detect multiple as an Integer. Reference - MEF 61.1 Section 13.8
          and 16.5 Attribute.
        type: integer
        minimum: 0
      activeEnd:
        description: >-
          BFD Active End. At least one end of BFD session has to have an active
          role, meaning that it sends out asynchronous control messages
          regardless of whether it has received any. Reference - MEF 61.1
          Section 13.8
        $ref: '#/definitions/BfdActiveEnd'
      authenticationType:
        description: >-
          BFD Authentication as describer in RFC 5880. Reference - MEF 61.1
          Section 13.8 and 16.5
        $ref: '#/definitions/BfdAuthenticationType'
  AddressFamilyIpv4Ipv6:
    description: Specifies whether the session is established over IPv4 or IPv6.
    type: string
    enum:
      - IPV4
      - IPV6
  AddressFamilyIpv4Ipv6Both:
    description: >-
      Specifies whether the session is established over IPv4 or IPv6 or whether
      two separate session are established using IPv4 and IPv6.
    type: string
    enum:
      - IPV4
      - IPV6
      - BOTH
  BfdActiveEnd:
    description: |
      At least one end of the BFD session must have an active role, meaning that
      it sends out asynchronous control messages regardless of whether it has
      received any. This enumeration represents the values that can be set for
      the BFD Active End. Reference - MEF 61.1 Section 13.8 [R171] and [R172].
      - SUBSCRIBER: Subscriber takes active BFD role.
      - SP: Service Provider takes active BFD role.
      - BOTH: Subscriber and Service Provider take active BFD role.
    type: string
    enum:
      - SUBSCRIBER
      - SP
      - BOTH
  BfdAuthenticationType:
    description: |
      Enumeration of possible BFD Authentication Type, as specified by
      RFC 5880 [4]. In case other than `NONE` is specified additional
      specific parameters need to be agreed between the Buyer and the Seller. 
      - NONE: No BFD authentication.
      - SIMPLE_PASSWORD: Simple Password Authentication is the most 
      straightforward (and weakest) form of authentication. In this method
      of authentication one or more Passwords (with corresponding Key IDs) 
      are configured in each system and one of these Password/ID pairs is 
      carried in each BFD Control packet. The receiving system accepts the 
      packet if the Password and Key ID matches one of the Password/ID 
      pairs configured in that system. Reference IETF RFC5880 Section 6.7.2.
      - KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 Authentication 
      mechanisms are very similar to those used in other protocols. 
      In these methods of authentication, one or more security keys 
      (with corresponding key IDs) are configured in each system. 
      Reference RFC5880 Section 6.7.3
      - METICULOUS_KEYED_MD5: The Keyed MD5 and Meticulous Key MD5 
      Authentication mechanisms are very similar to those used in other 
      protocols. In these methods of authentication, one or more security
      keys (with corresponding key IDs) are configured in each system.
      Reference RFC5880 Section 
      - KEYED_SHA1: The Keyed SHA1 and Meticulous Key SHA1 Authentication
      mechanisms are very similar to those used in other protocols. In 
      these methods of authentication, one or more secret keys (with 
      corresponding key IDs) are configured in each system. Reference
      RFC5880 Section 6.7.4
      - METICULOUS_KEYED_SHA1: The Keyed SHA1 and Meticulous Key 
      SHA1 Authentication mechanisms are very similar to those used in
      other protocols. In these methods of authentication, one or more 
      secret keys (with corresponding key IDs) are configured in each system.
      Reference RFC5880 Section 6.7.4
    type: string
    enum:
      - NONE
      - SIMPLE_PASSWORD
      - KEYED_MD5
      - METICULOUS_KEYED_MD5
      - KEYED_SHA1
      - METICULOUS_KEYED_SHA1
  Bgp:
    description: >-
      When an entry in the UNI Routing Protocol is for BGP, BGP as specified in
      RFC 4271 is used across the UNI to exchange information. Reference - MEF
      61.1 Section 12.7.3.
    type: object
    properties:
      subscriberAsNumber:
        description: BGP Subscriber Autonomous System number.
        $ref: '../../../common/common.yaml#/definitions/FourOctetInteger'
      peerAsNumber:
        description: BGP Peer Autonomous System Number.
        $ref: '../../../common/common.yaml#/definitions/FourOctetInteger'
      connectionAddressFamily:
        description: Connection Address Family (IPv4 or IPv6).
        $ref: '#/definitions/AddressFamilyIpv4Ipv6'
      peeringAddresses:
        description: Peering Addresses.
        $ref: '#/definitions/PeeringAddress'
      authentication:
        description: >-
          BGP Authentication. It is either empty list or if present is it a
          value of MD5 Password. It is assumed that an encrypted channel is used
          when this data is passed across the API so that the password is
          protected.
        type: array
        maxItems: 1
        items:
          type: string
      bgpCommunityList:
        description: >-
          Used to control which routers are accepted, preferred, distributed, or
          advertised.
        type: array
        items:
          $ref: '#/definitions/BgpCommunity'
      bgpExtendedCommunityList:
        description: >-
          Mechanism for labeling information carried in BGP-4. Provide
          enhancement over existing BGP Community Attribute an extended range,
          the addition of type field.
        type: array
        items:
          $ref: '#/definitions/BgpExtendedCommunity'
      holdTime:
        description: >-
          Hold time in seconds. Indicates the agreed Hold Time used for BGP
          sessions. The possible values are 0 or an integer in the range
          3-65535.
        $ref: '#/definitions/TwoOctetInteger'
      damping:
        description: >-
          Route flap damping. When the Damping parameter is empty, the attribute
          is not set. When set - a single set of parameters described in Section
          4.3 of RFC 2430 MUST be agreed.
        type: array
        maxItems: 1
        items:
          $ref: '#/definitions/Damping'
      asOverride:
        description: >-
          Autonomous System Override. The SP (or Operator) can overwrite
          instances of the Subscriber's AS Number in the AS Path with their own
          AS Number, when advertising routes to the Subscriber. This needs to be
          explicitly agreed between the SP and the Subscriber, and/or between an
          SP/SO and an Operator.
        $ref: '../../../common/common.yaml#/definitions/EnabledDisabled'
      administrativeDistance:
        description: BGP Administrative Distance.
        type: integer
        minimum: 1
  BgpCommunity:
    description: >
      A community is a group of destinations which share some common property.
      Each autonomous system administrator may define which communities a
      destination belongs to.
    type: object
    properties:
      autonomousSystemNumber:
        description: The first two octets encoding the Autonomous System value.
        $ref: '#/definitions/TwoOctetInteger'
      autonomousSystemDefined:
        description: The remaining octets.
        $ref: '#/definitions/TwoOctetInteger'
      semantics:
        description: >-
          Text describing how the Seller will handle routes tagged with this
          Community
        type: string
  BgpExtendedCommunity:
    description: >-
      This attribute provides a mechanism for labeling information carried in
      BGP-4. These labels can be used to control the distribution of this
      information, or for other applications.
    type: object
    properties:
      regularType:
        description: 'Regular Type Field, 1 octet length'
        type: integer
        minimum: 0
        maximum: 255
      regularValue:
        description: >-
          Octets 2 - 8 of the value part of the address. Used in case only
          Regular Type is provided.
        type: integer
        minimum: 0
        maximum: 72057594037927940
      extendedType:
        description: 'Extended Type Field, 2 octets length'
        $ref: '#/definitions/TwoOctetInteger'
      extendedValue:
        description: >-
          Octets 3 - 8 of the value part of the address. Used in case only
          Extended Type is provided.
        type: integer
        minimum: 0
        maximum: 281474976710655
      semantics:
        description: >-
          Text describing how the Seller will handle routes tagged with this
          Community
        type: string
    oneOf:
      - required: [regularType, regularValue]
      - required: [extendedType, extendedValue]
  BurstBehavior:
    description: >
      Enumeration used to select the Bandwidth Profile Flow Burst Behavior

      attribute. Reference - MEF 61.1 Section 17.3 Table 29

      - OPTIMIZE_DELAY: Enumeration representing the Burst Behavior of
      optimization of delay.

      - OPTIMIZE_THROUGHPUT: Enumeration representing the Burst Behavior of
      optimization of throughput.
    type: string
    enum:
      - OPTIMIZE_DELAY
      - OPTIMIZE_THROUGHPUT
  CloudDataLimit:
    description: >-
      Specifies an absolute limit on the amount of data the Subscriber can
      transmit to, or receive from, the cloud service in a given time period. It
      is either Unlimited or a 4-tuple (scdl, tcdl, ucdl, dcdl).  Reference -
      MEF 61.1 Section 10.13.3
    type: object
    properties:
      startTime:
        description: Specifies a start time.
        type: string
        format: date-time
      duration:
        description: >-
          Specifies a duration. Together with the start time, it describes a
          service of contiguous time intervals, starting at the specified start
          time and each lasting for the specified duration.
        $ref: '../../../common/common.yaml#/definitions/TimeDuration'
      upload:
        description: >-
          An integer indicating a limit, in octets, on the amount of IP traffic
          that can be transmitted towards the cloud service during each time
          interval described by startTime and duration.
        type: integer
        minimum: 0
      download:
        description: >-
          An integer indicating a limit, in octets, on the amount of IP traffic
          received from the cloud service that can be delivered to the
          Subscriber during each time interval described by startTime and
          duration.
        type: integer
        minimum: 0
  CloudDns:
    description: >
      Data type representing a Domain Name System. Reference - MEF 61.1 Sn
      10.13.5.

      Reference - MEF 69.1 Section 9.1:

      [R12] "For a Basic Internet Access Service, Cloud DNS MUST NOT be empty."

      [R13] "For an Internet Access Service, if the Cloud DNS parameter of the

      IPVC Cloud Service Attribute is STATIC, the associated list of DNS Servers

      MUST have at least one entry." 

      [D4] "For an Internet Access Service, if the Cloud DNS parameter of the

      IPVC Cloud Service Attribute is STATIC, the associated list of DNS Servers

      SHOULD contain at least two DNS servers."
    type: object
    properties:
      dnsServerIpList:
        description: >-
          DNS server IP addresses list. If `dnsType` is STATIC this list must
          have at least one entry. Otherwise, it must be empty.
        type: array
        items:
          $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4OrIpv6Address'
      dnsType:
        description: Domain Name System type.
        $ref: '#/definitions/DnsType'
  ConnectionType:
    description: |
      An enumeration representing the connection type.
      - POINT_TO_POINT indicates that the link is logically point to Point.
      - MULTIPOINT indicates the link is logically multipoint.
    type: string
    enum:
      - POINT_TO_POINT
      - MULTIPOINT
  ControlProtocol:
    description: >-
      Data type representing Control Protocol. Each entry consists of a 3-tuple
      containing the protocol name, addressing information (either SP/Operator
      Addresses or Any) and one or more references. Reference - MEF 61.1 Section
      12.6
    type: object
    properties:
      addressing:
        description: Enumeration representing the addressing.
        $ref: '#/definitions/ControlProtocolAddressing'
      protocolName:
        description: Protocol name.
        type: string
      reference:
        description: Protocol reference.
        type: array
        minItems: 1
        items:
          type: string
  ControlProtocolAddressing:
    description: |
      Enumeration representing the Address type for the Control Protocols data
      type. Reference - MEF 61.1 Section 12.6 
      - SP_OPERATOR_ADDRESSES: If the addressing information is
      SP/Operator Addresses, then Ingress IP Packets for the specified  protocol
      that have a multicast or broadcast destination address, or a unicast
      destination address  that is reachable within the SP's or Operator's
      network, are considered to be IP Control Protocol  Packets, and Egress IP
      Packets for the specified protocol that have a source address that is
      reachable  within the SP's or Operator's network are considered to be IP
      Control Protocol Packets.
      - ANY: If the addressing information is Any, then all IP Packets for the
      specified protocol that cross the UNI are considered to be 
      IP Control Protocol Packets.
    type: string
    enum:
      - SP_OPERATOR_ADDRESSES
      - ANY
  ConversationIdRange:
    description:
      A range of ConversationID (either a VLAN Id or 0 for untagged frames)
    type: object
    properties:
      start:
        description: >-
          The starting Conversation ID of the range or the only Conversation ID
          if there is no end value
        type: integer
        minimum: 0
        maximum: 4094
      end:
        description: The final Conversation ID in the range
        type: integer
        minimum: 0
        maximum: 4094
  ConversationIdToAggregationLinkMap:
    description: >-
      This is a 2-tuple <x,y> where x is a list of Port Conversation IDs or
      ranges of Port Conversation IDs (a Port Conversation ID is a VLAN ID or 0
      for untagged frames) and y is a list of Link Numbers. This is used in the
      Port Conversation to Aggregation Link Map for the UNI and ENNI.
    type: object
    properties:
      conversationIDs:
        description: >-
          802.1AX-2014 sec. 6.6.2.1 - A Port Conversation ID is a VLAN ID (1 to
          4094) or 0 to represent untagged and priority-tagged frames.
        type: array
        minItems: 1
        uniqueItems: true
        items:
          $ref: '#/definitions/ConversationIdRange'
      aggLinkList:
        description: >-
          802.1AX-2014 sec. 6.6.2.1 - An ordered list of Aggregation Link
          Numbers
        type: array
        minItems: 1
        uniqueItems: true
        items:
          type: integer
          minimum: 1
  Damping:
    description: >-
      Damping parameters as defined in RFC 2439 BGP Route Flap Damping, Section
      4.2
    type: object
    properties:
      cutoffThreshold:
        description: >-
          This value is expressed as a number of route withdrawals.  It is the
          value above which a route advertisement will be suppressed.
        type: integer
        minimum: 0
      decayHalfLifeWhileReachable:
        description: >-
          This value is the time duration in seconds during which the
          accumulated stability figure of merit will be reduced by half if the
          route if considered reachable (whether suppressed or not).
        type: integer
        minimum: 0
      decayHalfLifeWhileUnReachable:
        description: >-
          This value is the time duration in seconds during which the
          accumulated stability figure of merit will be reduced by half if the
          route if considered unreachable.  If not specified or set to zero, no
          decay will occur while a route remains unreachable.
        type: integer
        minimum: 0
      decayMemoryLimit:
        description: >-
          This is the maximum time (in seconds) that any memory of previous
          instability will be retained given that the route's state remains
          unchanged, whether reachable or unreachable.  This parameter is
          generally used to determine array sizes.
        type: integer
        minimum: 0
      maxHoldDownTime:
        description: >-
          This value is the maximum time a route can be suppressed no matter how
          unstable it has been prior to this period of stability. In seconds.
        type: integer
        minimum: 0
      numberOfReuseLists:
        description: >-
          This is the number of reuse lists.  It may be determined from
          reuse-list-max or set explicitly.
        type: integer
        minimum: 0
      reuseListMemory:
        description: >-
          This is the time (in seconds) value corresponding to the last reuse
          list. This may be the maximum value of T-hold for all parameter sets
          of may be configured.
        type: integer
        minimum: 0
      reuseListTimeGranularity:
        description: >-
          This is the time (in seconds) interval between evaluations of the
          reuse lists.  Each reuse lists corresponds to an additional time
          increment.
        type: integer
        minimum: 0
      reuseThreshold:
        description: >-
          This value is expressed as a number of route withdrawals.  It is the
          value below which a suppressed route will now be used again.
        type: integer
        minimum: 0
      timeGranularity:
        description: >-
          This is the time granularity in seconds used to perform all decay
          computations.
        type: integer
        minimum: 0
      reuseIndexArraySize:
        description: >-
          This is the size of reuse index arrays.  This size determines the
          accuracy with which suppressed routes can be placed within the set of
          reuse lists when suppressed for a long time.
        type: integer
        minimum: 0
  DhcpRelay:
    description: >
      Dynamic Host Configuration Protocol (DHCP) Relay functionality is useful

      when the Subscriber uses DHCP (per RFC 2131 and RFC 8415) in the

      Subscriber Network but does not want to place a DHCP server (or possibly a

      pair of redundant DHCP servers) in each part of the network. Reference -
      MEF

      61.1 Section 13.6
    type: object
    properties:
      dhcpServerList:
        description: >-
          Non-empty list of IP addresses for DHCP Servers belonging to the
          Subscriber. Reference - MEF 61.1 Section 13.6
        type: array
        minItems: 1
        items:
          $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4OrIpv6Address'
      ipvcEndPointIdentifier:
        description:
          IPVC End Point identifier as described in MEF 61.1 Section 11.1.
        $ref: '../../../common/common.yaml#/definitions/IdentifierString'
  DnsType:
    description: |
      Enumeration representing the different types of DNS. Reference - MEF
      61.1 10.13.5 Cloud DNS Service
    type: string
    enum:
      - NONE
      - DHCP
      - PPP
      - STATIC
      - SLAAC
  DscpValue:
    description: DSCP value
    type: integer
    minimum: 0
    maximum: 63
  EthernetPhysicalLink:
    description: >-
      Data type representing UNI Access Link Trunk List of Ethernet Physical
      Links as defined in MEF 61.1.1 Section A1-1.3.1.
    type: object
    properties:
      identifier:
        description: |
          Identifier of the Physical LInk
        $ref: '../../../common/common.yaml#/definitions/IdentifierString'
      physicalLayer:
        description: >
          Enumeration representing the different Ethernet physical layers.
          Reference - MEF 61.1.1 Table A1-4 Ethernet PHYs for UNI Access Link
          Trunks.
        $ref: '../../../common/common.yaml#/definitions/EthernetPhysicalLayer'
      synchronousEthernet:
        description: >-
          Enumeration indicating if the physical link supports Synchronous
          Ethernet.
        $ref: '../../../common/ip/ipCommon.yaml#/definitions/SynchronousEthernet'
      connectorType:
        description:
          Enumeration representing type of connector presented to Subscriber.
        $ref: '../../../common/common.yaml#/definitions/ConnectorType'
      gender:
        description: >
          Enumeration representing the gender of the connector presented to the
          Subscriber.
        $ref: '#/definitions/Gender'
  ForwardingInformation:
    description: >-
      Forwarding information, consisting of either a nexthop IP address in the
      Subscriber Network (if the access medium is multipoint capable, e.g.,
      Ethernet), or a specific UNI Access Link (if the access medium is strictly
      point-to-point, e.g., HDLC, PPP over DSL).
    type: object
    properties:
      nextHopIpAddress:
        description: Next hop IP address.
        $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4OrIpv6Address'
      uniAccessLink:
        description: >-
          UNI Access Link identifier as set by the Buyer in
          IpUniAccessLink.identifier attribute.
        $ref: '../../../common/common.yaml#/definitions/IdentifierString'
    oneOf:
      - required: [nextHopIpAddress]
      - required: [uniAccessLink]
  IdentifierString:
    description: Identifier String - max 53 alpha-numerical characters
    type: string
    maxLength: 53
    pattern: "[ -\x7F]+"
  IpBwpEnvelope:
    description: >-
      A BWP Envelope is a list of Bandwidth Profile Flows, plus additional
      parameters for the BWP as a whole. A BWP Envelope is a set of one or more
      BWP Flows that are associated such that the amount of traffic for one flow
      can affect the amount that is permitted for another flow. This is an
      abstract superclass. There are subclasses of IPVC End Point, IP UNI and IP
      UNI Access Link Envelopes. Reference - MEF 61.1 Section 17.3
    type: object
    properties:
      maxIrE:
        description: |
          The Envelope Maximum Information Rate in bits per second. This is the
          limit on the total aggregate information rate of traffic across all
          BWP Flows in the Envelope. Reference - MEF 61.1 Section 17.3
        $ref: '../../../common/common.yaml#/definitions/InformationRate'
      tE:
        description: >-
          The Envelope IR Time in milliseconds. This is the time period over
          which average Information Rates are calculated and thus it limits the
          size of a burst. Reference - MEF 61.1 Section 17.3
        type: integer
        minimum: 0
  IpBwpFlow:
    description: >-
      A Bandwidth Profile Flow is a stream of IP Packets meeting certain
      criteria. This is an abstract superclass. It has subclasses depending on
      the criteria used. The criteria than can be used depends on which BWP
      Envelope the BWP Flow is a part of. Reference - MEF 61.1 Section 17.2
    type: object
    properties:
      flowIdentifier:
        description: >-
          Identifier for the BWP Flow within the BWP Envelope. Unique integer
          between 1 and n where n is the number of BWP Flows in the BWP
          Envelope. Reference - MEF 61.1 Table 29 - Bandwidth Profile Parameters
          for a Bandwidth Profile Flow.
        type: integer
        minimum: 1
      cir:
        description: >-
          Committed Information Rate in bits per second. Average information
          rate of IP Packets that is committed to this BWP Flow. Reference - MEF
          61.1 Table 29 - Bandwidth Profile Parameters for a Bandwidth Profile
          Flow.
        $ref: '../../../common/common.yaml#/definitions/InformationRate'
      maxIr:
        description: >-
          Maximum Information Rate in bits per second. Limit on the average
          information rate of IP Packets for this BWP Flow. Reference - MEF 61.1
          Table 29 - Bandwidth Profile Parameters for a Bandwidth Profile Flow.
        $ref: '../../../common/common.yaml#/definitions/InformationRate'
      weight:
        description: |
          Weight as an integer greater than or equal to 0. Relative weight for
          this BWP Flow compared to other BWP Flows in the BWP Envelope.
          Reference - MEF 61.1 Table 29 - Bandwidth Profile Parameters for a
          Bandwidth Profile Flow.
        type: integer
        minimum: 0
      burstBehavior:
        description: >-
          Burst Behavior either Optimize-Delay or Optimize-Throughput. Whether
          the SP is requested to optimize the delay characteristic of this flow,
          or the throughput. Reference - MEF 61.1 Table 29 - Bandwidth Profile
          Parameters for a Bandwidth Profile Flow.
        $ref: '#/definitions/BurstBehavior'
  IpBwpFlowAll:
    allOf:
      - $ref: '#/definitions/IpBwpFlow'
      - description: 'All IP Data Packets. NOTE: No attributes are needed.'
        type: object
  IpBwpFlowPerAccessLink:
    allOf:
      - $ref: '#/definitions/IpBwpFlow'
      - description: >-
          All Ingress IP Data Packets at the UNI that are received over one of a
          give set of UNI Access Links. Reference - MEF 61.1 Section 12.5
        type: object
        properties:
          uniAccessLinkIdentifier:
            description: List of UNI Access Link Identifiers.
            type: array
            minItems: 1
            items:
              $ref: '../../../common/common.yaml#/definitions/IdentifierString'
  IpBwpFlowPerAccessLinkIpvcEpAndCosName:
    allOf:
      - $ref: '#/definitions/IpBwpFlow'
      - description: >-
          All Ingress IP Data Packets at the UNI that are received over one of a
          given set of UNI Access Links,and that are mapped to the any of a
          given set of (IPVC EP, Cos Name) pairs. Reference - MEF 61.1 Section
          12.4
        type: object
        properties:
          ipvcEpAndCosName:
            description: |
              List of pairs of IPVC End Point Identifier and Class of Service
              Name. Reference - MEF 61.1 Table 28.
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpvcEpAndCosName'
          uniAccessLinkIdentifier:
            description: List of UNI Access Link Identifiers.
            type: array
            minItems: 1
            items:
              $ref: '../../../common/common.yaml#/definitions/IdentifierString'
  IpBwpFlowPerCosName:
    allOf:
      - $ref: '#/definitions/IpBwpFlow'
      - description: >-
          A Bandwidth for and IPVC End Point with an associated Class of Service
          identifier.
        type: object
        properties:
          cosName:
            description: List of Class of Service names.
            type: array
            minItems: 1
            items:
              type: string
  IpBwpFlowPerIpvcEp:
    allOf:
      - $ref: '#/definitions/IpBwpFlow'
      - description: >-
          All Egress/Ingress IP Data Packets at the UNI that are are mapped to
          any of a given set of IPVC End Points. Reference - MEF 61.1 Section
          13.10, 13.11
        type: object
        properties:
          ipvcEndPointIdentifier:
            description: |
              List of IPVC End Point Identifiers for IPVC End Points. 
              Reference - MEF 61.1 Table 28.
            type: array
            minItems: 1
            items:
              $ref: '../../../common/common.yaml#/definitions/IdentifierString'
  IpBwpFlowPerIpvcEpAccessLink:
    allOf:
      - $ref: '#/definitions/IpBwpFlow'
      - description: >-
          All Ingress IP Data Packets at the UNI that are received over one of a
          given set of UNI Access Links and are mapped to one of a given set
          of  IPVC End Points. Reference - MEF 61.1 Section 12.4
        type: object
        properties:
          ipvcEndPointIdentifier:
            description: >-
              List of IPVC End Point identifiers as described in MEF 61.1
              Section 11.1.
            type: array
            minItems: 1
            items:
              $ref: '../../../common/common.yaml#/definitions/IdentifierString'
          uniAccessLinkIdentifier:
            description: List of UNI Access Link Identifiers.
            type: array
            minItems: 1
            items:
              $ref: '../../../common/common.yaml#/definitions/IdentifierString'
  IpBwpFlowPerIpvcEpAndCosName:
    allOf:
      - $ref: '#/definitions/IpBwpFlow'
      - description: >-
          All Ingress IP Data Packets at the UNI that are mapped to any of a
          given set of (IPVC EP, CoS Name) pairs.
        type: object
        properties:
          ipvcEpAndCosName:
            description: |
              List of pairs of IPVC End Point Identifier and Class of Service
              Name. Reference - MEF 61.1 Table 28.
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpvcEpAndCosName'
  IpPrefixOrigin:
    description: >
      Enumeration of possible values of Ip Prefix Origin.

      - SP: The prefix(es) have been allocated to the Subscriber by the Service
      Provider.

      - OTHER: The prefix(es) have been allocated to the Subscriber by other
      source (e.g. another SP or a Regional Internet Registry).
    type: string
    enum:
      - SP
      - OTHER
  IpUniAccessLinkBwpEnvelope:
    allOf:
      - $ref: '#/definitions/IpBwpEnvelope'
      - description: >-
          A single Bandwidth Profile Envelope consisting of parameters and
          Bandwidth Profile Flow specifications. An Ingress Bandwidth Profile
          Envelope can be specified for one of a UNI, a UNI Access, or an IPVC
          EP. Reference - MEF 61.1 Section 13.10
        type: object
        properties:
          bwpFlowAll:
            description: >-
              BWP Flow for all IP Data Packets at the UNI that are transmitted
              or received over the UNI Access Link.
            $ref: '#/definitions/IpBwpFlowAll'
          bwpFlowPerIpvcEp:
            description: >-
              List of BWP Flows matching IPVC End Point Identifier(s) for an
              IPVC EP located at the UNI Access Link.
            type: array
            items:
              $ref: '#/definitions/IpBwpFlowPerIpvcEp'
          bwpFlowPerIpvcEpAndCosName:
            description: >-
              List of BWP Flows matching pairs of IPVC End Point Identifier and
              CoS Name.
            type: array
            items:
              $ref: '#/definitions/IpBwpFlowPerIpvcEpAndCosName'
        oneOf:
          - required: [bwpFlowAll]
          - required: [bwpFlowPerIpvcEp]
          - required: [bwpFlowPerIpvcEpAndCosName]
  IpUniAccessLinkCommon:
    description: >-
      An individual connection between the Subscriber and the SP that forms part
      of a UNI. Reference - MEF 61.1 Section 7.3
    type: object
    properties:
      identifier:
        description: >-
          IPVC UNI Access Link identifier as described in MEF 61.1 Section 13.1.
          Note - it is not the same thing as the potential Product identifier if
          IpUniAccessLink is an instance of a Product.
        $ref: '../../../common/common.yaml#/definitions/IdentifierString'
      connectionType:
        description:
          Indicates whether the UNI Access Link is point-to-point or multipoint.
        $ref: '#/definitions/ConnectionType'
      l2Technology:
        description: >-
          Specifies the UNI Access Link Trunk (61.1.1 section A1-1) used to
          carry IP Packets across the UNI along with information needed to
          identify IP Packets for this UNI Access Link.
        $ref: '#/definitions/L2Technology'
      prefixDelegation:
        description: >-
          Indicates whether DHCP Prefix delegation is enabled. Reference - MEF
          61.1 Section 13.7
        $ref: '../../../common/common.yaml#/definitions/EnabledDisabled'
      mtu:
        description: >-
          Maximum size, in octets of an IP Packet that can traverse the UNI
          Access Link. Reference - MEF 61.1 Section 13.9
        type: integer
        minimum: 576
      reservedVrids:
        description: >-
          List of VRRP (Virtual Router Redundancy Protocol) VRIDs (Virtual
          Router Identifier) reserved for use by the SP or Operator. Reference
          MEF 61.1 Section 13.12
        type: array
        items:
          $ref: '#/definitions/Vrid'
  IpUniBwpEnvelope:
    allOf:
      - $ref: '#/definitions/IpBwpEnvelope'
      - description: >-
          A single Bandwidth Profile Envelope consisting of parameters and
          Bandwidth Profile Flow specifications. The BWP Flows can be defined
          per UNI, per IPVC EP, per UNI Access Link, per CosName, etc. Reference
          MEF 61.1 Sections 12.4, 12.5
        type: object
        properties:
          bwpFlowPerAccessLink:
            description: >-
              A list of BWP Flows for IP Packets that are received over one of a
              given set of UNI Access Links. Reference - MEF 61.1 Section 12.5
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpBwpFlowPerAccessLink'
          bwpFlowPerIpvcEp:
            description: >-
              A list of BWP Flows that are mapped to any of a given set of IPVC
              EPs. Reference - MEF 61.1 Section 12.5
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpBwpFlowPerIpvcEp'
          bwpFlowPerIpvcEpAccessLink:
            description: >-
              A list of BWP Flows for IP Packets that are received over one of a
              given set of UNI Access Links and are mapped to any of a given set
              of IPVC EPs. Reference - MEF 61.1 Section 12.5
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpBwpFlowPerIpvcEpAccessLink'
          bwpFlowPerIpvcEpAndCosName:
            description: >-
              A list of BWP Flows that are mapped to any of a given set of (IPVC
              EP, CoS Name) pairs. Reference - MEF 61.1 Section 12.5
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpBwpFlowPerIpvcEpAndCosName'
          bwpFlowPerAccessLinkIpvcEpAndCosName:
            description: >-
              A list of BWP Flows that are mapped to the UNI Access Link and any
              of a given set of (IPVC EP, Cos Name) pairs. Reference - MEF 61.1
              Section 12.5
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpBwpFlowPerAccessLinkIpvcEpAndCosName'
          bwpFlowAll:
            description: >-
              A BWP Flow for all IP Data Packets at the UNI. Reference - MEF
              61.1 Section 12.5
            $ref: '#/definitions/IpBwpFlowAll'
        oneOf:
          - required: [bwpFlowPerAccessLink]
          - required: [bwpFlowPerIpvcEp]
          - required: [bwpFlowPerIpvcEpAccessLink]
          - required: [bwpFlowPerIpvcEpAndCosName]
          - required: [bwpFlowPerAccessLinkIpvcEpAndCosName]
          - required: [bwpFlowAll]
  IpUniCommon:
    description: >-
      A User Network Interface (UNI) is the demarcation point between the
      responsibility  of the SP and the responsibility of the Subscriber. Note
      that a given UNI always  relates to a single SP and a single Subscriber.
      Reference - MEF 61.1 Section 12
    type: object
    properties:
      managementType:
        description: >-
          Attribute indicating whether the CE is the responsibility of the
          Subscriber or the Service Provider. Reference - MEF 61.1 Section 12.2
        $ref: '#/definitions/UniManagementType'
      listOfControlProtocols:
        description: >-
          Indication of IP Control Protocols that are not forwarded
          transparently by the SP. Reference - MEF 61.1 Section 12.6. [D9] At a
          UNI with an IPVC EP for an Internet Access Service, if the UNI has at
          least one UNI Access Link where the UNI Access Link IPv4 Connection
          Addressing is not empty, the UNI List of Control Protocols SHOULD
          include ICMP with a list of applicable ISP IP addresses. [D10]  At a
          UNI with an IPVC EP for an Internet Access Service with at least one
          UNI Access Link where the UNI Access Link IPv6 Connection Addressing
          is not empty, the UNI List of Control Protocols SHOULD include ICMPv6
          with a list of applicable SP IP addresses. Reference - MEF 69.1
          Section 9.3
        type: array
        items:
          $ref: '#/definitions/ControlProtocol'
      reversePathForwarding:
        description: >-
          Indicates whether Reverse Path Forwarding checks are used by the SP at
          the UNI. Reference - MEF 61.1 Section 12.8. [D11] At a UNI with an
          IPVC EP for an Internet Access Service, reversePathForwarding SHOULD
          be ENABLED. Reference - MEF 69.1 Section 9.3
      $ref: '../../../common/common.yaml#/definitions/EnabledDisabled'
  IpvcEpAndCosName:
    description: >-
      Data type representing IPVC End Point Identifier and CoS name use for
      Bandwidth Profiles.
    type: object
    properties:
      ipvcEndPointIdentifier:
        description:
          IPVC End Point identifier as described in MEF 61.1 Section 11.1.
        $ref: '../../../common/common.yaml#/definitions/IdentifierString'
      cosName:
        description: Class of Service Name.
        type: string
  IpvcEpBwpEnvelope:
    allOf:
      - $ref: '#/definitions/IpBwpEnvelope'
      - description: >-
          A single Bandwidth Profile Envelope consisting of parameters and
          Bandwidth Profile specifications. A Bandwidth Profile Envelope can be
          specified for one of a UNI, a UNI Access Link, an ENNI Link, or an
          IPVC End Point. Reference - MEF 61.1 Section 11.11, 11.12.
        type: object
        properties:
          bwpFlowPerCosName:
            description:
              'List of BWP flows, each matching one of a set of CoS Names.'
            type: array
            minItems: 1
            items:
              $ref: '#/definitions/IpBwpFlowPerCosName'
          bwpFlowAll:
            description: All IP Packets mapped to the IPVC End Point
            $ref: '#/definitions/IpBwpFlowAll'
        oneOf:
          - required: [bwpFlowPerCosName]
          - required: [bwpFlowAll]
  L2Technology:
    description: |
      Specifies the UNI Access Link Trunk used to carry IP Packets across the
      UNI along with information needed to identify IP Packets for this UNI
      Access Link. Reference - MEF 61.1.1 Section 13.3
    type: object
    properties:
      demux:
        description: VLAN ID. Empty list represents the "UT/PT".
        type: array
        maxItems: 1
        items:
          $ref: '../../../common/common.yaml#/definitions/VlanId'
  Ospf:
    description: >-
      When an entry in the UNI Routing Protocols is for OSPF, OSPF as specified
      in RFC 2328 (for IPv4) and/or RFC 5340 (for IPv6) is used across each UNI
      Access Link to exchange routing information. Reference - MEF 61.1 Section
      12.7.2.
    type: object
    properties:
      areaId:
        description: Area ID expressed as an IPv4 address.
        $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4Address'
      areaType:
        description: OSPF Area Type enumeration.
        $ref: '#/definitions/OspfAreaType'
      authenticationType:
        description: OSPF Authentication Type.
        $ref: '#/definitions/OspfAuthenticationType'
      helloInterval:
        description: 'Hello interval (0-65535, in seconds)'
        $ref: '#/definitions/TwoOctetInteger'
      deadInterval:
        description: 'Dead interval (0-429496295, in seconds)'
        type: integer
        minimum: 0
        maximum: 429967295
      retransmissionInterval:
        description: 'Retransmit interval (integer greater than 0, in seconds)'
        type: integer
        minimum: 0
      administrativeDistance:
        description: Administrative distance (integer greater than 0)
        type: integer
        minimum: 1
  OspfAreaType:
    description: |
      OSPF Area Type enumeration. Reference - MEF 61.1 Section 12.7.2

      - NORMAL - the Area is not a stub or NSSA (Not So Stubby Area)
      - STUB -  the Area is a stub
      - NSSA - the Area is NSSA (see RFC 3101)
    type: string
    enum:
      - NORMAL
      - STUB
      - NSSA
  OspfAuthenticationType:
    description: >
      Enumeration of possible OSPF Authentication Type. In case other than

      `NONE` is specified additional specific parameters need to be agreed

      between the Buyer and the Seller.


      - NONE - No authentication is used.

      - PASSWORD - the 64-bit clear password is used which is inserted into the
      OSPF packet header

      - MESSAGE_DIGEST - Cryptographic authentication is used as specified in
      RFC 2828
    type: string
    enum:
      - NONE
      - PASSWORD
      - MESSAGE_DIGEST
  PeeringAddress:
    description: >-
      Peering Addresses. Connection Addresses, or Loopbacks plus a list of pairs
      of IP addresses. Reference - MEF 61.1 Section 12.7.3.
    type: object
    properties:
      peeringAddressType:
        description: |
          If the Peering Addresses parameter is CONNECTION_ADDRESSES, a separate
          BGP peering session is established over each UNI Access Link, using
          the primary IPv4 addresses in the UNI Access Link IPv4 Connection
          Addressing Service Attribute (section 13.4) or the first IPv6
          addresses in the UNI Access Link IPv6 Connection Addressing Service
          Attribute (section 13.5), as indicated by the Connection Address
          Family parameter.
          If the Peering Addresses parameter is LOOPBACKS, a list of pairs of IP
          addresses is additionally specified, each pair containing the
          Subscriber's loopback address and the SP's or Operator's loopback
          address. A single BGP peering session is established for each pair of
          addresses.
        $ref: '#/definitions/PeeringAddressType'
      subscriberAndSpLoopbackAddresses:
        description: >-
          A list of pairs of IP addresses, each pair containing the Subscriber's
          loopback address and the SP's or Operator's loopback address. A single
          BGP peering session is established for each pair of addresses.
        type: array
        items:
          $ref: '#/definitions/SubscriberAndSpLoopbackAddresses'
  PeeringAddressType:
    description: >
      If the Peering Addresses parameter is CONNECTION_ADDRESSES, a separate BGP
      peering session is established over each UNI Access Link, using the
      primary IPv4 addresses in the UNI Access Link IPv4 Connection Addressing
      Service Attribute (section 13.4) or the first IPv6 addresses in the UNI
      Access Link IPv6 Connection Addressing Service Attribute (section 13.5),
      as indicated by the Connection Address Family parameter. If the Peering
      Addresses parameter is LOOPBACKS, a list of pairs of IP addresses is
      additionally specified, each pair containing the Subscriber's loopback
      address and the SP's or Operator's loopback address. A single BGP peering
      session is established for each pair of addresses.
    type: string
    enum:
      - CONNECTION_ADDRESSES
      - LOOPBACKS
  RoutingProtocols:
    description: >-
      Data type to support routing protocols and associated parameters that are
      used to exchange IP routes across the UNI. It has three attributes
      allowing for providing configuration of BGP, OSPF and Static routing
      protocols. Reference - MEF 61.1 Section 12.7
    type: object
    properties:
      bgp:
        description: BGP routing protocol configuration options.
        type: array
        maxItems: 1
        items:
          $ref: '#/definitions/RoutingProtocolsBgpOptions'
      ospf:
        description: OSPF routing protocol configuration options.
        type: array
        maxItems: 1
        items:
          $ref: '#/definitions/RoutingProtocolsOspfOptions'
      static:
        description: Static routing configuration options.
        type: array
        maxItems: 1
        items:
          $ref: '#/definitions/Static'
  RoutingProtocolsBgpOptions:
    description: |
      BGP routing protocol configuration options. The configuration of the BGP
      can be provided for the following type of routes that will be exchanged:
      - ipv4, or
      - ipv6, or
      - both, or (one BGP session exchanging both IPv4 and IPv6)
      - ipv4 and ipv6 (separate BGP session for exchanging IPv4 and IPv6)
    type: object
    properties:
      ipv4:
        description: Configuration for exchanging IPv4 types of routes.
        $ref: '#/definitions/Bgp'
      ipv6:
        description: Configuration for exchanging IPv6 types of routes.
        $ref: '#/definitions/Bgp'
      both:
        description: >-
          Common configuration for exchanging both IPv4 and IPv6 types of
          routes.
        $ref: '#/definitions/Bgp'
  RoutingProtocolsOspfOptions:
    description: |
      OSPF routing protocol configuration options. The configuration of the BGP
      can be provided for the following type of routes that will be exchanged:
      - ipv4, or
      - ipv6, or
      - ipv4 and ipv6
    type: object
    properties:
      ipv4:
        description: Configuration for exchanging IPv4 types of routes.
        $ref: '#/definitions/Ospf'
      ipv6:
        description: Configuration for exchanging IPv6 types of routes.
        $ref: '#/definitions/Ospf'
  Static:
    description: >-
      When an entry in the UNI Routing Protocols list is for Static, the IP
      Prefixes used in the Subscriber Network that are reachable via this UNI
      are specified as additional parameters in the entry. These are known as
      Static IP Prefixes. Reference - MEF 61.1 Section 12.7.1.
    type: object
    properties:
      staticIpEntry:
        description: Static IP address entry.
        type: array
        minItems: 1
        items:
          $ref: '#/definitions/StaticIpEntry'
  StaticIpEntry:
    description: >-
      StaticIpEntry data type including IPv4/IPv6 prefixes, forwarding
      information and administrative distance.
    type: object
    properties:
      administrativeDistance:
        description: 'Administrative distance, an integer > 0.'
        type: integer
        minimum: 1
      forwardingInformation:
        description: >-
          Forwarding information with either Next Hop IP address or UNI Access
          Link identifier.
        $ref: '#/definitions/ForwardingInformation'
      staticPrefix:
        description: IPv4 or IPv6 Prefix that is advertised.
        $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4OrIpv6Prefix'
  SubscriberAndSpLoopbackAddresses:
    description: >-
      A list of pairs of IP addresses, each pair containing the Subscriber's
      loopback address and the SP's or Operator's loopback address. A single BGP
      peering session is established for each pair of addresses.
    type: object
    properties:
      subscriberLoopbackAddress:
        description:
          Subscriber's loopback Address for BGP establishing a session
        $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4OrIpv6Address'
      spLoopbackAddress:
        description:
          Service Provider's loopback Address for BGP establishing a session
        $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4OrIpv6Address'
  SubscriberPrefixList:
    description: |
      The value of the Cloud Subscriber Prefix List parameter is empty or a
      2-tuple ?prefixes, origin?, where: 
      - prefixes is a non-empty list of public IP Prefixes that are used
      in the Subscriber Network, and
      - origin is either `SP` or `Other` and indicates whether the
      IP Prefixes are assigned to the Subscriber by the SP or obtained
      by the Subscriber from another source.
      Reference - MEF 61.1 Section 10.13.6. 
      Reference - MEF 61.1.1 Section 10.13
    type: object
    properties:
      prefixes:
        description: >-
          Non-empty list of public IP Prefixes that are used in the Subscriber
          Network
        type: array
        minItems: 1
        items:
          $ref: '../../../common/ip/ipCommon.yaml#/definitions/Ipv4OrIpv6Prefix'
      origin:
        description: >-
          The origin of the IP Prefixes. Either `SP` or `OTHER` and indicates
          whether the IP Prefixes are assigned to the Subscriber by the SP or
          obtained by the Subscriber from another source.
        $ref: '#/definitions/IpPrefixOrigin'
  TwoOctetInteger:
    description: A two octet integer. Value range 0 - 65535
    type: integer
    minimum: 0
    maximum: 65535
  UniAccessLinkEthernetLinkAggregation:
    description: |
      Link Aggregation, as described in IEEE Std. 802.1AX-2020 allows one or
      more parallel instances of full-duplex point-to-point Ethernet links to be
      aggregated to form a Link Aggregation Group (LAG) such that the MAC Client
      (the UNI Access Link) can treat the LAG as if it were a single link.
      Reference - MEF 61.1.1 Section A1-1.3.2
    type: object
    properties:
      lacpVersion:
        description: >-
          The value of LACPv1, LACPv2, or Static and indicates which version of
          the Link Aggregation Control Protocol, LACP, is used. (See clause 6.4
          in IEEE Std 802.1AX-2020 [A1-4].). If the value is Static, LACP is not
          used.
        $ref: '../../../common/common.yaml#/definitions/LacpVersion'
      portMap:
        description: >-
          A list of 2-tuples ?vid, lspl? that represents a VLAN ID to
          Aggregation Link Map (in clause 6.6 of IEEE Std 802.1AX-2020 this is
          referred to as "Admin_Conv_Link_Map"). The first element, vid, is a
          VLAN ID, and the second element, lspl, (Link Selection Priority List)
          is a list of Link Number IDs.
        type: array
        items:
          $ref: '#/definitions/ConversationIdToAggregationLinkMap'
  UniManagementType:
    description: |
      "Enumeration representing the UNI Management Type options.
      Indicates whether the CE is the responsibility of the Subscriber or the
      Service Provider. Reference - MEF 61.1 Section 12.2:

      - SUBSCRIBER_MANAGED - the CE is managed by the Subscriber, and
      the UNI Access Links correspond with the IP Attachment Circuits
      between the CE and the PE
      - PROVIDER_MANAGED - the CE is managed (logically) by the SP,and the
      UNI Access Links correspond with the links from the CE to the devices
      within the Subscriber Network. In this latter case, the IP Attachment
      Circuits between the CE and the PE are internal to the SP Network.
    type: string
    enum:
      - SUBSCRIBER_MANAGED
      - PROVIDER_MANAGED
  Vrid:
    description: >-
      VRID (Virtual Router ID) as defined in RFC 5798 is a number between 1 and
      255
    type: integer
    minimum: 1
    maximum: 255
