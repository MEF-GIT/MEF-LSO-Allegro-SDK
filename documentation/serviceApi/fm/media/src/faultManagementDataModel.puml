@startuml faultManagementDataModel
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

class FaultManagementJob {

    creationDate*: date-time
    href: uri
    id*: string
    lastModifiedDate: date-time
    rejectionReason: string
    state*: FaultManagementJobStateType
}
FaultManagementJob_Create <|-- FaultManagementJob

class FaultManagementJobComplexQuery_Create {

    creationDate.gt: date-time
    creationDate.lt: date-time
    jobPriority: integer
    jobType: JobType
    lastModifiedDate.gt: date-time
    lastModifiedDate.lt: date-time
    outputFormat: OutputFormat
    resultFormat: ResultFormat
    state: FaultManagementJobStateType
}

FaultManagementJobComplexQuery_Create *--> TimeDuration : granularity
FaultManagementJobComplexQuery_Create *--> MonitoredObjectRef : monitoredObject
FaultManagementJobComplexQuery_Create *--> TimeDuration : reportingPeriod
FaultManagementJobComplexQuery_Create *--> ScheduleDefinition : scheduleDefinition
FaultManagementJobComplexQuery_Create *-u-> ServiceSpecificConfiguration : serviceSpecificConfiguration

enum FaultManagementJobStateType {

    acknowledged
    cancelled
    completed
    inProgress
    pending
    pendingCancel
    rejected
    resourcesUnavailable
    scheduled
    suspended
}
class FaultManagementJob_Create {

    description: string
    jobPriority: integer
    jobType*: JobType
    outputFormat*: OutputFormat
    resultFormat*: ResultFormat
}

FaultManagementJob_Create *-->"1" TimeDuration : granularity
FaultManagementJob_Create *-->"1" MonitoredObjectRef : monitoredObject
FaultManagementJob_Create *-->"1" TimeDuration : reportingPeriod
FaultManagementJob_Create *-->"1" ScheduleDefinition : scheduleDefinition
FaultManagementJob_Create *-u->"1" ServiceSpecificConfiguration : serviceSpecificConfiguration


class MonitoredObjectRef {

}

MonitoredObjectRef <|-- EntityRef
MonitoredObjectRef <|-- ServiceFromToRef
MonitoredObjectRef <|-- ServiceRef

class EntityRef {

    @referredType*: string
    entityHref: string
    entityId*: string
    @type*: string
}

class ServiceFromToRef {

    serviceFrom*: object
    serviceTo*: object
    @type*: string
}

class ServiceRef {

    serviceHref: string
    serviceId*: string
    @type*: string
}

class HourRange {

    start*: string
    end*: string
}

enum JobType {

    proactive
    on-demand
    passive
}

enum OutputFormat {

    json
    xml
    avro
    csv
}

class RecurringSchedule {

    second: string
    minute: string
    hour: string
    dayOfMonth: string
    month: string
    dayOfWeek: string
}

RecurringSchedule *-->"*" HourRange : hourRange

enum ResultFormat {

    attachment
    payload
}

class ScheduleDefinition {

    scheduleDefinitionStartTime: date-time
    scheduleDefinitionEndTime: date-time
}

ScheduleDefinition *--> RecurringSchedule : recurringSchedule
ScheduleDefinition *--> TimeDuration : executionDuration

class ServiceSpecificConfiguration {

    @type*: string
}

class TimeDuration {

    timeDurationValue*: integer
    timeDurationUnits*: TimeDurationUnits
}

enum TimeDurationUnits {

    NS
    US
    MS
    SEC
    MIN
    HOUR
    DAY
    WEEK
    MONTH
    YEAR
}

class TrackingRecord {

    creationDate*: date-time
    description: string
    id*: string
    relatedObjectId*: string
    request: string
    system: string
    user: string
}

@enduml
