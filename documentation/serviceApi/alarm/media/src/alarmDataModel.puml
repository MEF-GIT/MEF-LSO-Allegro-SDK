@startuml alarmDataModel
skinparam {
    ClassBackgroundColor White
    ClassBorderColor Black
}

class Alarm {

    externalAlarmId: string
    isRootCause*: boolean
    probableCause: ProbableCause
    sourceSystemId: string
    specificProblem: string
}
Alarm_Common <|-- Alarm

Alarm *-->"1..*" AlarmedObjectRef : alarmedObject
Alarm *-->"*" Comment : comment
Alarm *--> AlarmRef : parentAlarm
Alarm *--> AlarmSpecificAttributes : alarmSpecificAttributes


class AlarmedObjectRef {

    id*: string
    href: string
    @referredType*: string
}



class AlarmRef {

    id*: string
    href: string
}



class AlarmSpecificAttributes {

    @type*: string
}



enum AlarmState {

    acknowledged
    cleared
    un-acknowledged
}
enum AlarmType {

    communicationsAlarm
    processingErrorAlarm
    environmentalAlarm
    qualityOfServiceAlarm
    equipmentAlarm
    integrityViolation
    operationalViolation
    physicalViolation
    securityService
    mechanismViolation
    timeDomainViolation
}
class Alarm_Common {

    id*: string
    href: uri
    alarmChangedTime: date-time
    alarmClearedTime: date-time
    alarmDetails*: string
    alarmedObjectType: string
    alarmRaisedTime*: date-time
    alarmReportingTime*: date-time
    alarmType*: AlarmType
    perceivedSeverity*: PerceivedSeverity
    plannedOutageIndicator: PlannedOutageIndicator
    reportingSystemId: string
    serviceAffecting*: boolean
    state*: AlarmState
}

Alarm_Common *-->"*" ServiceRef : affectedService
Alarm_Common *-->"*" AlarmRef : correlatedAlarm


class Comment {

    description: string
    systemIdentifier: string
    time: date-time
    userIdentifier: string
}

class EventSubscription {

    id: string
}
EventSubscriptionInput <|-- EventSubscription



class EventSubscriptionInput {

    callback*: string
    query: string
}



enum PerceivedSeverity {

    cleared
    critical
    indeterminate
    major
    minor
    warning
}

enum PlannedOutageIndicator {

    inPlannedMaintenance
    outOfService
}
enum ProbableCause {

    adapterError
    applicationSubsystemFailure
    bandwidthReduced
    callEstablishmentError
    communicationsProtocolError
    communicationsSubsystemFailure
    configurationOrCustomizationError
    congestion
    corruptData
    cpuCyclesLimitExceeded
    datasetOrModemError
    degradedSignal
    dteDceInterfaceError
    enclosureDoorOpen
    equipmentMalfunction
    excessiveVibration
    fileError
    fireDetected
    floodDetected
    framingError
    heatingVentilationCoolingSystemProblem
    humidityUnacceptable
    ioDeviceError
    inputDeviceError
    lanError
    leakDetected
    localNodeTransmissionError
    lossOfFrame
    lossOfSignal
    materialSupplyExhausted
    multiplexerProblem
    outOfMemory
    outputDeviceError
    performanceDegraded
    powerProblem
    pressureUnacceptable
    processorProblem
    pumpFailure
    queueSizeExceeded
    receiveFailure
    receiverFailure
    remoteNodeTransmissionError
    resourceNearingCapacity
    responseTimeExcessive
    retransmissionRateExcessive
    softwareError
    softwareProgramTerminated
    softwareProgramError
    storageCapacityProblem
    temperatureUnacceptable
    thresholdCrossed
    timingProblem
    toxicLeakDetected
    transmitFailure
    transmitterFailure
    underlyingResourceUnavailable
    versionMismatch
}
class ServiceRef {

    href: string
    id*: string
}


class TcaStatefulClearAlarm {

    performanceMetricName: string
    performanceMetricValue: number
    tcaPerformanceThresholdValue: number
    tcaWindowThresholdValue: number
    tcaWindowSize: number
}
AlarmSpecificAttributes <|-- TcaStatefulClearAlarm



class TcaStatefulSetAlarm {

    performanceMetricName: string
    performanceMetricValue: number
    tcaPerformanceThresholdValue: number
    tcaWindowThresholdValue: number
    tcaWindowSize: number
}
AlarmSpecificAttributes <|-- TcaStatefulSetAlarm



class TcaStatelessAlarm {

    performanceMetricName: string
    performanceMetricValue: number
    tcaPerformanceThresholdValue: number
    dampingFactor: number
    numberOfPmMetricCalculationIntervals: number
}
AlarmSpecificAttributes <|-- TcaStatelessAlarm



@enduml
