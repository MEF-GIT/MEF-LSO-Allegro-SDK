openapi: 3.0.1
info:
  description: |
    **This file forms part of MEF W148**

    **This API implements part of Business Requirements & Use Cases described
    in MEF W133.1.**

    **This specification represents MEF work in progress and is subject to
    change.**

    MEF Fault Management API allows to manage Fault Management Jobs, collect 
    Fault Management Reports, as well as receive notifications related to these
    entities. This provides the ability for the Buyer/Client to request that 
    the Seller/Server performs actions defined by FM Job, and to retrieve 
    the results of the Job. Examples of the Fault Management Job are Link Trace 
    and Loopback. 

    Two types of entities are supported by the API:
    - **Fault Management Job** - specifies the Fault Management Job
      configuration. FM Job is typically run as part of a troubleshooting or 
      diagnostic process of a service, an ordered pair (e.g., two UNIs), 
      or an entity (e.g., port). 

    - **Fault Management Report** - The execution of Fault Management Job 
      results in Fault Management Reports that provide Buyer/Client with the 
      job results.

    List of use cases supported by the API:
    - Create Fault Management Job
    - Retrieve list of Fault Management Jobs
    - Retrieve Fault Management Job by Identifier
    - Modify Fault Management Job
    - Retrieve list of Modify Fault Management Job
    - Retrieve Modify Fault Management Job by Identifier
    - Cancel Fault Management Job
    - Retrieve list of Cancel Fault Management Job
    - Retrieve Cancel Fault Management Job by Identifier
    - Suspend Fault Management Job
    - Resume Fault Management Job
    - Subscribe to Fault Management Job Notifications
    - Unsubscribe from Fault Management Job Notifications
    - Retrieve list of Fault Management Reports
    - Retrieve Fault Management Report by Identifier
    - Subscribe to Fault Management Report Notifications
    - Unsubscribe from Fault Management Report Notifications

    Copyright 2025 MEF Forum and its contributors

  title: Fault Management
  version: 2.0.0-RC
servers:
  - url: 'https://{serverBase}/mefApi/allegro/faultManagement/v2/'
    variables:
      serverBase:
        default: mef.net
        description: The base of SOF's URL.
tags:
  - name: faultManagementJob
  - name: faultManagementReport
  - name: trackingRecord
  - name: events subscription
paths:
  /faultManagementJob:
    get:
      description: >-
        The Buyer/Client requests a list of FM Jobs based on a set
        of filter criteria. The Seller/Server returns a summarized list of FM 
        Jobs. For each FM Job returned, the Seller/Server also provides a 
        Fault Management Job Identifier that uniquely identifies this FM Job 
        within the Seller/Server. The order of the elements returned to the 
        Buyer/Client is defined by the Seller/Server (e.g. natural order) and
        does not change between the pages.
      operationId: listFaultManagementJob
      parameters:
        - description: >-
            Identifier of a Service.
          explode: true
          in: query
          name: serviceId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of a Service From endpoint.
          explode: true
          in: query
          name: serviceFromId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of a Service To endpoint.
          explode: true
          in: query
          name: serviceToId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of an Entity.
          explode: true
          in: query
          name: entityId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of the Fault Management Job. See `FaultManagementJobStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            $ref: '#/components/schemas/FaultManagementJobStateType'
          style: form
        - description: Date when the job was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Date when the job was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Type of the Fault Management Job.
          explode: true
          in: query
          name: jobType
          required: false
          schema:
            $ref: '#/components/schemas/JobType'
          style: form
        - description: The priority of the Fault Management Job.
          explode: true
          in: query
          name: jobPriority
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: >-
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FaultManagementJob'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Fault Management Job objects.
      tags:
        - faultManagementJob
    post:
      description: >-
        A request initiated by the Buyer/Client to create a Fault Management
        Job in the Seller/Server system.
      operationId: createFaultManagementJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FaultManagementJob_Create'
        description: The Fault Management Job to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FaultManagementJob'
          description: >-
            'Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a Fault Management Job.
      tags:
        - faultManagementJob
  '/faultManagementJob/{id}':
    get:
      description: >-
        The Buyer/Client requests detailed information about a single
        Fault Management Job based on the Job Identifier.
      operationId: retrieveFaultManagementJob
      parameters:
        - description: Identifier of the Fault Management Job.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FaultManagementJob'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Fault Management Job by ID.
      tags:
        - faultManagementJob
  '/faultManagementJob/{id}/resume':
    post:
      description: >-
        A request initiated by the Buyer/Client to resume a Fault Management 
        Job. 
      operationId: resumeFaultManagementJob
      parameters:
        - description: Identifier of the FaultManagementJob.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Resumed
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description:
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Resumes a Fault Management Job
      tags:
        - faultManagementJob
  '/faultManagementJob/{id}/suspend':
    post:
      description: >-
        A request initiated by the Buyer/Client to suspend a Fault Management
        Job.
      operationId: suspendFaultManagementJob
      parameters:
        - description: Identifier of the FaultManagementJob.
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Suspended
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description:
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Suspends a Fault Management Job.
      tags:
        - faultManagementJob
  /cancelFaultManagementJob:
    get:
      description: >-
        The Buyer/Client requests a list of Cancel Fault Management Job
        based on a set of filter criteria.
      operationId: listCancelFaultManagementJob
      parameters:
        - description: >-
            Identifier of Fault Management Job that is a subject of
            CancelFaultManagementJob.
          explode: true
          in: query
          name: faultManagementJobId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of CancelFaultManagementJob. See `FaultManagementJobProcessStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            $ref: '#/components/schemas/FaultManagementJobProcessStateType'
          style: form
        - description: >-
            Date when the CancelFaultManagementJob was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Date when the CancelFaultManagementJob was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
          style: form
        - description: >-
            Requested number of items to be provided in response requested by
            client.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CancelFaultManagementJob'
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find CancelFaultManagementJob objects.
      tags:
        - faultManagementJob
    post:
      description: >-
        A request initiated by the Buyer/Client to cancel 
        a Fault Management Job in the Seller/Server system.
      operationId: createCancelFaultManagementJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CancelFaultManagementJob_Create'
        description: The CancelFaultManagementJob to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelFaultManagementJob'
          description: Created
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error422'
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a Cancel Fault Management Job entity.
      tags:
        - faultManagementJob
  /cancelFaultManagementJob/{id}:
    get:
      description: >-
        The Buyer/Client requests detailed information about a single Cancel
        Fault Management Job based on the Cancel Fault Management Job 
        Identifier.
      operationId: retrieveCancelFaultManagementJob
      parameters:
        - description: Identifier of the CancelFaultManagementJob.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelFaultManagementJob'
          description: Success
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a CancelFaultManagementJob by ID.
      tags:
        - faultManagementJob
  /modifyFaultManagementJob:
    get:
      description: >-
        The Buyer/Client requests a list of Modify Fault Management Job
        based on a set of filter criteria.
      operationId: listModifyFaultManagementJob
      parameters:
        - description: >-
            Identifier of Fault Management Job that is a subject of
            ModifyFaultManagementJob.
          explode: true
          in: query
          name: faultManagementJobId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of ModifyFaultManagementJob See `FaultManagementJobProcessStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            $ref: '#/components/schemas/FaultManagementJobProcessStateType'
          style: form
        - description: >-
            Date when the ModifyFaultManagementJob was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Date when the ModifyFaultManagementJob was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
            format: int32
          style: form
        - description: >-
            Requested number of items to be provided in response requested by
            client.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            type: integer
            format: int32
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ModifyFaultManagementJob'
          description: Success
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find ModifyFaultManagementJob objects.
      tags:
        - faultManagementJob
    post:
      description: >-
        A request initiated by the Buyer/Client to modify a Fault Management 
        Job in the Seller/Server system.
      operationId: createModifyFaultManagementJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ModifyFaultManagementJob_Create'
        description: The ModifyFaultManagementJob to be created.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyFaultManagementJob'
          description: Created
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Error422'
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Creates a Modify Fault Management Job entity.
      tags:
        - faultManagementJob
  /modifyFaultManagementJob/{id}:
    get:
      description: >-
        The Buyer/Client requests detailed information about a single Modify
        Fault Management Job based on the Modify Fault Management Job 
        Identifier.
      operationId: retrieveModifyFaultManagementJob
      parameters:
        - description: Identifier of the ModifyFaultManagementJob.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyFaultManagementJob'
          description: Success
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a ModifyFaultManagementJob by ID.
      tags:
        - faultManagementJob
  /faultManagementJobComplexQuery:
    post:
      description: >-
        A request initiated by the Buyer/Client to execute a Fault Management
        Job Complex Query in the Seller/Server system.
      operationId: faultManagementJobComplexQuery
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FaultManagementJobComplexQuery_Create'
        description: The FaultManagementJobComplexQuery to be executed.
        required: true
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FaultManagementJob'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Executes a FaultManagementJobComplexQuery.
      tags:
        - faultManagementJob
  /faultManagementReport:
    get:
      description: >-
        The Buyer/Client requests a list of Fault Management Reports based 
        on a set of filter criteria. The Seller/Server returns a summarized
        list of FM Reports. For each FM Report returned, the Seller/Server also
        provides a Fault Management Report Identifier that uniquely identifies
        this FM Report within the Seller/Server. The order of the elements 
        returned to the Buyer/Client is defined by the Seller/Server 
        (e.g. natural order) and does not change between the pages.
      operationId: listFaultManagementReport
      parameters:
        - description: >-
            Identifier of Fault Management Job that generated Fault Management
            Report.
          explode: true
          in: query
          name: faultManagementJobId
          required: false
          schema:
            type: string
          style: form
        - description: Identifier of a Service From endpoint.
          explode: true
          in: query
          name: serviceFromId
          required: false
          schema:
            type: string
          style: form
        - description: Identifier of a Service To endpoint.
          explode: true
          in: query
          name: serviceToId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Identifier of a Service.
          explode: true
          in: query
          name: serviceId
          required: false
          schema:
            type: string
          style: form
        - description: Identifier of a Entity.
          explode: true
          in: query
          name: entityId
          required: false
          schema:
            type: string
          style: form
        - description: >-
            State of the Fault Management Report. See `FaultManagementReportStateType`
            definition for details.
          explode: true
          in: query
          name: state
          required: false
          schema:
            $ref: '#/components/schemas/FaultManagementReportStateType'
          style: form
        - description: Date when the report was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Date when the report was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Start date of reporting timeframe - greater than.
          explode: true
          in: query
          name: reportingTimeframe.startDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Start date of reporting timeframe - lower than.
          explode: true
          in: query
          name: reportingTimeframe.startDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: End date of reporting timeframe - greater than.
          explode: true
          in: query
          name: reportingTimeframe.endDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: End date of reporting timeframe - lower than.
          explode: true
          in: query
          name: reportingTimeframe.endDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Format of report output.
          explode: true
          in: query
          name: outputFormat
          required: false
          schema:
            $ref: '#/components/schemas/OutputFormat'
          style: form
        - description: Type of providing report results.
          explode: true
          in: query
          name: resultFormat
          required: false
          schema:
            $ref: '#/components/schemas/ResultFormat'
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: >-
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FaultManagementReport_Find'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Fault Management Report objects.
      tags:
        - faultManagementReport
  '/faultManagementReport/{id}':
    get:
      description: >-
        The Buyer/Client requests detailed information about a single 
        Fault Management Report based on the Report Identifier.
      operationId: retrieveFaultManagementReport
      parameters:
        - description: >-
            Identifier of the Fault Management Report to be retrieved.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FaultManagementReport'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Fault Management Report by ID.
      tags:
        - faultManagementReport
  /faultManagementReportComplexQuery:
    post:
      description: >-
        A request initiated by the Buyer/Client to execute a Fault Management
        Report Complex Query in the Seller/Server system.
      operationId: faultManagementReportComplexQuery
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FaultManagementReportComplexQuery_Create'
        description: The FaultManagementReportComplexQuery to be executed.
        required: true
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FaultManagementReport_Find'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Executes a FaultManagementReportComplexQuery.
      tags:
        - faultManagementReport
  /trackingRecord:
    get:
      description: >-
        The Buyer/Client requests a list of Tracking Records based on a set of
        filter criteria. The Seller/Server returns a list of Tracking Records. 
        Tracking Record allows for tracking of modifications performed on 
        a Fault Management Job or Report.
      operationId: listTrackingRecord
      parameters:
        - description: >-
            Identifier of Fault Management Job or Fault Management Report.
          explode: true
          in: query
          name: relatedObjectId
          required: false
          schema:
            type: string
          style: form
        - description: Date when the record was created - greater than.
          explode: true
          in: query
          name: creationDate.gt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: Date when the record was created - lower than.
          explode: true
          in: query
          name: creationDate.lt
          required: false
          schema:
            format: date-time
            type: string
          style: form
        - description: >-
            User that executed the action which created a Tracking Record.
          explode: true
          in: query
          name: user
          required: false
          schema:
            type: string
          style: form
        - description: >-
            Requested index for start of item to be provided in response
            requested by the client. Note that the index starts with "0".
          explode: true
          in: query
          name: offset
          required: false
          schema:
            type: integer
          style: form
        - description: >-
            Requested number of resources to be provided in response.
          explode: true
          in: query
          name: limit
          required: false
          schema:
            format: int32
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TrackingRecord'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
          headers:
            X-Pagination-Throttled:
              description: >-
                Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be
                fetched.
              explode: false
              schema:
                type: boolean
              style: simple
            X-Total-Count:
              description: >-
                The total number of matching items. E.g. if there are 50
                matching items in total, but the request has offset=10 and
                limit=10, then the X-Total-Count is 50.
              explode: false
              schema:
                type: integer
              style: simple
            X-Result-Count:
              description: The number of items included in the response.
              explode: false
              schema:
                type: integer
              style: simple
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '422':
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: >-
            Unprocessable entity due to the business validation problems.
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: List or find Tracking Record objects.
      tags:
        - trackingRecord
  '/trackingRecord/{id}':
    get:
      description: >-
        The Buyer/Client requests detailed information about a single Tracking
        Record based on the Tracking Record Identifier.
      operationId: retrieveTrackingRecord
      parameters:
        - description: Identifier of the Tracking Record.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TrackingRecord'
          description: >-
            'OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      summary: Retrieves a Tracking Record by ID.
      tags:
        - trackingRecord
  /hub:
    post:
      description: >-
        The Buyer/Client requests to subscribe to Fault Management Job 
        or Fault Management Report Notifications.
      operationId: registerListener
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        description: >-
          Data containing the callback endpoint to deliver the information.
        required: true
      responses:
        '201':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Subscribed
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Register a listener
      tags:
        - events subscription
  '/hub/{id}':
    delete:
      description: >-
        The Buyer/Client requests to unsubscribe from Fault Management Job or 
        Fault Management Report Notifications.
      operationId: unregisterListener
      parameters:
        - description: The id of the registered listener.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '204':
          description: Deleted
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Unregister a listener
      tags:
        - events subscription
    get:
      description: >-
        The Buyer/Client requests detailed information about 
        a single Notification Hub based on the Hub Identifier.
      operationId: retrieveHub
      parameters:
        - description: Identifier of the Hub.
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Success
        '400':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        '401':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        '403':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        '404':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        '500':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        '501':
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      summary: Retrieves a Hub by ID.
      tags:
        - events subscription
components:
  schemas:
    AttachmentURL:
      type: object
      description: The URL pointing to an Attachment for download.
      properties:
        retentionPeriod:
          type: string
          format: date-time
          description: A date until which the file will be retained.
        url:
          type: string
          format: uri
          description: The URL pointing to an Attachment for download.
      required:
        - url
    CancelFaultManagementJob:
      allOf:
        - $ref: '#/components/schemas/CancelFaultManagementJob_Create'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date when the Cancel Fault Management Job was created.
            href:
              type: string
              description: Hyperlink to the Cancel Fault Management Job entity.
            id:
              type: string
              description: >-
                Unique identifier for the Cancel Fault Management Job that is generated
                by the Seller/Server when the Cancel Fault Management Job request 
                `state` is set to `acknowledged`.
            state:
              $ref: '#/components/schemas/FaultManagementJobProcessStateType'
              description: |-
                The state of the process related to the Fault Management Job.
          required:
            - creationDate
            - id
            - state
      description: Request for cancellation of an existing Fault Management Job.
    CancelFaultManagementJob_Create:
      type: object
      description: Request for cancellation of an existing Fault Management Job.
      properties:
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
          description: A reference to a Fault Management Job resource.
      required:
        - faultManagementJob
    EntityRef:
      type: object
      description: >-
        Reference to Entity.
      properties:
        '@referredType': 
          type: string
          description: >-
            The type of the referred object. This is used to distinguish
            between different types of objects that can be referred to by
            the EntityId.
        entityHref:
          type: string
          description: >-
            Hyperlink to the Entity resource. This is used to provide a link
            to the Entity resource in the Seller/Server system.
        entityId:
          type: string
          description: Identifier of an Entity.
        '@type':
          description:
            Used to unambiguously designate the class type when using `oneOf`
          type: string
          enum:
            - EntityRef
      required:
        - '@type'
        - '@referredType'
        - entityId
    Error:
      type: object
      description: >-
        Standard Class used to describe API response error Not intended to be
        used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        message:
          type: string
          description: >-
            Text that provides more details and corrective actions related to
            the error. This can be shown to a client user.
        reason:
          type: string
          description: >-
            Text that explains the reason for the error. This can be shown to a
            client user.
          maxLength: 255
        referenceError:
          type: string
          description: URL pointing to documentation describing the error.
          format: uri
      required:
        - reason
    Error400:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error400Code'
              description: Error code
          required:
            - code
      description: >-
        'Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'
    Error400Code:
      type: string
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string 
          parameter.
        - missingQueryValue: The URI is missing a required query-string 
          parameter value.
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body.
      enum:
        - missingQueryParameter
        - missingQueryValue
        - invalidQuery
        - invalidBody
    Error401:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error401Code'
              description: Error code
          required:
            - code
      description: >-
        'Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'
    Error401Code:
      type: string
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired.
      enum:
        - missingCredentials
        - invalidCredentials
    Error403:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error403Code'
              description: Error code
          required:
            - code
      description: >-
        Forbidden. This code indicates that the server understood the request
        but refused to authorize it.
        (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      type: string
      description: >-
        This code indicates that the server understood the request but refuses 
        to authorize it because of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users.
      enum:
        - accessDenied
        - forbiddenRequester
        - tooManyUsers
    Error404:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notFound: A current representation of the target resource 
                  not found.
              enum:
                - notFound
          required:
            - code
      description: >-
        Resource for the requested path not found.
        (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error422:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              $ref: '#/components/schemas/Error422Code'
            propertyPath:
              type: string
              description: >-
                A pointer to a particular property of the payload that caused
                the validation issue. It is highly recommended that this
                property should be used.

                Defined using JavaScript Object Notation (JSON) Pointer
                (https://tools.ietf.org/html/rfc6901).
          required:
            - code
      description: >-
        Unprocessable entity due to a business validation problem.
        (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      type: string
      description: |-
        One of the following error codes:
        - missingProperty: The property that was expected is not present in the
          payload.
        - invalidValue: The property has an incorrect value.
        - invalidFormat: The property value does not comply with the expected 
          value format.
        - referenceNotFound: The object referenced by the property cannot be 
          identified in the target system.
        - unexpectedProperty: Additional, not expected property has been 
          provided.
        - tooManyRecords: The number of records to be provided in the response
          exceeds the threshold.
        - otherIssue: Other problem was identified (detailed information
          provided in a reason).
      enum:
        - missingProperty
        - invalidValue
        - invalidFormat
        - referenceNotFound
        - unexpectedProperty
        - tooManyRecords
        - otherIssue
    Error500:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: >-
                The following error code:
                - internalError: Internal server error - the server encountered
                an unexpected condition that prevented it from fulfilling the
                request.
              enum:
                - internalError
          required:
            - code
      description: >-
        Internal Server Error.
        (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Error501:
      allOf:
        - $ref: '#/components/schemas/Error'
        - type: object
          properties:
            code:
              type: string
              description: |-
                The following error code:
                - notImplemented: Method not supported by the server.
              enum:
                - notImplemented
          required:
            - code
      description: >-
        Not Implemented. Used in case Seller is not supporting an optional
        operation. (https://tools.ietf.org/html/rfc7231#section-6.6.2)
    EventSubscription:
      type: object
      description: >-
        This resource is used to respond to notification subscriptions.
      properties:
        callback:
          type: string
          description: >-
            The value provided by the `EventSubscriptionInput` during
            notification registration.
        id:
          type: string
          description: >-
            An identifier of this Event Subscription assigned when a resource
            is created.
        query:
          type: string
          description: >-
            The value provided by the `EventSubscriptionInput` during
            notification registration.
      required:
        - callback
        - id
    EventSubscriptionInput:
      type: object
      description: This class is used to register for Notifications.
      properties:
        callback:
          type: string
          description: >-
            This callback value must be set to the *host* property from Fault 
            Management Notification API (faultNotification.api.yaml). This
            property is appended with the base path and notification resource
            path specified in that API to construct a URL to which
            notification is sent. E.g. for 'callback': 
            "https://buyer.mef.com/listenerEndpoint", the Fault Management Job state
            change event notification will be sent to
            `https://buyer.mef.com/listenerEndpoint/mefApi/allegro/faultManagement/v2/listener/faultManagementJobStateChangeEvent`
        query:
          type: string
          description: >-
            This attribute is used to define which type of events to
            register to. Example: 'query':'eventType = 
            faultManagementReportStateChangeEvent'. To subscribe for more than one
            event type, put the values separated by a comma:
            `eventType=faultManagementReportStateChangeEvent,faultManagementJobCreateEvent`.
            The possible values are enumerated by Event type enums in
            faultNotification.api.yaml. An empty query is treated as
            specifying no filters - ending in subscription for all event types.
      required:
        - callback
    FaultManagementJob:
      allOf:
        - $ref: '#/components/schemas/FaultManagementJob_Create'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date when the Fault Management Job was created.
            href:
              type: string
              format: uri
              description: Hyperlink reference
            id:
              type: string
              description: Unique identifier
            lastModifiedDate:
              type: string
              format: date-time
              description: Date when the job was last modified.
            rejectionReason:
              type: string
              description: Reason in case creation request was rejected.
            state:
              $ref: '#/components/schemas/FaultManagementJobStateType'
              description: The state of the Fault Management Job.
          required:
            - creationDate
            - id
            - state
          description: >-
            A Fault Management Job specifies the configuration of the job to be
            executed by Seller/Server as part of the troubleshooting or 
            diagnostic process of a service, an ordered pair (e.g., two UNIs), 
            or an entity (e.g., port).
    FaultManagementJobComplexQuery_Create:
      type: object
      description: >-
        Fault Management Job Complex Query entity is used to perform 
        searches on Fault Management Job entities, including clauses
        based on ScheduleDefinition and ServiceSpecificConfiguration.
      properties:
        creationDate.gt:
          type: string
          format: date-time
          description: Date when the Fault Management Job was created - greater than.
        creationDate.lt:
          type: string
          format: date-time
          description: Date when the Fault Management Job was created - lower than.
        granularity:
          $ref: '#/components/schemas/TimeDuration'
          description: >-
            Sampling rate of the collection or production of Fault Management
            Job results.
        jobPriority:
          type: integer
          default: 5
          description: >-
            The priority of the Fault Management Job. The way the management
            application will use the Job priority to schedule Job execution
            is application-specific and out the scope.
        jobType:
          $ref: '#/components/schemas/JobType'
          description: The type of FM Job.
        lastModifiedDate.gt:
          type: string
          format: date-time
          description: Date when the Fault Management Job was last modified - greater than.
        lastModifiedDate.lt:
          type: string
          format: date-time
          description: Date when the Fault Management Job was last modified - lower than.
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
          description: >-
            Defines the reference to object which is a subject of fault
            management.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: 
            List of possible output formats for the Fault Management Report.
        reportingPeriod:
          $ref: '#/components/schemas/TimeDuration'
          description: Defines the interval for the report generation.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Fault Management Report to the Buyer/Client.
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
          description: >-
            ServiceSpecificConfiguration is used as an extension point for 
            MEF-specific service fault management configuration. 
        state:
          $ref: '#/components/schemas/FaultManagementJobStateType'
          description: The state of the Fault Management Job.
    FaultManagementJobProcessStateType:
      type: string
      description: |-
        The state of the process related to the Fault Management Job

        | state          | MEF 133.1 name | Description                                                                                                                                                                                                                                                                                                                                                                                                                                          |
        | -------------- | -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `acknowledged` | Acknowledged   | The Cancel/Modify Fault Management Job request has been received by the Seller/Server and has passed basic validation. Fault Management Job Process Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the request moves to the In-Progress state. If not all attributes are validated, the request moves to the Rejected state. |
        | `completed`    | Completed      | The Cancel/Modify Fault Management Job request has been completed by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                              |
        | `inProgress`   | In-Progress    | The Cancel/Modify Fault Management Job request has been validated and accepted by the Seller/Server and is in-progress.                                                                                                                                                                                                                                                                                                                              |
        | `rejected`     | Rejected       | The Cancel/Modify Fault Management Job request has failed validation and has been declined by the Seller/Server.                                                                                                                                                                                                                                                                                                                                     |

      enum:
      - acknowledged
      - completed
      - inProgress
      - rejected
    FaultManagementJobRef:
      type: object
      description: A reference to a Fault Management Job resource.
      properties:
        faultManagementJobHref:
          type: string
          description: Hyperlink to the referenced Fault Management Job.
        faultManagementJobId:
          type: string
          description: Identifier of the referenced Fault Management Job.
      required:
        - faultManagementJobId
    FaultManagementJobStateType:
      type: string
      description: |-
        The state of the Fault Management Job.

        | state                   | MEF 133.1 name          | Description|
        | ----------------------- | ----------------------- ||
        | `acknowledged`          | Acknowledged            | A Create Fault Management Job request has been received by the Seller/Server and has passed basic validation. Fault Management Job Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated the request determines if the start time is immediate or scheduled. If immediate, the Fault Management Job moves to the In-progress state. If scheduled, the Fault Management Job moves to the Scheduled state. If not all attributes are validated, the request moves to the Rejected state.                                                                           |
        | `cancelled`             | Cancelled               | A Fault Management Job that is In-Progress, Suspended, or Scheduled is cancelled|
        | `completed`             | Completed               | A non-recurring Fault Management Job finished execution|
        | `inProgress`            | In-Progress             | A Fault Management Job is running. Upon completion of the Job, a determination if the Fault Management Job is a one-time Job or is recurring is performed. If the Fault Management Job is a one-time Job, the state of the Fault Management Job moves to the Completed state. If the Fault Management Job is recurring, the Fault Management Job circles back to determine if it has an immediate start time or a scheduled start time. If a Suspend Fault Management Job request is accepted, the Job moves to the Suspended state. If a Cancel Fault Management Job request is accepted, the Job moves to the Cancelled state.                                                 |
        | `pending`               | Pending                 | A Modify Fault Management Job request has been accepted by the Seller/Server. The Fault Management Job remains Pending while updates to the Job are completed. Once updates are complete, the Job returns to the Scheduled or In-Progress status depending on the schedule definition.                                                                                                                                                                                                                                                                                                                                                                                           |
        | `pendingCancel`         | Pending Cancel          | A Cancel Fault Management Job request has been accepted by the Seller/Server. The Fault Management Job remains Pending Cancel while resources used by the Job are being released. Once updates are complete, the Job moves to the Cancelled status.                                                                                                                                                                                                                                                                                                                                                                                                                              |
        | `rejected`              | Rejected                | A Create Fault Management Job request fails validation and is rejected with error indications by the Seller/Server|
        | `resourcesUnavailable`  | Resources Unavailable   | A Fault Management Job cannot be allocated necessary resources when moving to execution (In-Progress state|
        | `scheduled`             | Scheduled               | A Fault Management Job is created that does not have an immediate start time. The Fault Management Job stays Scheduled until the start time is reached. The Fault Management Job then moves to In-Progress. If the Cancel Fault Management Job request is accepted, the Job moves to the Cancelled state. If the Modify Fault Management Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                                                                            |
        | `suspended`             | Suspended               | A Suspend Fault Management Job request is accepted by the Seller/Server. The Job remains Suspended until a Resume Fault Management Job request is accepted by the Seller/Server at which time the Job returns to the In-Progress state. If the Cancel Fault Management Job request is accepted, the Job moves to the Cancelled state. If the Modify Fault Management Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                                                |
      enum:
        - acknowledged
        - cancelled
        - completed
        - inProgress
        - pending
        - pendingCancel
        - rejected
        - resourcesUnavailable
        - scheduled
        - suspended
    FaultManagementJob_Create:
      type: object
      description: >-
        A Fault Management Job specifies the configuration of FM Job to be
        performed on a service, an ordered pair (e.g., two UNIs), or an entity
        (e.g., port) by the Seller/Server. 
      properties:
        description:
          type: string
          description: A free-text description of the Fault Management Job.
        granularity:
          $ref: '#/components/schemas/TimeDuration'
          description: >-
            Sampling rate of the collection or production of Fault Management
            Job results.
        jobPriority:
          type: integer
          default: 5
          description: >-
            The priority of the Fault Management Job. The way the management
            application will use the Job priority to schedule Job execution
            is application-specific and out the scope.
        jobType:
          $ref: '#/components/schemas/JobType'
          description: The type of FM Job.
        monitoredObject: 
          $ref: '#/components/schemas/MonitoredObjectRef'
          description: >-
            Defines the reference to object which is a subject of fault
            management.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: 
            List of possible output formats for the Fault Management Report.
        reportingPeriod:
          $ref: '#/components/schemas/TimeDuration'
          description: Defines the interval for the report generation.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Fault Management Report to the Buyer/Client.
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
          description: >-
            ServiceSpecificConfiguration is used as an extension point for 
            MEF-specific service fault management configuration.
      required:
        - granularity
        - jobType
        - monitoredObject
        - outputFormat
        - reportingPeriod
        - resultFormat
        - scheduleDefinition
        - serviceSpecificConfiguration
    FaultManagementReport:
      type: object
      description: >-
        The execution of Fault Management Job creates FM Reports that
        provide Buyer/Client with the results of the Job.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the Fault Management Report was created.
        description:
          type: string
          description: A free-text description of the Fault Management Report.
        failureReason:
          type: string
          description: Reason in case report generation failed.
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
          description: A reference to a Fault Management Job resource.
        granularity:
          $ref: '#/components/schemas/TimeDuration'
          description: >-
            Sampling rate of the collection or production of Fault Management
            Job results.
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: Unique identifier
        lastModifiedDate:
          type: string
          format: date-time
          description: Date when the report was last modified.
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
          description: >-
            Defines the reference to object which is a subject of fault
            management.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Fault Report.
        reportContent:
          type: array
          items:
            $ref: '#/components/schemas/ReportContentItem'
        reportingTimeframe:
          $ref: '#/components/schemas/ReportingTimeframe'
          description: >-
            Specifies the date range between which data points will be included
            in the report.
        reportUrl:
          $ref: '#/components/schemas/AttachmentURL'
          description: >- 
            The URL pointing to an Attachment for download.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Fault Report to the Buyer/Client.
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
          description: >-
            ServiceSpecificConfiguration is used as an extension point for 
            MEF-specific fault management configuration. 
        state:
          $ref: '#/components/schemas/FaultManagementReportStateType'
          description: |-
            Possible values for the state of a Fault Management Report.
      required:
        - creationDate
        - faultManagementJob
        - granularity
        - id
        - monitoredObject
        - outputFormat
        - reportingTimeframe
        - resultFormat
        - serviceSpecificConfiguration
        - state
    FaultManagementReportComplexQuery_Create:
      type: object
      description: >-
        Fault Management Report Complex Query entity is used to perform 
        searches on Fault Management Report entities, including clauses
        based on ServiceSpecificConfiguration.
      properties:
        creationDate.gt:
          type: string
          format: date-time
          description: Date when the Fault Management Report was created - greater than.
        creationDate.lt:
          type: string
          format: date-time
          description: Date when the Fault Management Report was created - lower than.
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
          description: >-
            Defines the reference to Fault Management Job.
        granularity:
          $ref: '#/components/schemas/TimeDuration'
          description: >-
            Sampling rate of the collection or production of Fault Management
            Job results.
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
          description: >-
            Defines the reference to object which is a subject of fault 
            management.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: 
            List of possible output formats for the Fault Management Report.
        reportingTimeframe.startDate.gt:
          type: string
          format: date-time
          description: Start date of reporting timeframe - greater than.
        reportingTimeframe.startDate.lt:
          type: string
          format: date-time
          description: Start date of reporting timeframe - lower than.
        reportingTimeframe.endDate.gt:
          type: string
          format: date-time
          description: End date of reporting timeframe - greater than.
        reportingTimeframe.endDate.lt:
          type: string
          format: date-time
          description: End date of reporting timeframe - lower than.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Fault Management Report to the Buyer/Client.
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
          description: >-
            ServiceSpecificConfiguration is used as an extension point for 
            MEF-specific service fault management configuration.
        state:
          $ref: '#/components/schemas/FaultManagementReportStateType'
          description: |-
            Possible values for the state of a Fault Management Report.
    FaultManagementReportStateType:
      type: string
      description: |-
        Possible values for the state of a Fault Management Report.

        | State          | MEF 133.1 name | Description                                                                                                                                                                                                                                                                                                                                                                                       |
        | -------------- | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `acknowledged` | Acknowledged   | A Fault Management Report is created by the Seller/Server. Fault Management Report Identifier is assigned in the Acknowledged state. The report remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the Fault Management Report moves to the In-Progress state. If not all attributes are validated, the report moves to the Rejected state. |
        | `completed`    | Completed      | A Fault Management Report is completed and results are available.                                                                                                                                                                                                                                                                                                                                 |
        | `failed`       | Failed         | A Fault Management Report processing has failed.                                                                                                                                                                                                                                                                                                                                                  |
        | `inProgress`   | In-Progress    | A Fault Management Report processing has started.                                                                                                                                                                                                                                                                                                                                                 |
        | `rejected`     | Rejected       | This state indicates that the request failed to meet validation rules for `FaultManagementReport` delivery (processing).                                                                                                                                                                                                                                                                          |
      enum:
        - acknowledged
        - completed
        - failed
        - inProgress
        - rejected
    FaultManagementReport_Find:
      type: object
      description: >-
        This class represents a single list item for the response of
        the `listFaultManagementReport` operation.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the report was created.
        description:
          type: string
          description: A free-text description of the Fault Management Report.
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
          description: A reference to a Fault Management Job resource.
        granularity:
          $ref: '#/components/schemas/TimeDuration'
          description: >-
            Sampling rate of the collection or production of Fault Management
            Job results.
        id:
          type: string
          description: Unique identifier
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
          description: >-
            Defines the reference to object which is a subject of fault
            management.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Fault Report.
        reportingTimeframe:
          $ref: '#/components/schemas/ReportingTimeframe'
          description: >-
            Specifies the date range between which data points will be included
            in the report.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Fault Report to the Buyer/Client.
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
          description: >-
            ServiceSpecificConfiguration is used as an extension point for 
            MEF-specific fault management configuration. 
        state:
          $ref: '#/components/schemas/FaultManagementReportStateType'
          description: |-
            Possible values for the state of a Fault Management Report.
      required:
        - creationDate
        - faultManagementJob
        - granularity
        - id
        - monitoredObject
        - outputFormat
        - reportingTimeframe
        - resultFormat
        - serviceSpecificConfiguration
        - state
    HourRange:
      type: object
      description: Defines start and end time.
      properties:
        start:
          type: string
          pattern: '^(?:[01]\d|2[0-3]):[0-5]\d(:[0-5]\d)?$'
          description: Start time in format HH24:mm or HH24:mm:ss.
        end:
          type: string
          pattern: '^(?:[01]\d|2[0-3]):[0-5]\d(:[0-5]\d)?$'
          description: End time in format HH:mm or HH:mm:ss.
      required:
        - start
        - end
    JobType:
      type: string
      description: >- 
        The type of a Job.
        Proactive jobs are carried on continuously to permit timely reporting
        of fault or performance status. On-demand jobs are actions that are 
        initiated for a limited time to carry out the measurements. Passive 
        jobs support the collection and reporting of network and service
        statistics/faults.
      enum:
        - proactive
        - on-demand
        - passive
    MeasurementTime:
      type: object
      description: >-
        Timeframe boundary for collected data. Provide measurementStartDate and
        measurementEndDate or measurementStartDate and measurementInterval.
      properties:
        measurementStartDate:
          type: string
          format: date-time
          description: >-
            Start date of the period to which collected data
            points belong.
        measurementEndDate:
          type: string
          format: date-time
          description: >-
            End date of the period to which collected data
            points belong.
        measurementInterval:
          $ref: '#/components/schemas/TimeDuration'
          description: Length of the measurement interval.
      required:
        - measurementStartDate
    ModifyFaultManagementJob:
      allOf:
        - $ref: '#/components/schemas/ModifyFaultManagementJob_Create'
        - type: object
          properties:
            creationDate:
              type: string
              format: date-time
              description: Date when the Modify Fault Management Job was created.
            href:
              type: string
              description: Hyperlink to the Modify Fault Management Job entity.
            id:
              type: string
              description: >-
                Unique identifier for the Modify Fault Management Job that is generated
                by the Seller/Server when the Modify Fault Management Job request 
                `state` is set to `acknowledged`.
            state:
              $ref: '#/components/schemas/FaultManagementJobProcessStateType'
              description: |-
                The state of the process related to the Fault Management Job.
          required:
            - creationDate
            - id
            - state
      description: Request for modification of an existing Fault Management Job.
    ModifyFaultManagementJob_Create:
      type: object
      description: Request for modification of an existing Fault Management Job.
      properties:
        description:
          type: string
          description: A free-text description of the Fault Management Job.
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
          description: A reference to a Fault Management Job resource.
        granularity:
          $ref: '#/components/schemas/TimeDuration'
          description: >-
            Sampling rate of the collection or production of Fault Management
            Job results.
        jobPriority:
          type: integer
          default: 5
          description: >-
            The priority of the Fault Management Job. The way the management
            application will use the Job priority to schedule Job execution is
            application-specific and out the scope.
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
          description: >-
            List of possible output formats for the Fault Management Report.
        reportingPeriod:
          $ref: '#/components/schemas/TimeDuration'
          description: Defines the interval for the report generation.
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
          description: >-
            List of possible result formats that define how Seller/Server will
            deliver Fault Management Report to the Buyer/Client.
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
          description: The schedule definition for running jobs.
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
          description: >-
            ServiceSpecificConfiguration is used as an extension point for 
            MEF-specific service fault management configuration. 
      required:
        - faultManagementJob
    MonitoredObjectRef: 
      type: object
      description: >-
        Defines the reference to object which is a subject of fault
        management.
      discriminator:
        propertyName: '@type'
        mapping: 
          EntityRef: '#/components/schemas/EntityRef'
          ServiceFromToRef: '#/components/schemas/ServiceFromToRef'
          ServiceRef: '#/components/schemas/ServiceRef'
      oneOf:
        - $ref: '#/components/schemas/EntityRef'
        - $ref: '#/components/schemas/ServiceFromToRef'
        - $ref: '#/components/schemas/ServiceRef'
    OutputFormat:
      type: string
      description: >-
        List of possible output formats for the Report.
      enum:
        - json
        - xml
        - avro
        - csv
    RecurringSchedule:
      type: object
      description: >-
        A definition of recurring schedule to run a job based on the Cron 
        utility in Linux-like systems. It defines how the job should 
        periodically run at specified times, dates, or intervals. 
      properties:
        second:
          type: string
          description: >- 
            A definition of time (seconds) to run a job. Allowed values: 0-59, 
            and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list separator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - */5 * * * * * -> run a job at every 5th second. 
              - */30 */1 * * * * -> run a job at every 30 seconds 
                past every minute.
        minute:
          type: string
          description: >-
            A definition of time (minutes) to run a job. Allowed values: 0-59, 
            and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list separator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 */10 * * * * -> run a job at every 10th minute. 
              - 0 */30 0 * * * -> run a job at every 30th minute past midnight.
              - 0 */30 8 * * 1 -> run a job at every 30th minute 
                past hour 8 on Monday.
        hour:
          type: string
          description: >-
            A definition of time (hour) to run a job. Allowed values: 0-23, 
            and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list separator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 0 10 10 * * -> run a job at 10 am on 10th day of every month. 
              - 0 * 1,2 * * * -> run a job at every minute past hour 1 and 2.
              - 0 0 */2 * * * -> run a job at every 2nd hour.
        dayOfMonth: 
          type: string
          description: >-
            A definition of time (day of month) to run a job. 
            Allowed values: 1-31, and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list separator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 0 0 1,5,10,15 * * -> run a job at midnight 
                on every 1st, 5th, 10th, 15th day of month. 
              - 0 0 */1 1-10 1-3 * -> run a job at every full hour between 1st 
                and 10th day of month in January, February, and March.
        month: 
          type: string
          description: >-
            A definition of time (month) to run a job. Allowed
            values: 1-12 or JAN-DEC, and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list separator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 5 0 * 8 * -> run a job at 00:05 on every day in August. 
              - 0 0 0,12 1 */2 * -> run a job at midnight and noon 
                on every 1st day of every 2nd month.
        dayOfWeek:
          type: string
          description: >-
            A definition of time (day of week) to run a job. Allowed
            values: 0-6 or SUN-SAT, and special characters: (,-*/), where:
              - `*` -> any value
              - `,` -> value list separator
              - `-` -> range of values
              - '/' -> step values
            For example:
              - 0 0 22 * * 1-5 -> run a job at 22:00 on every day 
                between Monday and Friday. 
              - 0 5 4 * * sun -> run a job at 04:05 on Sunday.
        hourRange:
          type: array
          description: >-
            A list of time ranges within a specific day that the schedule will
            be active on, for example, 08:00-12:00, 16:00-19:00.
          items:
            $ref: '#/components/schemas/HourRange'
            minItems: 1
    ReportContentItem:
      type: object
      description: >-
        Single item of the results in case result format was set to payload. 
        Each item contains the timeframe of the collected data and a list of 
        values captured in that timeframe.
      properties:
        measurementTime:
          $ref: '#/components/schemas/MeasurementTime'
          description: Timeframe boundary for collected data.
        measurementDataPoint:
          type: array
          items:
            $ref: '#/components/schemas/ServiceSpecificResult'
          description: >-
            List of values captured in the related timeframe.
      required:
        - measurementTime
        - measurementDataPoint
    ReportingTimeframe:
      type: object
      description: >-
        Specifies the date range between which data points will be included
        in the report.
      properties:
        reportingStartDate:
          type: string
          format: date-time
          description: Start date of reporting timeframe.
        reportingEndDate:
          type: string
          format: date-time
          description: End date of reporting timeframe.
    ResultFormat:
      type: string
      description: >-
        List of possible result formats that define how Seller/Server will
        deliver a Report to the Buyer/Client.
      enum:
        - attachment
        - payload
    ScheduleDefinition:
      type: object
      description: The schedule definition for running jobs.
      properties:
        scheduleDefinitionStartTime:
          type: string
          format: date-time
          description: >-
            The start time of the Schedule Definition. If the attribute is 
            empty the Schedule starts immediately after provisioning of the Job.
        scheduleDefinitionEndTime:
          type: string
          format: date-time
          description: >-
            The end time of the Schedule Definition. If the attribute is empty
            the Schedule runs forever, not having a time constraint.
        recurringSchedule:
          $ref: '#/components/schemas/RecurringSchedule'
          description: >-
            A recurring frequency to run a job within a timeframe defined 
            by schedule definition, for example, every 5 minutes, 15 minutes, 
            1 hour, 1 day. If the attribute is empty, job runs non-stop.
        executionDuration:
          $ref: '#/components/schemas/TimeDuration'
          description: >-
            Total time for running one execution of a schedule. Depending 
            on the reportingPeriod attribute, one execution of a schedule might
            produce multiple reports (e.g., when reporting period is 15 minutes 
            and executionDuration is 1 hour, every execution of a schedule will
            produce 4 reports).
    ServiceFromToRef:
      type: object
      description: >-
        Reference to Service From and Service To endpoints.
      properties:
        serviceFrom: 
          type: object
          description: >-
            A reference to a Service From endpoint resource.
          properties:
            serviceFromHref:
              type: string
              description: Hyperlink to the Service From endpoint.
            serviceFromId:
              type: string
              description: Identifier of the Service From endpoint.
          required:
            - serviceFromId
        serviceTo:
          type: object
          description: >-
            A reference to a Service To endpoint resource.
          properties:
            serviceToHref:
              type: string
              description: Hyperlink to the Service To endpoint.
            serviceToId:
              type: string
              description: Identifier of the Service To endpoint.
          required:
            - serviceToId
        '@type':
          description:
            Used to unambiguously designate the class type when using `oneOf`
          type: string
          enum:
            - ServiceFromToRef
      required:
        - '@type'
        - serviceFrom
        - serviceTo
    ServiceRef:
      type: object
      description: >-
        Reference to a Service.
      properties:
        serviceHref:
          type: string
          description: >-
            Hyperlink to the Service resource. 
        serviceId:
          type: string
          description: Identifier of the Service.
        '@type':
          description:
            Used to unambiguously designate the class type when using `oneOf`
          type: string
          enum:
            - ServiceRef
      required:
        - '@type'
        - serviceId
    ServiceSpecificConfiguration:
      type: object
      description: >-
        ServiceSpecificConfiguration is used as an extension point for 
        MEF-specific service fault management configuration. The `@type` 
        attribute is used as a discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          description: >-
            Uniquely identifies the type of fault management job configuration.
            In the case of MEF services, this is the URN provided in the fault
            management configuration specification. The named type must be a 
            subclass of ServiceSpecificConfiguration.
          type: string
      required:
        - '@type'
    ServiceSpecificResult:
      type: object
      description: >-
        ServiceSpecificResult is used as an extension point for MEF-specific fault 
        management job results. The `@type` attribute is used as a
        discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          type: string
          description: >-
            The name that uniquely identifies the type of results that are
            returned by the Fault Management Report. In the case of MEF 
            services, this is the URN provided in the fault management results
            specification. The named type must be a subclass of ServiceSpecificResult.
      required:
        - '@type'
    TimeDuration:
      description: >-
        This class is used to describe durations expressed as a 2-tuple, (value,
        units). The units from nanoseconds to years.
      type: object
      properties:
        timeDurationValue:
          description: >-
            The value of the duration. For example, if the duration is 20 ms,
            this element is 20.
          type: integer
        timeDurationUnits:
          description: >-
            The unit of measure in the duration. For example, if an interval is
            2ms, this element is MS.
          $ref: '#/components/schemas/TimeDurationUnits'
      required:
        - timeDurationUnits
        - timeDurationValue
    TimeDurationUnits:
      description: >-
        The unit of measure in the duration. For example, if an interval is 2ms,
        this element is MS.
      type: string
      enum:
        - NS
        - US
        - MS
        - SEC
        - MIN
        - HOUR
        - DAY
        - WEEK
        - MONTH
        - YEAR
    TrackingRecord:
      type: object
      description: >-
        Tracking Records allow the tracking of modifications of Fault 
        Management Job or Report.
      properties:
        creationDate:
          type: string
          format: date-time
          description: Date when the record was created.
        description:
          type: string
          description: >-
            Free-text field describing the action that created the Tracking
            Record and its details.
        id:
          type: string
          description: Identifier of the Tracking Record.
        relatedObjectId:
          type: string
          description: Identifier of Fault Management Job or Report.
        request:
          type: string
          description: Request that created the Tracking Record.
        system:
          type: string
          description: Describes the system from which the action was done.
        user:
          type: string
          description: Describes the user doing the action.
      required:
        - creationDate
        - id
        - relatedObjectId
