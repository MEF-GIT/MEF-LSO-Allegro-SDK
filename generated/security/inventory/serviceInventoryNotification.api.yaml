openapi: 3.0.3
info:
  description: "**This file forms part of Mplify 135.1** \n \n\nSupported use cases:\n\
    - Send Notifications\n\nCopyright 2025 Mplify Alliance and its contributors.\n\
    \nThis file includes content based on the TM Forum Service Inventory Management\
    \ API (TMF638\nv4.0.1) available at https://github.com/tmforum-apis/TMF638_ServiceInventory,\n\
    which is licensed by the TM Forum under the Apache License version 2.0. Such\n\
    content has been modified by the Mplify Alliance and its contributors.\n"
  title: Service Inventory Notification
  version: 2.0.0
servers:
- url: "https://{serverBase}/mefApi/allegro/serviceInventoryNotification/v2/"
  variables:
    serverBase:
      default: mplify.net
      description: The base of SOF's URL.
security:
- oauth2MEFLSOAPI:
  - default
tags:
- description: Mechanism for SOF to publish *Service* notifications to BUS
  name: Event listeners
paths:
  /listener/serviceCreateEvent:
    post:
      description: This endpoint is used to receive notifications on Service Create
        Events
      operationId: ServiceCreateEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceCreateEvent'
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - ServiceCreateEvent
      summary: Service Create Event endpoint
      tags:
      - Event listeners
  /listener/serviceDeleteEvent:
    post:
      description: This endpoint is used to receive notifications on Service Delete
        Events
      operationId: serviceDeleteEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceDeleteEvent'
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - serviceDeleteEvent
      summary: Service Delete Event endpoint
      tags:
      - Event listeners
  /listener/serviceStateChangeEvent:
    post:
      description: This endpoint is used to receive notifications on Service State
        Change Events
      operationId: serviceStateChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceStateChangeEvent'
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - serviceStateChangeEvent
      summary: Service State Change Event endpoint
      tags:
      - Event listeners
  /listener/serviceAttributeValueChangeEvent:
    post:
      description: This endpoint is used to receive notifications on Service Attribute
        Value Change Events
      operationId: serviceAttributeValueChangeEvent
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ServiceAttributeValueChangeEvent'
        required: true
      responses:
        "204":
          description: No Content (https://tools.ietf.org/html/rfc7231#section-6.3.5)
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - serviceAttributeValueChangeEvent
      summary: Service Attribute Value Change Event endpoint
      tags:
      - Event listeners
components:
  schemas:
    Error:
      description: |
        Standard Class used to describe API response error
        Not intended to be use directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        reason:
          description: Text that explains the reason for error. This can be shown
            to a client user.
          maxLength: 255
          type: string
        message:
          description: Text that provide mode details and corrective actions related
            to the error. This can be shown to a client user.
          type: string
        referenceError:
          description: url pointing to documentation describing the error
          format: uri
          type: string
      required:
      - reason
      type: object
    Error400:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error400Code'
        required:
        - code
        type: object
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error400Code:
      description: |-
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string parameter
        - missingQueryValue: The URI is missing a required query-string parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
      - missingQueryParameter
      - missingQueryValue
      - invalidQuery
      - invalidBody
      type: string
    Error401:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error401Code'
        required:
        - code
        type: object
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
      - missingCredentials
      - invalidCredentials
      type: string
    Error403:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error403Code'
        required:
        - code
        type: object
      description: Forbidden. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
      - accessDenied
      - forbiddenRequester
      - tooManyUsers
      type: string
    Error500:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: |-
              One of the following error codes:
              - internalError: Internal server error - the server encountered an unexpected condition that prevented it from fulfilling the request.
            enum:
            - internalError
            type: string
        required:
        - code
        type: object
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Event:
      description: Event class is used to describe information structure used for
        notification.
      properties:
        eventId:
          description: Id of the event
          type: string
        eventTime:
          description: Date-time when the event occurred
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
        event:
          description: The event linked to the involved resource object
          type: object
      required:
      - event
      - eventId
      - eventTime
      - eventType
      type: object
    ServiceAttributeValueChangeEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - properties:
          eventType:
            description: |
              Indicates the type of the event.
            enum:
            - serviceAttributeValueChangeEvent
            type: string
          event:
            $ref: '#/components/schemas/ServiceEventPayload'
        required:
        - event
        - eventType
        type: object
    ServiceCreateEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - properties:
          eventType:
            description: |
              Indicates the type of the event.
            enum:
            - serviceCreateEvent
            type: string
          event:
            $ref: '#/components/schemas/ServiceEventPayload'
        required:
        - event
        - eventType
        type: object
    ServiceDeleteEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - properties:
          eventType:
            description: |
              Indicates the type of the event.
            enum:
            - serviceDeleteEvent
            type: string
          event:
            $ref: '#/components/schemas/ServiceEventPayload'
        required:
        - event
        - eventType
        type: object
    ServiceEventPayload:
      description: The identifier of the Service being subject of this event.
      properties:
        id:
          description: ID of the Service
          type: string
        href:
          description: Hyperlink to access the Service
          type: string
      required:
      - id
      type: object
    ServiceStateChangeEvent:
      allOf:
      - $ref: '#/components/schemas/Event'
      - properties:
          eventType:
            description: |
              Indicates the type of the event.
            enum:
            - serviceStateChangeEvent
            type: string
          event:
            $ref: '#/components/schemas/ServiceStateChangeEventPayload'
        required:
        - event
        - eventType
        type: object
    ServiceStateChangeEventPayload:
      description: The identifier of the Service being subject of this event.
      properties:
        id:
          description: ID of the Service
          type: string
        href:
          description: Hyperlink to access the Service
          type: string
        state:
          $ref: '#/components/schemas/ServiceStateType'
      required:
      - id
      - state
      type: object
    ServiceStateType:
      description: |
        Valid values for the lifecycle state of the Service.

        | State              | Description                                                                                                           |
        | ------------------ | --------------------------------------------------------------------------------------------------------------------- |
        | feasibilityChecked | Initial check whether the necessary resources are available and sufficient for the installation of a given service.   |
        | designed           | The Service is designed. The resources are identified and/or allocated, but not reserved.                             |
        | reserved           | All required resources for given service are reserved and ready.                                                      |
        | inactive           | The service is deactivated and is no longer available.                                                                |
        | active             | The service is fully available and active                                                                             |
        | terminated         | The service is 'logically deleted'. All associated resources are freed and made available for service to other users. |
      enum:
      - feasibilityChecked
      - designed
      - reserved
      - inactive
      - active
      - terminated
      type: string
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
