openapi: 3.0.1
info:
  description: "**This file forms part of MEF W148**\n\n**This API implements part\
    \ of Business Requirements & Use Cases described\nin MEF W133.1.**\n\n**This specification\
    \ represents MEF work in progress and is subject to\nchange.**\n\nMEF Fault Management\
    \ API allows to manage Fault Management Jobs, collect \nFault Management Reports,\
    \ as well as receive notifications related to these\nentities. This provides the\
    \ ability for the Buyer/Client to request that \nthe Seller/Server performs actions\
    \ defined by FM Job, and to retrieve \nthe results of the Job. Examples of the\
    \ Fault Management Job are Link Trace \nand Loopback. \n\nTwo types of entities\
    \ are supported by the API:\n- **Fault Management Job** - specifies the Fault\
    \ Management Job\n  configuration. FM Job is typically run as part of a troubleshooting\
    \ or \n  diagnostic process of a service, an ordered pair (e.g., two UNIs), \n\
    \  or an entity (e.g., port). \n\n- **Fault Management Report** - The execution\
    \ of Fault Management Job \n  results in Fault Management Reports that provide\
    \ Buyer/Client with the \n  job results.\n\nList of use cases supported by the\
    \ API:\n- Create Fault Management Job\n- Retrieve list of Fault Management Jobs\n\
    - Retrieve Fault Management Job by Identifier\n- Modify Fault Management Job\n\
    - Retrieve list of Modify Fault Management Job\n- Retrieve Modify Fault Management\
    \ Job by Identifier\n- Cancel Fault Management Job\n- Retrieve list of Cancel\
    \ Fault Management Job\n- Retrieve Cancel Fault Management Job by Identifier\n\
    - Suspend Fault Management Job\n- Resume Fault Management Job\n- Subscribe to\
    \ Fault Management Job Notifications\n- Unsubscribe from Fault Management Job\
    \ Notifications\n- Retrieve list of Fault Management Reports\n- Retrieve Fault\
    \ Management Report by Identifier\n- Subscribe to Fault Management Report Notifications\n\
    - Unsubscribe from Fault Management Report Notifications\n\nCopyright 2025 MEF\
    \ Forum and its contributors\n"
  title: Fault Management
  version: 2.0.0-RC
servers:
- url: "https://{serverBase}/mefApi/allegro/faultManagement/v2/"
  variables:
    serverBase:
      default: mef.net
      description: The base of SOF's URL.
security:
- oauth2MEFLSOAPI:
  - default
tags:
- name: faultManagementJob
- name: faultManagementReport
- name: trackingRecord
- name: events subscription
paths:
  /faultManagementJob:
    get:
      description: "The Buyer/Client requests a list of FM Jobs based on a set of\
        \ filter criteria. The Seller/Server returns a summarized list of FM  Jobs.\
        \ For each FM Job returned, the Seller/Server also provides a  Fault Management\
        \ Job Identifier that uniquely identifies this FM Job  within the Seller/Server.\
        \ The order of the elements returned to the  Buyer/Client is defined by the\
        \ Seller/Server (e.g. natural order) and does not change between the pages."
      operationId: listFaultManagementJob
      parameters:
      - description: Identifier of a Service.
        in: query
        name: serviceId
        required: false
        schema:
          type: string
      - description: Identifier of a Service From endpoint.
        in: query
        name: serviceFromId
        required: false
        schema:
          type: string
      - description: Identifier of a Service To endpoint.
        in: query
        name: serviceToId
        required: false
        schema:
          type: string
      - description: Identifier of an Entity.
        in: query
        name: entityId
        required: false
        schema:
          type: string
      - description: State of the Fault Management Job. See `FaultManagementJobStateType`
          definition for details.
        in: query
        name: state
        required: false
        schema:
          $ref: '#/components/schemas/FaultManagementJobStateType'
      - description: Date when the job was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the job was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Type of the Fault Management Job.
        in: query
        name: jobType
        required: false
        schema:
          $ref: '#/components/schemas/JobType'
      - description: The priority of the Fault Management Job.
        in: query
        name: jobPriority
        required: false
        schema:
          type: string
      - description: Requested index for start of item to be provided in response
          requested by the client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Requested number of resources to be provided in response.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/FaultManagementJob'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listFaultManagementJob
      summary: List or find Fault Management Job objects.
      tags:
      - faultManagementJob
    post:
      description: A request initiated by the Buyer/Client to create a Fault Management
        Job in the Seller/Server system.
      operationId: createFaultManagementJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FaultManagementJob_Create'
        description: The Fault Management Job to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FaultManagementJob'
          description: '''Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createFaultManagementJob
      summary: Creates a Fault Management Job.
      tags:
      - faultManagementJob
  /faultManagementJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Fault
        Management Job based on the Job Identifier.
      operationId: retrieveFaultManagementJob
      parameters:
      - description: Identifier of the Fault Management Job.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FaultManagementJob'
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveFaultManagementJob
      summary: Retrieves a Fault Management Job by ID.
      tags:
      - faultManagementJob
  /faultManagementJob/{id}/resume:
    post:
      description: 'A request initiated by the Buyer/Client to resume a Fault Management  Job. '
      operationId: resumeFaultManagementJob
      parameters:
      - description: Identifier of the FaultManagementJob.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Resumed
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - resumeFaultManagementJob
      summary: Resumes a Fault Management Job
      tags:
      - faultManagementJob
  /faultManagementJob/{id}/suspend:
    post:
      description: A request initiated by the Buyer/Client to suspend a Fault Management
        Job.
      operationId: suspendFaultManagementJob
      parameters:
      - description: Identifier of the FaultManagementJob.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Suspended
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - suspendFaultManagementJob
      summary: Suspends a Fault Management Job.
      tags:
      - faultManagementJob
  /cancelFaultManagementJob:
    get:
      description: The Buyer/Client requests a list of Cancel Fault Management Job
        based on a set of filter criteria.
      operationId: listCancelFaultManagementJob
      parameters:
      - description: Identifier of Fault Management Job that is a subject of CancelFaultManagementJob.
        in: query
        name: faultManagementJobId
        required: false
        schema:
          type: string
      - description: State of CancelFaultManagementJob. See `FaultManagementJobProcessStateType`
          definition for details.
        in: query
        name: state
        required: false
        schema:
          $ref: '#/components/schemas/FaultManagementJobProcessStateType'
      - description: Date when the CancelFaultManagementJob was created - greater
          than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the CancelFaultManagementJob was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - description: Requested number of items to be provided in response requested
          by client.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CancelFaultManagementJob'
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listCancelFaultManagementJob
      summary: List or find CancelFaultManagementJob objects.
      tags:
      - faultManagementJob
    post:
      description: A request initiated by the Buyer/Client to cancel  a Fault Management
        Job in the Seller/Server system.
      operationId: createCancelFaultManagementJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CancelFaultManagementJob_Create'
        description: The CancelFaultManagementJob to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelFaultManagementJob'
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createCancelFaultManagementJob
      summary: Creates a Cancel Fault Management Job entity.
      tags:
      - faultManagementJob
  /cancelFaultManagementJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Cancel
        Fault Management Job based on the Cancel Fault Management Job  Identifier.
      operationId: retrieveCancelFaultManagementJob
      parameters:
      - description: Identifier of the CancelFaultManagementJob.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelFaultManagementJob'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveCancelFaultManagementJob
      summary: Retrieves a CancelFaultManagementJob by ID.
      tags:
      - faultManagementJob
  /modifyFaultManagementJob:
    get:
      description: The Buyer/Client requests a list of Modify Fault Management Job
        based on a set of filter criteria.
      operationId: listModifyFaultManagementJob
      parameters:
      - description: Identifier of Fault Management Job that is a subject of ModifyFaultManagementJob.
        in: query
        name: faultManagementJobId
        required: false
        schema:
          type: string
      - description: State of ModifyFaultManagementJob See `FaultManagementJobProcessStateType`
          definition for details.
        in: query
        name: state
        required: false
        schema:
          $ref: '#/components/schemas/FaultManagementJobProcessStateType'
      - description: Date when the ModifyFaultManagementJob was created - greater
          than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the ModifyFaultManagementJob was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - description: Requested number of items to be provided in response requested
          by client.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ModifyFaultManagementJob'
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listModifyFaultManagementJob
      summary: List or find ModifyFaultManagementJob objects.
      tags:
      - faultManagementJob
    post:
      description: A request initiated by the Buyer/Client to modify a Fault Management  Job
        in the Seller/Server system.
      operationId: createModifyFaultManagementJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ModifyFaultManagementJob_Create'
        description: The ModifyFaultManagementJob to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyFaultManagementJob'
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createModifyFaultManagementJob
      summary: Creates a Modify Fault Management Job entity.
      tags:
      - faultManagementJob
  /modifyFaultManagementJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Modify
        Fault Management Job based on the Modify Fault Management Job  Identifier.
      operationId: retrieveModifyFaultManagementJob
      parameters:
      - description: Identifier of the ModifyFaultManagementJob.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyFaultManagementJob'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveModifyFaultManagementJob
      summary: Retrieves a ModifyFaultManagementJob by ID.
      tags:
      - faultManagementJob
  /faultManagementJobComplexQuery:
    post:
      description: A request initiated by the Buyer/Client to execute a Fault Management
        Job Complex Query in the Seller/Server system.
      operationId: faultManagementJobComplexQuery
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FaultManagementJobComplexQuery_Create'
        description: The FaultManagementJobComplexQuery to be executed.
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/FaultManagementJob'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - faultManagementJobComplexQuery
      summary: Executes a FaultManagementJobComplexQuery.
      tags:
      - faultManagementJob
  /faultManagementReport:
    get:
      description: "The Buyer/Client requests a list of Fault Management Reports based\
        \  on a set of filter criteria. The Seller/Server returns a summarized list\
        \ of FM Reports. For each FM Report returned, the Seller/Server also provides\
        \ a Fault Management Report Identifier that uniquely identifies this FM Report\
        \ within the Seller/Server. The order of the elements  returned to the Buyer/Client\
        \ is defined by the Seller/Server  (e.g. natural order) and does not change\
        \ between the pages."
      operationId: listFaultManagementReport
      parameters:
      - description: Identifier of Fault Management Job that generated Fault Management
          Report.
        in: query
        name: faultManagementJobId
        required: false
        schema:
          type: string
      - description: Identifier of a Service From endpoint.
        in: query
        name: serviceFromId
        required: false
        schema:
          type: string
      - description: Identifier of a Service To endpoint.
        in: query
        name: serviceToId
        required: false
        schema:
          type: string
      - description: Identifier of a Service.
        in: query
        name: serviceId
        required: false
        schema:
          type: string
      - description: Identifier of a Entity.
        in: query
        name: entityId
        required: false
        schema:
          type: string
      - description: State of the Fault Management Report. See `FaultManagementReportStateType`
          definition for details.
        in: query
        name: state
        required: false
        schema:
          $ref: '#/components/schemas/FaultManagementReportStateType'
      - description: Date when the report was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the report was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Start date of reporting timeframe - greater than.
        in: query
        name: reportingTimeframe.startDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Start date of reporting timeframe - lower than.
        in: query
        name: reportingTimeframe.startDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: End date of reporting timeframe - greater than.
        in: query
        name: reportingTimeframe.endDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: End date of reporting timeframe - lower than.
        in: query
        name: reportingTimeframe.endDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Format of report output.
        in: query
        name: outputFormat
        required: false
        schema:
          $ref: '#/components/schemas/OutputFormat'
      - description: Type of providing report results.
        in: query
        name: resultFormat
        required: false
        schema:
          $ref: '#/components/schemas/ResultFormat'
      - description: Requested index for start of item to be provided in response
          requested by the client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Requested number of resources to be provided in response.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/FaultManagementReport_Find'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listFaultManagementReport
      summary: List or find Fault Management Report objects.
      tags:
      - faultManagementReport
  /faultManagementReport/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single  Fault
        Management Report based on the Report Identifier.
      operationId: retrieveFaultManagementReport
      parameters:
      - description: Identifier of the Fault Management Report to be retrieved.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/FaultManagementReport'
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveFaultManagementReport
      summary: Retrieves a Fault Management Report by ID.
      tags:
      - faultManagementReport
  /faultManagementReportComplexQuery:
    post:
      description: A request initiated by the Buyer/Client to execute a Fault Management
        Report Complex Query in the Seller/Server system.
      operationId: faultManagementReportComplexQuery
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/FaultManagementReportComplexQuery_Create'
        description: The FaultManagementReportComplexQuery to be executed.
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/FaultManagementReport_Find'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - faultManagementReportComplexQuery
      summary: Executes a FaultManagementReportComplexQuery.
      tags:
      - faultManagementReport
  /trackingRecord:
    get:
      description: The Buyer/Client requests a list of Tracking Records based on a
        set of filter criteria. The Seller/Server returns a list of Tracking Records.  Tracking
        Record allows for tracking of modifications performed on  a Fault Management
        Job or Report.
      operationId: listTrackingRecord
      parameters:
      - description: Identifier of Fault Management Job or Fault Management Report.
        in: query
        name: relatedObjectId
        required: false
        schema:
          type: string
      - description: Date when the record was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the record was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: User that executed the action which created a Tracking Record.
        in: query
        name: user
        required: false
        schema:
          type: string
      - description: Requested index for start of item to be provided in response
          requested by the client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Requested number of resources to be provided in response.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TrackingRecord'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems.
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listTrackingRecord
      summary: List or find Tracking Record objects.
      tags:
      - trackingRecord
  /trackingRecord/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Tracking
        Record based on the Tracking Record Identifier.
      operationId: retrieveTrackingRecord
      parameters:
      - description: Identifier of the Tracking Record.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TrackingRecord'
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveTrackingRecord
      summary: Retrieves a Tracking Record by ID.
      tags:
      - trackingRecord
  /hub:
    post:
      description: The Buyer/Client requests to subscribe to Fault Management Job  or
        Fault Management Report Notifications.
      operationId: registerListener
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        description: Data containing the callback endpoint to deliver the information.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Subscribed
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      security:
      - oauth2MEFLSOAPI:
        - registerListener
      summary: Register a listener
      tags:
      - events subscription
  /hub/{id}:
    delete:
      description: The Buyer/Client requests to unsubscribe from Fault Management
        Job or  Fault Management Report Notifications.
      operationId: unregisterListener
      parameters:
      - description: The id of the registered listener.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      security:
      - oauth2MEFLSOAPI:
        - unregisterListener
      summary: Unregister a listener
      tags:
      - events subscription
    get:
      description: The Buyer/Client requests detailed information about  a single
        Notification Hub based on the Hub Identifier.
      operationId: retrieveHub
      parameters:
      - description: Identifier of the Hub.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      security:
      - oauth2MEFLSOAPI:
        - retrieveHub
      summary: Retrieves a Hub by ID.
      tags:
      - events subscription
components:
  schemas:
    AttachmentURL:
      description: The URL pointing to an Attachment for download.
      properties:
        retentionPeriod:
          description: A date until which the file will be retained.
          format: date-time
          type: string
        url:
          description: The URL pointing to an Attachment for download.
          format: uri
          type: string
      required:
      - url
      type: object
    CancelFaultManagementJob:
      allOf:
      - $ref: '#/components/schemas/CancelFaultManagementJob_Create'
      - properties:
          creationDate:
            description: Date when the Cancel Fault Management Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink to the Cancel Fault Management Job entity.
            type: string
          id:
            description: Unique identifier for the Cancel Fault Management Job that
              is generated by the Seller/Server when the Cancel Fault Management Job
              request  `state` is set to `acknowledged`.
            type: string
          state:
            $ref: '#/components/schemas/FaultManagementJobProcessStateType'
        required:
        - creationDate
        - id
        - state
        type: object
      description: Request for cancellation of an existing Fault Management Job.
    CancelFaultManagementJob_Create:
      description: Request for cancellation of an existing Fault Management Job.
      properties:
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
      required:
      - faultManagementJob
      type: object
    EntityRef:
      allOf:
      - $ref: '#/components/schemas/MonitoredObjectRef'
      - description: Reference to Entity.
        properties:
          '@referredType':
            description: The type of the referred object. This is used to distinguish
              between different types of objects that can be referred to by the EntityId.
            type: string
          entityHref:
            description: Hyperlink to the Entity resource. This is used to provide
              a link to the Entity resource in the Seller/Server system.
            type: string
          entityId:
            description: Identifier of an Entity.
            type: string
        required:
        - '@referredType'
        - '@type'
        - entityId
        type: object
      x-discriminator-value: EntityRef
    Error:
      description: Standard Class used to describe API response error Not intended
        to be used directly. The `code` in the HTTP header is used as a discriminator
        for the type of error returned in runtime.
      properties:
        message:
          description: Text that provides more details and corrective actions related
            to the error. This can be shown to a client user.
          type: string
        reason:
          description: Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
          type: string
        referenceError:
          description: URL pointing to documentation describing the error.
          format: uri
          type: string
      required:
      - reason
      type: object
    Error400:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error400Code'
        required:
        - code
        type: object
      description: '''Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)'''
    Error400Code:
      description: "One of the following error codes:\n- missingQueryParameter: The\
        \ URI is missing a required query-string \n  parameter.\n- missingQueryValue:\
        \ The URI is missing a required query-string \n  parameter value.\n- invalidQuery:\
        \ The query section of the URI is invalid.\n- invalidBody: The request has\
        \ an invalid body."
      enum:
      - missingQueryParameter
      - missingQueryValue
      - invalidQuery
      - invalidBody
      type: string
    Error401:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error401Code'
        required:
        - code
        type: object
      description: '''Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)'''
    Error401Code:
      description: |-
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired.
      enum:
      - missingCredentials
      - invalidCredentials
      type: string
    Error403:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error403Code'
        required:
        - code
        type: object
      description: Forbidden. This code indicates that the server understood the request
        but refused to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: "This code indicates that the server understood the request but\
        \ refuses  to authorize it because of one of the following error codes: -\
        \ accessDenied: Access denied - forbiddenRequester: Forbidden requester -\
        \ tooManyUsers: Too many users."
      enum:
      - accessDenied
      - forbiddenRequester
      - tooManyUsers
      type: string
    Error404:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: "The following error code:\n- notFound: A current representation\
              \ of the target resource \n  not found."
            enum:
            - notFound
            type: string
        required:
        - code
        type: object
      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error422:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error422Code'
          propertyPath:
            description: |-
              A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
              Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
            type: string
        required:
        - code
        type: object
      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: "One of the following error codes:\n- missingProperty: The property\
        \ that was expected is not present in the\n  payload.\n- invalidValue: The\
        \ property has an incorrect value.\n- invalidFormat: The property value does\
        \ not comply with the expected \n  value format.\n- referenceNotFound: The\
        \ object referenced by the property cannot be \n  identified in the target\
        \ system.\n- unexpectedProperty: Additional, not expected property has been\
        \ \n  provided.\n- tooManyRecords: The number of records to be provided in\
        \ the response\n  exceeds the threshold.\n- otherIssue: Other problem was\
        \ identified (detailed information\n  provided in a reason)."
      enum:
      - missingProperty
      - invalidValue
      - invalidFormat
      - referenceNotFound
      - unexpectedProperty
      - tooManyRecords
      - otherIssue
      type: string
    Error500:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: "The following error code: - internalError: Internal server\
              \ error - the server encountered an unexpected condition that prevented\
              \ it from fulfilling the request."
            enum:
            - internalError
            type: string
        required:
        - code
        type: object
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Error501:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: |-
              The following error code:
              - notImplemented: Method not supported by the server.
            enum:
            - notImplemented
            type: string
        required:
        - code
        type: object
      description: Not Implemented. Used in case Seller is not supporting an optional
        operation. (https://tools.ietf.org/html/rfc7231#section-6.6.2)
    EventSubscription:
      description: This resource is used to respond to notification subscriptions.
      properties:
        callback:
          description: The value provided by the `EventSubscriptionInput` during notification
            registration.
          type: string
        id:
          description: An identifier of this Event Subscription assigned when a resource
            is created.
          type: string
        query:
          description: The value provided by the `EventSubscriptionInput` during notification
            registration.
          type: string
      required:
      - callback
      - id
      type: object
    EventSubscriptionInput:
      description: This class is used to register for Notifications.
      properties:
        callback:
          description: "This callback value must be set to the *host* property from\
            \ Fault  Management Notification API (faultNotification.api.yaml). This\
            \ property is appended with the base path and notification resource path\
            \ specified in that API to construct a URL to which notification is sent.\
            \ E.g. for 'callback':  \"https://buyer.mef.com/listenerEndpoint\", the\
            \ Fault Management Job state change event notification will be sent to\
            \ `https://buyer.mef.com/listenerEndpoint/mefApi/allegro/faultManagement/v2/listener/faultManagementJobStateChangeEvent`"
          type: string
        query:
          description: "This attribute is used to define which type of events to register\
            \ to. Example: 'query':'eventType =  faultManagementReportStateChangeEvent'.\
            \ To subscribe for more than one event type, put the values separated\
            \ by a comma: `eventType=faultManagementReportStateChangeEvent,faultManagementJobCreateEvent`.\
            \ The possible values are enumerated by Event type enums in faultNotification.api.yaml.\
            \ An empty query is treated as specifying no filters - ending in subscription\
            \ for all event types."
          type: string
      required:
      - callback
      type: object
    FaultManagementJob:
      allOf:
      - $ref: '#/components/schemas/FaultManagementJob_Create'
      - description: "A Fault Management Job specifies the configuration of the job\
          \ to be executed by Seller/Server as part of the troubleshooting or  diagnostic\
          \ process of a service, an ordered pair (e.g., two UNIs),  or an entity\
          \ (e.g., port)."
        properties:
          creationDate:
            description: Date when the Fault Management Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink reference
            format: uri
            type: string
          id:
            description: Unique identifier
            type: string
          lastModifiedDate:
            description: Date when the job was last modified.
            format: date-time
            type: string
          rejectionReason:
            description: Reason in case creation request was rejected.
            type: string
          state:
            $ref: '#/components/schemas/FaultManagementJobStateType'
        required:
        - creationDate
        - id
        - state
        type: object
    FaultManagementJobComplexQuery_Create:
      description: "Fault Management Job Complex Query entity is used to perform \
        \ searches on Fault Management Job entities, including clauses based on ScheduleDefinition\
        \ and ServiceSpecificConfiguration."
      properties:
        creationDate.gt:
          description: Date when the Fault Management Job was created - greater than.
          format: date-time
          type: string
        creationDate.lt:
          description: Date when the Fault Management Job was created - lower than.
          format: date-time
          type: string
        granularity:
          $ref: '#/components/schemas/TimeDuration'
        jobPriority:
          default: 5
          description: The priority of the Fault Management Job. The way the management
            application will use the Job priority to schedule Job execution is application-specific
            and out the scope.
          type: integer
        jobType:
          $ref: '#/components/schemas/JobType'
        lastModifiedDate.gt:
          description: Date when the Fault Management Job was last modified - greater
            than.
          format: date-time
          type: string
        lastModifiedDate.lt:
          description: Date when the Fault Management Job was last modified - lower
            than.
          format: date-time
          type: string
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
        reportingPeriod:
          $ref: '#/components/schemas/TimeDuration'
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
        state:
          $ref: '#/components/schemas/FaultManagementJobStateType'
      type: object
    FaultManagementJobProcessStateType:
      description: |-
        The state of the process related to the Fault Management Job

        | state          | MEF 133.1 name | Description                                                                                                                                                                                                                                                                                                                                                                                                                                          |
        | -------------- | -------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `acknowledged` | Acknowledged   | The Cancel/Modify Fault Management Job request has been received by the Seller/Server and has passed basic validation. Fault Management Job Process Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the request moves to the In-Progress state. If not all attributes are validated, the request moves to the Rejected state. |
        | `completed`    | Completed      | The Cancel/Modify Fault Management Job request has been completed by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                              |
        | `inProgress`   | In-Progress    | The Cancel/Modify Fault Management Job request has been validated and accepted by the Seller/Server and is in-progress.                                                                                                                                                                                                                                                                                                                              |
        | `rejected`     | Rejected       | The Cancel/Modify Fault Management Job request has failed validation and has been declined by the Seller/Server.                                                                                                                                                                                                                                                                                                                                     |
      enum:
      - acknowledged
      - completed
      - inProgress
      - rejected
      type: string
    FaultManagementJobRef:
      description: A reference to a Fault Management Job resource.
      properties:
        faultManagementJobHref:
          description: Hyperlink to the referenced Fault Management Job.
          type: string
        faultManagementJobId:
          description: Identifier of the referenced Fault Management Job.
          type: string
      required:
      - faultManagementJobId
      type: object
    FaultManagementJobStateType:
      description: |-
        The state of the Fault Management Job.

        | state                   | MEF 133.1 name          | Description|
        | ----------------------- | ----------------------- ||
        | `acknowledged`          | Acknowledged            | A Create Fault Management Job request has been received by the Seller/Server and has passed basic validation. Fault Management Job Identifier is assigned in the Acknowledged state. The request remains Acknowledged until all validations as applicable are completed. If the attributes are validated the request determines if the start time is immediate or scheduled. If immediate, the Fault Management Job moves to the In-progress state. If scheduled, the Fault Management Job moves to the Scheduled state. If not all attributes are validated, the request moves to the Rejected state.                                                                           |
        | `cancelled`             | Cancelled               | A Fault Management Job that is In-Progress, Suspended, or Scheduled is cancelled.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                |
        | `completed`             | Completed               | A non-recurring Fault Management Job finished execution|
        | `inProgress`            | In-Progress             | A Fault Management Job is running. Upon completion of the Job, a determination if the Fault Management Job is a one-time Job or is recurring is performed. If the Fault Management Job is a one-time Job, the state of the Fault Management Job moves to the Completed state. If the Fault Management Job is recurring, the Fault Management Job circles back to determine if it has an immediate start time or a scheduled start time. If a Suspend Fault Management Job request is accepted, the Job moves to the Suspended state. If a Cancel Fault Management Job request is accepted, the Job moves to the Cancelled state.                                                 |
        | `pending`               | Pending                 | A Modify Fault Management Job request has been accepted by the Seller/Server. The Fault Management Job remains Pending while updates to the Job are completed. Once updates are complete, the Job returns to the Scheduled or In-Progress status depending on the schedule definition.                                                                                                                                                                                                                                                                                                                                                                                           |
        | `pendingCancel`         | Pending Cancel          | A Cancel Fault Management Job request has been accepted by the Seller/Server. The Fault Management Job remains Pending Cancel while resources used by the Job are being released. Once updates are complete, the Job moves to the Cancelled status.                                                                                                                                                                                                                                                                                                                                                                                                                              |
        | `rejected`              | Rejected                | A Create Fault Management Job request fails validation and is rejected with error indications by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              |
        | `resourcesUnavailable`  | Resources Unavailable   | A Fault Management Job cannot be allocated necessary resources when moving to execution (In-Progress state|
        | `scheduled`             | Scheduled               | A Fault Management Job is created that does not have an immediate start time. The Fault Management Job stays Scheduled until the start time is reached. The Fault Management Job then moves to In-Progress. If the Cancel Fault Management Job request is accepted, the Job moves to the Cancelled state. If the Modify Fault Management Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                                                                            |
        | `suspended`             | Suspended               | A Suspend Fault Management Job request is accepted by the Seller/Server. The Job remains Suspended until a Resume Fault Management Job request is accepted by the Seller/Server at which time the Job returns to the In-Progress state. If the Cancel Fault Management Job request is accepted, the Job moves to the Cancelled state. If the Modify Fault Management Job request is accepted, the Job moves to the Pending state.                                                                                                                                                                                                                                                |
      enum:
      - acknowledged
      - cancelled
      - completed
      - inProgress
      - pending
      - pendingCancel
      - rejected
      - resourcesUnavailable
      - scheduled
      - suspended
      type: string
    FaultManagementJob_Create:
      description: "A Fault Management Job specifies the configuration of FM Job to\
        \ be performed on a service, an ordered pair (e.g., two UNIs), or an entity\
        \ (e.g., port) by the Seller/Server. "
      properties:
        description:
          description: A free-text description of the Fault Management Job.
          type: string
        granularity:
          $ref: '#/components/schemas/TimeDuration'
        jobPriority:
          default: 5
          description: The priority of the Fault Management Job. The way the management
            application will use the Job priority to schedule Job execution is application-specific
            and out the scope.
          type: integer
        jobType:
          $ref: '#/components/schemas/JobType'
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
        reportingPeriod:
          $ref: '#/components/schemas/TimeDuration'
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
      required:
      - granularity
      - jobType
      - monitoredObject
      - outputFormat
      - reportingPeriod
      - resultFormat
      - scheduleDefinition
      - serviceSpecificConfiguration
      type: object
    FaultManagementReport:
      description: The execution of Fault Management Job creates FM Reports that provide
        Buyer/Client with the results of the Job.
      properties:
        creationDate:
          description: Date when the Fault Management Report was created.
          format: date-time
          type: string
        description:
          description: A free-text description of the Fault Management Report.
          type: string
        failureReason:
          description: Reason in case report generation failed.
          type: string
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
        granularity:
          $ref: '#/components/schemas/TimeDuration'
        href:
          description: Hyperlink reference
          format: uri
          type: string
        id:
          description: Unique identifier
          type: string
        lastModifiedDate:
          description: Date when the report was last modified.
          format: date-time
          type: string
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
        reportContent:
          items:
            $ref: '#/components/schemas/ReportContentItem'
          type: array
        reportingTimeframe:
          $ref: '#/components/schemas/ReportingTimeframe'
        reportUrl:
          $ref: '#/components/schemas/AttachmentURL'
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
        state:
          $ref: '#/components/schemas/FaultManagementReportStateType'
      required:
      - creationDate
      - faultManagementJob
      - granularity
      - id
      - monitoredObject
      - outputFormat
      - reportingTimeframe
      - resultFormat
      - serviceSpecificConfiguration
      - state
      type: object
    FaultManagementReportComplexQuery_Create:
      description: "Fault Management Report Complex Query entity is used to perform\
        \  searches on Fault Management Report entities, including clauses based on\
        \ ServiceSpecificConfiguration."
      properties:
        creationDate.gt:
          description: Date when the Fault Management Report was created - greater
            than.
          format: date-time
          type: string
        creationDate.lt:
          description: Date when the Fault Management Report was created - lower than.
          format: date-time
          type: string
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
        granularity:
          $ref: '#/components/schemas/TimeDuration'
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
        reportingTimeframe.startDate.gt:
          description: Start date of reporting timeframe - greater than.
          format: date-time
          type: string
        reportingTimeframe.startDate.lt:
          description: Start date of reporting timeframe - lower than.
          format: date-time
          type: string
        reportingTimeframe.endDate.gt:
          description: End date of reporting timeframe - greater than.
          format: date-time
          type: string
        reportingTimeframe.endDate.lt:
          description: End date of reporting timeframe - lower than.
          format: date-time
          type: string
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
        state:
          $ref: '#/components/schemas/FaultManagementReportStateType'
      type: object
    FaultManagementReportStateType:
      description: |-
        Possible values for the state of a Fault Management Report.

        | State          | MEF 133.1 name | Description                                                                                                                                                                                                                                                                                                                                                                                       |
        | -------------- | -------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `acknowledged` | Acknowledged   | A Fault Management Report is created by the Seller/Server. Fault Management Report Identifier is assigned in the Acknowledged state. The report remains Acknowledged until all validations as applicable are completed. If the attributes are validated, the Fault Management Report moves to the In-Progress state. If not all attributes are validated, the report moves to the Rejected state. |
        | `completed`    | Completed      | A Fault Management Report is completed and results are available.                                                                                                                                                                                                                                                                                                                                 |
        | `failed`       | Failed         | A Fault Management Report processing has failed.                                                                                                                                                                                                                                                                                                                                                  |
        | `inProgress`   | In-Progress    | A Fault Management Report processing has started.                                                                                                                                                                                                                                                                                                                                                 |
        | `rejected`     | Rejected       | This state indicates that the request failed to meet validation rules for `FaultManagementReport` delivery (processing).                                                                                                                                                                                                                                                                          |
      enum:
      - acknowledged
      - completed
      - failed
      - inProgress
      - rejected
      type: string
    FaultManagementReport_Find:
      description: This class represents a single list item for the response of the
        `listFaultManagementReport` operation.
      properties:
        creationDate:
          description: Date when the report was created.
          format: date-time
          type: string
        description:
          description: A free-text description of the Fault Management Report.
          type: string
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
        granularity:
          $ref: '#/components/schemas/TimeDuration'
        id:
          description: Unique identifier
          type: string
        monitoredObject:
          $ref: '#/components/schemas/MonitoredObjectRef'
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
        reportingTimeframe:
          $ref: '#/components/schemas/ReportingTimeframe'
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
        state:
          $ref: '#/components/schemas/FaultManagementReportStateType'
      required:
      - creationDate
      - faultManagementJob
      - granularity
      - id
      - monitoredObject
      - outputFormat
      - reportingTimeframe
      - resultFormat
      - serviceSpecificConfiguration
      - state
      type: object
    HourRange:
      description: Defines start and end time.
      properties:
        start:
          description: Start time in format HH24:mm or HH24:mm:ss.
          pattern: "^(?:[01]\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?$"
          type: string
        end:
          description: End time in format HH:mm or HH:mm:ss.
          pattern: "^(?:[01]\\d|2[0-3]):[0-5]\\d(:[0-5]\\d)?$"
          type: string
      required:
      - end
      - start
      type: object
    JobType:
      description: The type of a Job. Proactive jobs are carried on continuously to
        permit timely reporting of fault or performance status. On-demand jobs are
        actions that are  initiated for a limited time to carry out the measurements.
        Passive  jobs support the collection and reporting of network and service
        statistics/faults.
      enum:
      - proactive
      - on-demand
      - passive
      type: string
    MeasurementTime:
      description: Timeframe boundary for collected data. Provide measurementStartDate
        and measurementEndDate or measurementStartDate and measurementInterval.
      properties:
        measurementStartDate:
          description: Start date of the period to which collected data points belong.
          format: date-time
          type: string
        measurementEndDate:
          description: End date of the period to which collected data points belong.
          format: date-time
          type: string
        measurementInterval:
          $ref: '#/components/schemas/TimeDuration'
      required:
      - measurementStartDate
      type: object
    ModifyFaultManagementJob:
      allOf:
      - $ref: '#/components/schemas/ModifyFaultManagementJob_Create'
      - properties:
          creationDate:
            description: Date when the Modify Fault Management Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink to the Modify Fault Management Job entity.
            type: string
          id:
            description: Unique identifier for the Modify Fault Management Job that
              is generated by the Seller/Server when the Modify Fault Management Job
              request  `state` is set to `acknowledged`.
            type: string
          state:
            $ref: '#/components/schemas/FaultManagementJobProcessStateType'
        required:
        - creationDate
        - id
        - state
        type: object
      description: Request for modification of an existing Fault Management Job.
    ModifyFaultManagementJob_Create:
      description: Request for modification of an existing Fault Management Job.
      properties:
        description:
          description: A free-text description of the Fault Management Job.
          type: string
        faultManagementJob:
          $ref: '#/components/schemas/FaultManagementJobRef'
        granularity:
          $ref: '#/components/schemas/TimeDuration'
        jobPriority:
          default: 5
          description: The priority of the Fault Management Job. The way the management
            application will use the Job priority to schedule Job execution is application-specific
            and out the scope.
          type: integer
        outputFormat:
          $ref: '#/components/schemas/OutputFormat'
        reportingPeriod:
          $ref: '#/components/schemas/TimeDuration'
        resultFormat:
          $ref: '#/components/schemas/ResultFormat'
        scheduleDefinition:
          $ref: '#/components/schemas/ScheduleDefinition'
        serviceSpecificConfiguration:
          $ref: '#/components/schemas/ServiceSpecificConfiguration'
      required:
      - faultManagementJob
      type: object
    MonitoredObjectRef:
      discriminator:
        mapping:
          EntityRef: '#/components/schemas/EntityRef'
          ServiceFromToRef: '#/components/schemas/ServiceFromToRef'
          ServiceRef: '#/components/schemas/ServiceRef'
        propertyName: '@type'
      properties:
        '@type':
          description: Used to unambiguously designate the class type when using `oneOf`
          enum:
          - EntityRef
          - ServiceFromToRef
          - ServiceRef
          type: string
      required:
      - '@type'
      type: object
    OutputFormat:
      description: List of possible output formats for the Report.
      enum:
      - json
      - xml
      - avro
      - csv
      type: string
    RecurringSchedule:
      description: "A definition of recurring schedule to run a job based on the Cron\
        \  utility in Linux-like systems. It defines how the job should  periodically\
        \ run at specified times, dates, or intervals. "
      properties:
        second:
          description: "A definition of time (seconds) to run a job. Allowed values:\
            \ 0-59,  and special characters: (,-*/), where:\n  - `*` -> any value\n\
            \  - `,` -> value list separator\n  - `-` -> range of values\n  - '/'\
            \ -> step values\nFor example:\n  - */5 * * * * * -> run a job at every\
            \ 5th second. \n  - */30 */1 * * * * -> run a job at every 30 seconds\
            \ \n    past every minute."
          type: string
        minute:
          description: "A definition of time (minutes) to run a job. Allowed values:\
            \ 0-59,  and special characters: (,-*/), where:\n  - `*` -> any value\n\
            \  - `,` -> value list separator\n  - `-` -> range of values\n  - '/'\
            \ -> step values\nFor example:\n  - 0 */10 * * * * -> run a job at every\
            \ 10th minute. \n  - 0 */30 0 * * * -> run a job at every 30th minute\
            \ past midnight.\n  - 0 */30 8 * * 1 -> run a job at every 30th minute\
            \ \n    past hour 8 on Monday."
          type: string
        hour:
          description: "A definition of time (hour) to run a job. Allowed values:\
            \ 0-23,  and special characters: (,-*/), where:\n  - `*` -> any value\n\
            \  - `,` -> value list separator\n  - `-` -> range of values\n  - '/'\
            \ -> step values\nFor example:\n  - 0 0 10 10 * * -> run a job at 10 am\
            \ on 10th day of every month. \n  - 0 * 1,2 * * * -> run a job at every\
            \ minute past hour 1 and 2.\n  - 0 0 */2 * * * -> run a job at every 2nd\
            \ hour."
          type: string
        dayOfMonth:
          description: "A definition of time (day of month) to run a job.  Allowed\
            \ values: 1-31, and special characters: (,-*/), where:\n  - `*` -> any\
            \ value\n  - `,` -> value list separator\n  - `-` -> range of values\n\
            \  - '/' -> step values\nFor example:\n  - 0 0 0 1,5,10,15 * * -> run\
            \ a job at midnight \n    on every 1st, 5th, 10th, 15th day of month.\
            \ \n  - 0 0 */1 1-10 1-3 * -> run a job at every full hour between 1st\
            \ \n    and 10th day of month in January, February, and March."
          type: string
        month:
          description: "A definition of time (month) to run a job. Allowed values:\
            \ 1-12 or JAN-DEC, and special characters: (,-*/), where:\n  - `*` ->\
            \ any value\n  - `,` -> value list separator\n  - `-` -> range of values\n\
            \  - '/' -> step values\nFor example:\n  - 0 5 0 * 8 * -> run a job at\
            \ 00:05 on every day in August. \n  - 0 0 0,12 1 */2 * -> run a job at\
            \ midnight and noon \n    on every 1st day of every 2nd month."
          type: string
        dayOfWeek:
          description: "A definition of time (day of week) to run a job. Allowed values:\
            \ 0-6 or SUN-SAT, and special characters: (,-*/), where:\n  - `*` -> any\
            \ value\n  - `,` -> value list separator\n  - `-` -> range of values\n\
            \  - '/' -> step values\nFor example:\n  - 0 0 22 * * 1-5 -> run a job\
            \ at 22:00 on every day \n    between Monday and Friday. \n  - 0 5 4 *\
            \ * sun -> run a job at 04:05 on Sunday."
          type: string
        hourRange:
          description: "A list of time ranges within a specific day that the schedule\
            \ will be active on, for example, 08:00-12:00, 16:00-19:00."
          items:
            $ref: '#/components/schemas/HourRange'
          type: array
      type: object
    ReportContentItem:
      description: Single item of the results in case result format was set to payload.  Each
        item contains the timeframe of the collected data and a list of  values captured
        in that timeframe.
      properties:
        measurementTime:
          $ref: '#/components/schemas/MeasurementTime'
        measurementDataPoint:
          description: List of values captured in the related timeframe.
          items:
            $ref: '#/components/schemas/ServiceSpecificResult'
          type: array
      required:
      - measurementDataPoint
      - measurementTime
      type: object
    ReportingTimeframe:
      description: Specifies the date range between which data points will be included
        in the report.
      properties:
        reportingStartDate:
          description: Start date of reporting timeframe.
          format: date-time
          type: string
        reportingEndDate:
          description: End date of reporting timeframe.
          format: date-time
          type: string
      type: object
    ResultFormat:
      description: List of possible result formats that define how Seller/Server will
        deliver a Report to the Buyer/Client.
      enum:
      - attachment
      - payload
      type: string
    ScheduleDefinition:
      description: The schedule definition for running jobs.
      properties:
        scheduleDefinitionStartTime:
          description: The start time of the Schedule Definition. If the attribute
            is  empty the Schedule starts immediately after provisioning of the Job.
          format: date-time
          type: string
        scheduleDefinitionEndTime:
          description: "The end time of the Schedule Definition. If the attribute\
            \ is empty the Schedule runs forever, not having a time constraint."
          format: date-time
          type: string
        recurringSchedule:
          $ref: '#/components/schemas/RecurringSchedule'
        executionDuration:
          $ref: '#/components/schemas/TimeDuration'
      type: object
    ServiceFromToRef:
      allOf:
      - $ref: '#/components/schemas/MonitoredObjectRef'
      - description: Reference to Service From and Service To endpoints.
        properties:
          serviceFrom:
            description: A reference to a Service From endpoint resource.
            properties:
              serviceFromHref:
                description: Hyperlink to the Service From endpoint.
                type: string
              serviceFromId:
                description: Identifier of the Service From endpoint.
                type: string
            required:
            - serviceFromId
            type: object
          serviceTo:
            description: A reference to a Service To endpoint resource.
            properties:
              serviceToHref:
                description: Hyperlink to the Service To endpoint.
                type: string
              serviceToId:
                description: Identifier of the Service To endpoint.
                type: string
            required:
            - serviceToId
            type: object
        required:
        - '@type'
        - serviceFrom
        - serviceTo
        type: object
      x-discriminator-value: ServiceFromToRef
    ServiceRef:
      allOf:
      - $ref: '#/components/schemas/MonitoredObjectRef'
      - description: Reference to a Service.
        properties:
          serviceHref:
            description: 'Hyperlink to the Service resource. '
            type: string
          serviceId:
            description: Identifier of the Service.
            type: string
        required:
        - '@type'
        - serviceId
        type: object
      x-discriminator-value: ServiceRef
    ServiceSpecificConfiguration:
      description: ServiceSpecificConfiguration is used as an extension point for  MEF-specific
        service fault management configuration. The `@type`  attribute is used as
        a discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          description: "Uniquely identifies the type of fault management job configuration.\
            \ In the case of MEF services, this is the URN provided in the fault management\
            \ configuration specification. The named type must be a  subclass of ServiceSpecificConfiguration."
          type: string
      required:
      - '@type'
      type: object
    ServiceSpecificResult:
      description: ServiceSpecificResult is used as an extension point for MEF-specific
        fault  management job results. The `@type` attribute is used as a discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          description: "The name that uniquely identifies the type of results that\
            \ are returned by the Fault Management Report. In the case of MEF  services,\
            \ this is the URN provided in the fault management results specification.\
            \ The named type must be a subclass of ServiceSpecificResult."
          type: string
      required:
      - '@type'
      type: object
    TimeDuration:
      description: "This class is used to describe durations expressed as a 2-tuple,\
        \ (value, units). The units from nanoseconds to years."
      properties:
        timeDurationValue:
          description: "The value of the duration. For example, if the duration is\
            \ 20 ms, this element is 20."
          type: integer
        timeDurationUnits:
          $ref: '#/components/schemas/TimeDurationUnits'
      required:
      - timeDurationUnits
      - timeDurationValue
      type: object
    TimeDurationUnits:
      description: "The unit of measure in the duration. For example, if an interval\
        \ is 2ms, this element is MS."
      enum:
      - NS
      - US
      - MS
      - SEC
      - MIN
      - HOUR
      - DAY
      - WEEK
      - MONTH
      - YEAR
      type: string
    TrackingRecord:
      description: Tracking Records allow the tracking of modifications of Fault  Management
        Job or Report.
      properties:
        creationDate:
          description: Date when the record was created.
          format: date-time
          type: string
        description:
          description: Free-text field describing the action that created the Tracking
            Record and its details.
          type: string
        id:
          description: Identifier of the Tracking Record.
          type: string
        relatedObjectId:
          description: Identifier of Fault Management Job or Report.
          type: string
        request:
          description: Request that created the Tracking Record.
          type: string
        system:
          description: Describes the system from which the action was done.
          type: string
        user:
          description: Describes the user doing the action.
          type: string
      required:
      - creationDate
      - id
      - relatedObjectId
      type: object
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
