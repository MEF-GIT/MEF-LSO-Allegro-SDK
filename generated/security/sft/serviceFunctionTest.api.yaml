openapi: 3.0.1
info:
  description: "**This file forms part of MEF W149**\n\n**This API implements part\
    \ of Business Requirements & Use Cases described\nin MEF W136.**\n\n**This specification\
    \ represents MEF work in progress and is subject to\nchange.**\n\nMEF Service\
    \ Function Testing is defined as testing that is performed either\nas a part of\
    \ service verification, service activation, or service \nmaintenance. The requirements\
    \ and Use Cases are the same for the Allegro\nInterface Reference Point (IRP),\
    \ the allegro IRP, and the Legato IRP.\n\n\nList of use cases supported by the\
    \ API:\n- Create, Modify, Suspend, Resume, Cancel Test Job w/Test Profile\n- Create,\
    \ Modify, Suspend, Resume, Cancel Test Job w/o Test Profile\n- Retrieve Test Job\
    \ List\n- Retrieve Test Job by ID\n- Create, Modify, Delete Test Profile\n- Retrieve\
    \ Test Profile List\n- Retrieve Test Profile by ID\n- Retrieve Test Result List\n\
    - Retrieve Test Result by ID\n- Subscribe to Notifications\n- Unsubscribe to Notifications\n\
    \nCopyright 2025 MEF Forum and its contributors\n\nThis file includes content\
    \ based on the TM Forum Service Test Management API\n(TMF653 v4.1.0) available\
    \ at \nhttps://github.com/tmforum-apis/TMF653_ServiceTestManagement, which is\
    \ licensed by \nthe TM Forum under the Apache License version 2.0. Such content\
    \ has been\nmodified by the MEF Forum and its contributors.\n"
  title: Service Function Testing
  version: 2.0.0-RC
servers:
- url: "https://{serverBase}/mefApi/allegro/serviceFunctionTesting/v2/"
  variables:
    serverBase:
      default: mef.net
      description: The base of SOF's URL.
security:
- oauth2MEFLSOAPI:
  - default
tags:
- name: testJob
- name: cancelTestJob
- name: modifyTestJob
- name: resumeTestJob
- name: suspendTestJob
- name: testProfile
- name: testResult
- name: events subscription
paths:
  /testJob:
    get:
      description: "The Buyer/Client requests a list of Test Jobs using none or more\
        \ of the filter criteria. The Seller/Server returns a summarized list of Test\
        \ Jobs. For each Test Job returned, the Seller/Server also provides a Test\
        \ Job Identifier that uniquely identifiers this Test Job within the Seller/Server.\
        \ The order of the elements returned to the Buyer/Client is defined by the\
        \ Seller/Server (e.g. natural order) and does not change between the pages."
      operationId: listTestJob
      parameters:
      - description: The from service identifier of the Service to be tested.
        in: query
        name: relatedServiceIdFrom
        required: false
        schema:
          type: string
      - description: The to service identifier of the Service to be tested.
        in: query
        name: relatedServiceIdTo
        required: false
        schema:
          type: string
      - description: The identifier of the Test Profile.
        in: query
        name: testProfileId
        required: false
        schema:
          type: string
      - description: The name of the Test Job.
        in: query
        name: name
        required: false
        schema:
          type: string
      - description: The start date and time of the Test Job - greater than.
        in: query
        name: startDateTime.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: The start date and time of the Test Job - lower than.
        in: query
        name: startDateTime.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: The end date and time of the Test Job - greater than.
        in: query
        name: endDateTime.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: The end date and time of the Test Job - lower than.
        in: query
        name: endDateTime.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by the client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Requested number of resources to be provided in response.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TestJob_Find'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listTestJob
      summary: List or find TestJob objects.
      tags:
      - testJob
    post:
      description: A request initiated by the Buyer/Client to create a Test Job in
        the Seller/Server that specifies the service to be tested.
      operationId: createTestJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TestJob_Common'
        description: The Test Job to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TestJob'
          description: '''Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createTestJob
      summary: Creates a TestJob.
      tags:
      - testJob
  /testJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Test
        Jobs based on the Test Job Identifier.
      operationId: retrieveTestJob
      parameters:
      - description: Identifier of the Test Job
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TestJob'
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveTestJob
      summary: Retrieves a TestJob by ID.
      tags:
      - testJob
  /cancelTestJob:
    get:
      description: The Buyer/Client requests a list of Cancel Test Job based on a
        set of filter criteria.
      operationId: listCancelTestJob
      parameters:
      - description: Identifer of Test Job that is a subject of CancelTestJob.
        in: query
        name: testJobId
        required: false
        schema:
          type: string
      - description: State of CancelTestJob. See `TestJobProcessStateType` definition
          for details.
        in: query
        name: state
        required: false
        schema:
          enum:
          - accepted
          - acknowledged
          - rejected
          type: string
      - description: Date when the CancelTestJob was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the CancelTestJob was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - description: Requested number of items to be provided in response requested
          by client.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/CancelTestJob'
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listCancelTestJob
      summary: Lists or finds CancelTestJob objects.
      tags:
      - cancelTestJob
    post:
      description: A request initiated by the Buyer/Client to cancel a Test Job in
        the Seller/Server system.
      operationId: createCancelTestJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/CancelTestJob_Common'
        description: The CancelTestJob to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelTestJob'
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createCancelTestJob
      tags:
      - cancelTestJob
  /cancelTestJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Cancel
        Test Job based on the Cancel Test Job Identifier.
      operationId: retrieveCancelTestJob
      parameters:
      - description: Identifier of the CancelTestJob
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/CancelTestJob'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveCancelTestJob
      summary: Retrieves a CancelTestJob by ID.
      tags:
      - cancelTestJob
  /suspendTestJob:
    get:
      description: The Buyer/Client requests a list of Suspend Test Job based on a
        set of filter criteria.
      operationId: listSuspendTestJob
      parameters:
      - description: Identifer of Test Job that is a subject of SuspendTestJob.
        in: query
        name: testJobId
        required: false
        schema:
          type: string
      - description: State of SuspendTestJob. See `TestJobProcessStateType` definition
          for details.
        in: query
        name: state
        required: false
        schema:
          enum:
          - accepted
          - acknowledged
          - rejected
          type: string
      - description: Date when the SuspendTestJob was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the SuspendTestJob was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - description: Requested number of items to be provided in response requested
          by client.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/SuspendTestJob'
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listSuspendTestJob
      summary: Lists or finds SuspendTestJob objects.
      tags:
      - suspendTestJob
    post:
      description: A request initiated by the Buyer/Client to suspend a Test Job in
        the Seller/Server system.
      operationId: createSuspendTestJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/SuspendTestJob_Common'
        description: The SuspendTestJob to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SuspendTestJob'
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createSuspendTestJob
      tags:
      - suspendTestJob
  /suspendTestJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Suspend
        Test Job based on the Suspend Test Job Identifier.
      operationId: retrieveSuspendTestJob
      parameters:
      - description: Identifier of the SuspendTestJob
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/SuspendTestJob'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveSuspendTestJob
      summary: Retrieves a SuspendTestJob by ID.
      tags:
      - suspendTestJob
  /resumeTestJob:
    get:
      description: The Buyer/Client requests a list of Resume Test Job based on a
        set of filter criteria.
      operationId: listResumeTestJob
      parameters:
      - description: Identifer of Test Job that is a subject of ResumeTestJob.
        in: query
        name: testJobId
        required: false
        schema:
          type: string
      - description: State of ResumeTestJob. See `TestJobProcessStateType` definition
          for details.
        in: query
        name: state
        required: false
        schema:
          enum:
          - accepted
          - acknowledged
          - rejected
          type: string
      - description: Date when the ResumeTestJob was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the ResumeTestJob was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - description: Requested number of items to be provided in response requested
          by client.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ResumeTestJob'
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listResumeTestJob
      summary: Lists or finds ResumeTestJob objects.
      tags:
      - resumeTestJob
    post:
      description: A request initiated by the Buyer/Client to resume a Test Job in
        the Seller/Server system.
      operationId: createResumeTestJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ResumeTestJob_Common'
        description: The ResumeTestJob to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ResumeTestJob'
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createResumeTestJob
      tags:
      - resumeTestJob
  /resumeTestJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Resume
        Test Job based on the Resume Test Job Identifier.
      operationId: retrieveResumeTestJob
      parameters:
      - description: Identifier of the ResumeTestJob
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ResumeTestJob'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveResumeTestJob
      summary: Retrieves a ResumeTestJob by ID.
      tags:
      - resumeTestJob
  /modifyTestJob:
    get:
      description: The Buyer/Client requests a list of Modify Test Job based on a
        set of filter criteria.
      operationId: listModifyTestJob
      parameters:
      - description: Identifer of Test Job that is a subject of ModifyTestJob.
        in: query
        name: testJobId
        required: false
        schema:
          type: string
      - description: State of ModifyTestJob. See `TestJobProcessStateType` definition
          for details.
        in: query
        name: state
        required: false
        schema:
          enum:
          - accepted
          - acknowledged
          - rejected
          type: string
      - description: Date when the ModifyTestJob was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the ModifyTestJob was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
      - description: Requested number of items to be provided in response requested
          by client.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/ModifyTestJob'
                type: array
          description: Success
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listModifyTestJob
      summary: Lists or finds ModifyTestJob objects.
      tags:
      - modifyTestJob
    post:
      description: A request initiated by the Buyer/Client to modify a Test Job in
        the Seller/Server system.
      operationId: createModifyTestJob
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/ModifyTestJob_Common'
        description: The ModifyTestJob to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyTestJob'
          description: Created
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createModifyTestJob
      tags:
      - modifyTestJob
  /modifyTestJob/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Modify
        Test Job based on the Modify Test Job Identifier.
      operationId: retrieveModifyTestJob
      parameters:
      - description: Identifier of the ModifyTestJob
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/ModifyTestJob'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveModifyTestJob
      summary: Retrieves a ModifyTestJob by ID.
      tags:
      - modifyTestJob
  /testProfile:
    get:
      description: "The Buyer/Client requests a list of TestProfiles based on a set\
        \ of filter criteria. The Seller/Server returns a summarized list of TestProfiles.\
        \ For each TestProfile returned, the Seller/Server also provides a TestProfiles\
        \ Identifier that uniquely identifiers this TestProfiles within the Seller/Server.\
        \ The order of the elements returned to the Buyer is defined by the Seller/Server\
        \ (e.g. natural order) and does not change between the pages."
      operationId: listTestProfile
      parameters:
      - description: Date when the profile was created - greater than.
        in: query
        name: creationDate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the profile was created - lower than.
        in: query
        name: creationDate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the profile was updated - greater than.
        in: query
        name: lastUpdate.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: Date when the profile was updated - lower than.
        in: query
        name: lastUpdate.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: The identifier of the related Service Specification.
        in: query
        name: relatedServiceSpecificationId
        required: false
        schema:
          type: string
      - description: Requested index for start of item to be provided in response
          requested by the client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Requested number of resources to be provided in response.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TestProfile'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listTestProfile
      summary: List or find Test Profile objects.
      tags:
      - testProfile
    post:
      description: A request initiated by the Buyer/Client to create a TestProfile
        Profile in the Seller/Server system.
      operationId: createTestProfile
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TestProfile_Create'
        description: The TestProfile to be created.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TestProfile'
          description: '''Created (https://tools.ietf.org/html/rfc7231#section-6.3.2)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - createTestProfile
      summary: Creates a TestProfile.
      tags:
      - testProfile
  /testProfile/{id}:
    delete:
      description: The Buyer/Client requests deletion of TestProfile by specifying
        TestProfile Identifier.
      operationId: deleteTestProfile
      parameters:
      - description: Identifier of the TestProfile
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - deleteTestProfile
      summary: Deletes a Test Profile.
      tags:
      - testProfile
    get:
      description: The Buyer/Client requests detailed information about a single TestProfile
        based on the TestProfile Identifier.
      operationId: retrieveTestProfile
      parameters:
      - description: Identifier of the TestProfile
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TestProfile'
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveTestProfile
      summary: Retrieves a Test Profile by ID.
      tags:
      - testProfile
    patch:
      description: A request initiated by the Buyer/Client to modify a TestProfile
        in the Seller/Server system based on a TestProfile Identifier.
      operationId: modifyTestProfile
      parameters:
      - description: Identifier of the TestProfile
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/TestProfile_Modify'
        description: Test Profile to be updated.
        required: true
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TestProfile'
          description: '''Updated (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "409":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error409'
          description: Conflict
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - modifyTestProfile
      summary: Modifies partially a TestProfile.
      tags:
      - testProfile
  /testResult:
    get:
      description: "The Buyer/Client requests a list of Test Results using none or\
        \ more of the filter criteria. The Seller/Server returns a summarized list\
        \ of Test Results. For each Test Result returned, the Seller/Server also provides\
        \ a Test Result Identifier that uniquely identifiers this Test Result within\
        \ the Seller/Server. The order of the elements returned to the Buyer/Client\
        \ is defined by the Seller/Server (e.g. natural order) and does not change\
        \ between the pages."
      operationId: listTestResult
      parameters:
      - description: The identifier of the Test Job.
        in: query
        name: testJobId
        required: false
        schema:
          type: string
      - description: The from service identifier for a related Service.
        in: query
        name: relatedServiceIdFrom
        required: false
        schema:
          type: string
      - description: The to service identifier for a related Service.
        in: query
        name: relatedServiceIdTo
        required: false
        schema:
          type: string
      - description: The identifier of the related Service Specification.
        in: query
        name: relatedServiceSpecificationId
        required: false
        schema:
          type: string
      - description: The contact for a Test Job.
        in: query
        name: relatedContactInformationName
        required: false
        schema:
          type: string
      - description: The start date and time of the Test Result for a given Test Job
          - greater than.
        in: query
        name: startDateTime.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: The start date and time of the Test Result for a given Test Job
          - lower than.
        in: query
        name: startDateTime.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: The end date and time of the Test Result for a given Test Job
          - greater than.
        in: query
        name: endDateTime.gt
        required: false
        schema:
          format: date-time
          type: string
      - description: The end date and time of the Test Result for a given Test Job
          - lower than.
        in: query
        name: endDateTime.lt
        required: false
        schema:
          format: date-time
          type: string
      - description: Requested index for start of item to be provided in response
          requested by the client. Note that the index starts with "0".
        in: query
        name: offset
        required: false
        schema:
          type: integer
      - description: Requested number of resources to be provided in response.
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/TestResult_Common'
                type: array
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
          headers:
            X-Pagination-Throttled:
              description: Used to indicate that result page was throttled to maximum
                possible size and there are additional results that can be fetched.
              schema:
                type: boolean
            X-Total-Count:
              description: "The total number of matching items. E.g. if there are\
                \ 50 matching items in total, but the request has offset=10 and limit=10,\
                \ then the X-Total-Count is 50."
              schema:
                type: integer
            X-Result-Count:
              description: The number of items included in the response.
              schema:
                type: integer
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "422":
          content:
            application/json;charset=utf-8:
              schema:
                items:
                  $ref: '#/components/schemas/Error422'
                type: array
          description: Unprocessable entity due to the business validation problems
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - listTestResult
      summary: List or find TestJob objects.
      tags:
      - testResult
  /testResult/{id}:
    get:
      description: The Buyer/Client requests detailed information about a single Test
        Result based on the Test Result Identifier.
      operationId: retrieveTestResult
      parameters:
      - description: Identifier of the Test Result
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/TestResult'
          description: '''OK. (https://tools.ietf.org/html/rfc7231#section-6.3.1)'''
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
      security:
      - oauth2MEFLSOAPI:
        - retrieveTestResult
      summary: Retrieves a TestResult by ID.
      tags:
      - testResult
  /hub:
    post:
      description: "The Buyer/Client requests to subscribe to Test Job, Test Profile\
        \ or Test Result Notifications."
      operationId: registerListener
      requestBody:
        content:
          application/json;charset=utf-8:
            schema:
              $ref: '#/components/schemas/EventSubscriptionInput'
        description: Data containing the callback endpoint to deliver the information.
        required: true
      responses:
        "201":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Subscribed
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      security:
      - oauth2MEFLSOAPI:
        - registerListener
      summary: Register a listener
      tags:
      - events subscription
  /hub/{id}:
    delete:
      description: The Buyer/Client requests to unsubscribe from Test Job Notifications.
      operationId: unregisterListener
      parameters:
      - description: The id of the registered listener
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          description: Deleted
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      security:
      - oauth2MEFLSOAPI:
        - unregisterListener
      summary: Unregister a listener
      tags:
      - events subscription
    get:
      description: The Buyer/Client requests detailed information about a single Notification
        Hub based on the Hub Identifier.
      operationId: retrieveHub
      parameters:
      - description: Identifier of the Hub
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/EventSubscription'
          description: Success
        "400":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error400'
          description: Bad Request
        "401":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Unauthorized
        "403":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error403'
          description: Forbidden
        "404":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Not Found
        "500":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error500'
          description: Internal Server Error
        "501":
          content:
            application/json;charset=utf-8:
              schema:
                $ref: '#/components/schemas/Error501'
          description: Method not implemented.
      security:
      - oauth2MEFLSOAPI:
        - retrieveHub
      summary: Retrieves a Hub by ID.
      tags:
      - events subscription
components:
  schemas:
    CancelTestJob:
      allOf:
      - $ref: '#/components/schemas/CancelTestJob_Common'
      - description: Request for cancellation of an existing Test job
        properties:
          cancellationDeniedReason:
            description: "If the Cancel Test Job request is denied by the Seller/Server,\
              \ the Seller/Server provides a reason to the Buyer/Client using this\
              \ attribute."
            type: string
          creationDate:
            description: Date when Cancel Test Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink to the Cancel Test Job entity
            type: string
          id:
            description: Unique identifier for the Cancel Test Job that is generated
              by the Seller/Server when the Cancel Test Job request `state` is set
              to `acknowledged`.
            type: string
          state:
            $ref: '#/components/schemas/TestJobProcessStateType'
        required:
        - creationDate
        - href
        - id
        - state
        type: object
    CancelTestJob_Common:
      description: Request for cancellation of an existing Test Job
      properties:
        cancellationReason:
          description: An optional attribute that allows the Buyer/Client to provide
            additional detail to the Seller/Server on the reason for cancelling Test
            Job.
          type: string
        testJob:
          $ref: '#/components/schemas/TestJobRef'
      required:
      - testJob
      type: object
    Duration:
      description: "A Duration in a given unit of time e.g. 3 hours, or 5 days."
      properties:
        amount:
          description: "Duration (number of seconds, minutes, hours, etc.)"
          minimum: 0
          type: integer
        units:
          $ref: '#/components/schemas/TimeUnit'
      required:
      - amount
      - units
      type: object
    Error:
      description: |
        Standard Class used to describe API response error Not intended to be used directly. The `code` in the HTTP header is used as a discriminator for the type of error returned in runtime.
      properties:
        message:
          description: Text that provides mode details and corrective actions related
            to the error. This can be shown to a client user.
          type: string
        reason:
          description: Text that explains the reason for the error. This can be shown
            to a client user.
          maxLength: 255
          type: string
        referenceError:
          description: URL pointing to documentation describing the error
          format: uri
          type: string
      required:
      - reason
      type: object
    Error400:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error400Code'
        required:
        - code
        type: object
      description: Bad Request. (https://tools.ietf.org/html/rfc7231#section-6.5.1)
    Error400Code:
      description: |
        One of the following error codes:
        - missingQueryParameter: The URI is missing a required query-string
        parameter
        - missingQueryValue: The URI is missing a required query-string
        parameter value
        - invalidQuery: The query section of the URI is invalid.
        - invalidBody: The request has an invalid body
      enum:
      - missingQueryParameter
      - missingQueryValue
      - invalidQuery
      - invalidBody
      type: string
    Error401:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error401Code'
        required:
        - code
        type: object
      description: Unauthorized.  (https://tools.ietf.org/html/rfc7235#section-3.1)
    Error401Code:
      description: |
        One of the following error codes:
        - missingCredentials: No credentials provided.
        - invalidCredentials: Provided credentials are invalid or expired
      enum:
      - missingCredentials
      - invalidCredentials
      type: string
    Error403:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error403Code'
        required:
        - code
        type: object
      description: Forbidden. This code indicates that the server understood the request
        but refuses to authorize it. (https://tools.ietf.org/html/rfc7231#section-6.5.3)
    Error403Code:
      description: |-
        This code indicates that the server understood
        the request but refuses to authorize it because
        of one of the following error codes:
        - accessDenied: Access denied
        - forbiddenRequester: Forbidden requester
        - tooManyUsers: Too many users
      enum:
      - accessDenied
      - forbiddenRequester
      - tooManyUsers
      type: string
    Error404:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: |
              The following error code:
              - notFound: A current representation for the target resource
              not found
            enum:
            - notFound
            type: string
        required:
        - code
        type: object
      description: Resource for the requested path not found. (https://tools.ietf.org/html/rfc7231#section-6.5.4)
    Error409:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: |
              The following error code:
              - conflict: The client has provided a value whose semantics are
              not appropriate for the property.
            enum:
            - conflict
            type: string
        required:
        - code
        type: object
      description: Conflict (https://datatracker.ietf.org/doc/html/rfc7231#section-6.5.8)
    Error422:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            $ref: '#/components/schemas/Error422Code'
          propertyPath:
            description: |
              A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
              Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
            type: string
        required:
        - code
        type: object
      description: Unprocessable entity due to a business validation problem. (https://tools.ietf.org/html/rfc4918#section-11.2)
    Error422Code:
      description: |
        One of the following error codes:
          - missingProperty: The property the Seller has expected is not present in the payload
          - invalidValue: The property has an incorrect value
          - invalidFormat: The property value does not comply with the expected value format
          - referenceNotFound: The object referenced by the property cannot be identified in the Seller system
          - unexpectedProperty: Additional property, not expected by the Seller has been provided
          - tooManyRecords: the number of records to be provided in the response exceeds the Seller's threshold.
          - otherIssue: Other problem was identified (detailed information provided in a reason)
      enum:
      - missingProperty
      - invalidValue
      - invalidFormat
      - referenceNotFound
      - unexpectedProperty
      - tooManyRecords
      - otherIssue
      type: string
    Error500:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: |
              The following error code:
              - internalError: Internal server error - the server encountered
              an unexpected condition that prevented it from fulfilling the
              request.
            enum:
            - internalError
            type: string
        required:
        - code
        type: object
      description: Internal Server Error. (https://tools.ietf.org/html/rfc7231#section-6.6.1)
    Error501:
      allOf:
      - $ref: '#/components/schemas/Error'
      - properties:
          code:
            description: |-
              The following error code:
              - notImplemented: Method not supported by the server
            enum:
            - notImplemented
            type: string
        required:
        - code
        type: object
      description: Not Implemented. Used in case Seller is not supporting an optional
        operation (https://tools.ietf.org/html/rfc7231#section-6.6.2)
    EventSubscription:
      allOf:
      - $ref: '#/components/schemas/EventSubscriptionInput'
      - description: This resource is used to respond to notification subscriptions.
        properties:
          id:
            description: An identifier of this Event Subscription assigned when a
              resource is created.
            type: string
        type: object
      required:
      - id
    EventSubscriptionInput:
      description: This class is used to register for Notifications.
      properties:
        callback:
          description: "This callback value must be set to *host* property from SFT\
            \ Notification API (serviceFunctionTestNotification.api.yaml). This property\
            \ is appended with the base path and notification resource path specified\
            \ in that API to construct an URL to which notification is sent. E.g.\
            \ for 'callback': \"https://buyer.mef.com/listenerEndpoint\", the SFT\
            \ event notification will be sent to: `https://buyer.mef.com/listenerEndpoint/mefApi/allegro/serviceFuctionTestNotification/v1/`"
          type: string
        query:
          description: "This attribute is used to define to which type of events to\
            \ register to. Example: 'query':'eventType = testJobCreateEvent'. To subscribe\
            \ for more than one event type, put the values separated by comma: `eventType=testJobCreateEvent,testProfileAttributeValueChangeEvent`.\
            \ The possible values are enumerated by 'TestProfileEventType' and TestJobEventType\
            \ in serviceFunctionTestNotification.api.yaml. An empty query is treated\
            \ as specifying no filters - ending in subscription for all event types."
          type: string
      required:
      - callback
      - id
      type: object
    ModifyTestJob:
      allOf:
      - $ref: '#/components/schemas/ModifyTestJob_Common'
      - description: Request for modification of an existing Test job
        properties:
          modificationDeniedReason:
            description: "If the Modify Test Job request is denied by the Seller/Server,\
              \ the Seller/Server provides a reason to the Buyer/Client using this\
              \ attribute."
            type: string
          creationDate:
            description: Date when Modify Test Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink to the Modify Test Job entity
            type: string
          id:
            description: Unique identifier for the Modify Test Job that is generated
              by the Seller/Server when the Modify Test Job request `state` is set
              to `acknowledged`.
            type: string
          state:
            $ref: '#/components/schemas/TestJobProcessStateType'
        required:
        - creationDate
        - href
        - id
        - state
        type: object
    ModifyTestJob_Common:
      description: Request for modification of an existing Test Job
      properties:
        modificationReason:
          description: An optional attribute that allows the Buyer/Client to provide
            additional detail to the Seller/Server on the reason for cancelling Test
            Job.
          type: string
        testJob:
          $ref: '#/components/schemas/TestJobRef'
        name:
          description: The name of the Test Job.
          type: string
        description:
          description: A description of the Test Job.
          type: string
        startDateTime:
          description: The start date and time of the Test Job. If the attribute is
            empty the Test Jobs starts immediately.
          format: date-time
          type: string
        endDateTime:
          description: The end date and time of the Test Job. If the attribute is
            empty the Test Job runs forever.
          format: date-time
          type: string
        testProfile:
          $ref: '#/components/schemas/TestProfileRefOrValue'
        relatedServiceFrom:
          $ref: '#/components/schemas/ServiceRef'
        relatedServiceTo:
          $ref: '#/components/schemas/ServiceRef'
        serviceSpecificTestJobConfiguration:
          $ref: '#/components/schemas/ServiceSpecificTestJobConfiguration'
      required:
      - testJob
      type: object
    RelatedContact:
      properties:
        emailAddress:
          description: The email address for this contact.
          type: string
        name:
          description: The name of person or organization to be contacted.
          type: string
        organization:
          description: The organization of this contact.
          type: string
        phoneNumber:
          description: The telephone number for this contact.
          type: string
        phoneNumberExtension:
          description: The telephone number extension for this contact.
          type: string
        postalAddress:
          description: The postal address for this contact.
          type: string
      type: object
    ResumeTestJob:
      allOf:
      - $ref: '#/components/schemas/ResumeTestJob_Common'
      - description: Request for resumption of an existing Test job
        properties:
          resumptionDeniedReason:
            description: "If the Resume Test Job request is denied by the Seller/Server,\
              \ the Seller/Server provides a reason to the Buyer/Client using this\
              \ attribute."
            type: string
          creationDate:
            description: Date when Resume Test Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink to the Resume Test Job entity
            type: string
          id:
            description: Unique identifier for the Resume Test Job that is generated
              by the Seller/Server when the Resume Test Job request `state` is set
              to `acknowledged`.
            type: string
          state:
            $ref: '#/components/schemas/TestJobProcessStateType'
        required:
        - creationDate
        - href
        - id
        - state
        type: object
    ResumeTestJob_Common:
      description: Request for resumption of an existing Test Job
      properties:
        resumptionReason:
          description: An optional attribute that allows the Buyer/Client to provide
            additional detail to the Seller/Server on the reason for cancelling Test
            Job.
          type: string
        testJob:
          $ref: '#/components/schemas/TestJobRef'
      required:
      - testJob
      type: object
    ServiceRef:
      description: Reference to a Service instance.
      properties:
        href:
          description: Hyperlink reference to Service
          type: string
        id:
          description: unique identifier of Service
          type: string
      required:
      - id
      type: object
    ServiceSpecificTestResultConfguration:
      description: ServiceSpecificTestResultConfguration is used as an extension point
        for schema to be used that defines the Test Result attributes. The `@type`
        attribute is used as a discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          description: The named type must be a subclass of ServiceSpecificTestJobResult.
          type: string
      required:
      - '@type'
      type: object
    ServiceSpecificTestJobConfiguration:
      description: ServiceSpecificTestJobConfiguration is used as an extension point
        for schema to be used that defines the Test Measure attributes. The `@type`
        attribute is used as a discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          description: The named type must be a subclass of ServiceSpecificTestJobConfiguration.
          type: string
      required:
      - '@type'
      type: object
    ServiceSpecificTestProfileConfiguration:
      description: ServiceSpecificTestProfileConfiguration is used as an extension
        point for  for schema that define how a test is performed for a given Test
        Specification. The `@type` attribute is used as a discriminator.
      discriminator:
        propertyName: '@type'
      properties:
        '@type':
          description: The named type must be a subclass of ServiceSpecificTestProfileConfiguration.
          type: string
      required:
      - '@type'
      type: object
    ServiceSpecificationRef:
      properties:
        href:
          description: Hyperlink reference to the Service Specification
          format: uri
          type: string
        id:
          description: The unique identifier of the related Service Specification
            that this Test Profile can be used to test
          type: string
      required:
      - id
      type: object
    SuspendTestJob:
      allOf:
      - $ref: '#/components/schemas/SuspendTestJob_Common'
      - description: Request for suspension of an existing Test job
        properties:
          suspensionDeniedReason:
            description: "If the Suspend Test Job request is denied by the Seller/Server,\
              \ the Seller/Server provides a reason to the Buyer/Client using this\
              \ attribute."
            type: string
          creationDate:
            description: Date when Suspend Test Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink to the Suspend Test Job entity
            type: string
          id:
            description: Unique identifier for the Suspend Test Job that is generated
              by the Seller/Server when the Suspend Test Job request `state` is set
              to `acknowledged`.
            type: string
          state:
            $ref: '#/components/schemas/TestJobProcessStateType'
        required:
        - creationDate
        - href
        - id
        - state
        type: object
    SuspendTestJob_Common:
      description: Request for suspension of an existing Test Job
      properties:
        suspensionReason:
          description: An optional attribute that allows the Buyer/Client to provide
            additional detail to the Seller/Server on the reason for suspending Test
            Job.
          type: string
        testJob:
          $ref: '#/components/schemas/TestJobRef'
      required:
      - testJob
      type: object
    TerminationError:
      description: This indicates an error that caused an Item to be terminated. The
        code and propertyPath should be used like in Error422.
      properties:
        code:
          $ref: '#/components/schemas/Error422Code'
        propertyPath:
          description: |
            A pointer to a particular property of the payload that caused the validation issue. It is highly recommended that this property should be used.
            Defined using JavaScript Object Notation (JSON) Pointer (https://tools.ietf.org/html/rfc6901).
          type: string
        value:
          description: Text to describe the reason of the termination.
          type: string
      type: object
    TestJob:
      allOf:
      - $ref: '#/components/schemas/TestJob_Common'
      - description: A definition of Test Job for a specific Service Identifier.
        properties:
          actualStartDateTime:
            description: The actual start date and time that a Test Job started.
            format: date-time
            type: string
          actualEndDateTime:
            description: The actual end date and time of the Test Job.
            format: date-time
            type: string
          creationDate:
            description: Date when the Test Job was created.
            format: date-time
            type: string
          href:
            description: Hyperlink reference
            format: uri
            type: string
          id:
            description: The identifier of the Test Job.
            type: string
          lastModifiedDate:
            description: Date when the job was last modified.
            format: date-time
            type: string
          state:
            $ref: '#/components/schemas/TestJobStateType'
          terminationError:
            description: "When the Seller/Server cannot process the request, the Seller/Server\
              \ returns a text-based list of reasons here."
            items:
              $ref: '#/components/schemas/TerminationError'
            type: array
        required:
        - creationDate
        - href
        - id
        - lastModifiedDate
        - state
        type: object
    TestJobProcessStateType:
      description: |-
        The state of the process related to Test Job

        | state          | MEF W136.1 name | Description                                                                                                                                                                                                                                                                                                                                                                                                                                           |
        | -------------- | --------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
        | `accepted`     | ACCEPTED        | The Modify/Cancel/Resume/Suspend Test Job request has been accepted and processed by the Seller/Server.                                                                                                                                                                                                                                                                                                                                               |
        | `acknowledged` | ACKNOWLEDGED    | The Modify/Cancel/Resume/Suspend Test Job request has been received by the Seller/Server and has passed basic validation. Test Job Process Identifier is assigned in the Acknowledged state. The request remains in the Acknowledged state until all validations as applicable are completed. If the attributes are validated, the request moves to the Accepted state. If not all attributes are validated, the request moves to the Rejected state. |
        | `rejected`     | REJECTED        | The Modify/Cancel/Resume/Suspend Test Job request has been rejected by the Seller/Server.                                                                                                                                                                                                                                                                                                                                                             |
      enum:
      - accepted
      - acknowledged
      - rejected
      type: string
    TestJobRef:
      description: A reference to a Test Job resource
      properties:
        href:
          description: Hyperlink to the referenced Test Job
          type: string
        id:
          description: Identifier of the referenced Test Job
          type: string
      required:
      - id
      type: object
    TestJobStateType:
      description: |-
        The state of the Test Job.

        | State                    | MEF W136.1 name        | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          |
        | -------------------------| -----------------------||
        | `acknowledged`           | ACKNOWLEDGED           | The Create Test Job request has been received from the Buyer/Client and the Seller/Server has assigned a Test Job Identifier to it. If the request attributes fail validation, the Create Test Job moves to the REJECTED state. If the attributes pass validation, it is then determined if the Create Test Job Start Date Time is immediate or if the Create Test Job Start Date Time indicates that the Test Job is to be scheduled for a later date time. If the Test Job is to be scheduled the Test Job moves to the SCHEDULED state and awaits the scheduled date and time. If the Test Job is to be performed immediately, the Test Job moves to the IN_PROGRESS state and Test Results begin.|
        | `assessingCancelation`   | ASSESSING_CANCELLATION | A Cancel Test Job  request is received while the Test Job is in the IN_PROGRESS, SUSPENDED or SCHEDULED state. If the Cancel Test Job request is approved, the Test Job moves to the CANCELLED state. If not, the Test Job returns to the IN_PROGRESS, SUSPENDED or SCHEDULED state.                                                                                                                                                                                                                                                                                                                                                                                                                 |
        | `assessingModification`  | ASSESSING_MODIFICATION | A Modify Test Job request was received while the Test Job is in the SUSPENDED or SCHEDULED state. If the Modify Test Job is accepted, the Test Job is updated. If the Modify Test Job is declined, the Test Job is not updated and returns to the SUSPENDED or SCHEDULED state.                                                                                                                                                                                                                                                                                                                                                                                                                      |
        | `cancelled`              | CANCELLED              | A Cancel Test Job request is received from the Buyer/Client.  If the request is accepted, the Test Job moves to the CANCELLED state.  The Test Job must be in the IN_PROGRESS, SCHEDULED, or SUSPENDED, state.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |
        | `completed`              | COMPLETED              | The Test Job has reached the End Date Time or has completed all Test Measurements and provided Test Results.                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         |
        | `inProgress`             | IN_PROGRESS            | Whether an immediate request or a scheduled request, the Test Job moves to the IN_PROGRESS state when it begins performing Test Results. If a Cancel Test Job request is received and accepted, the Test Job moves to the CANCELLED state. If the Cancel Test Job request is declined, the Test Job returns to the IN_PROGRESS state and continues Test Results until they are completed. If a Suspend Test Job request is received, the Test Job moves to the SUSPENDED state.                                                                                                                                                                                                                      |
        | `rejected`               | REJECTED               | The Create Test Job request fails validation and is rejected|
        | `scheduled`              | SCHEDULED              | The Test Job is scheduled to start at a later time. The Test Job stays in the SCHEDULED state until the Start Date and Time is reached. The Test Job moves to IN_PROGRESS when the Start Date and Time is reached. A Test Job with the state SCHEDULED can be moved to the SUSPENDED or CANCELLED state.                                                                                                                                                                                                                                                                                                                                                                                             |
        | `suspended`              | SUSPENDED              | A Test Job in the IN_PROGRESS or SCHEDULED state receives a Suspend Test Job request. The Test Job moves to the SUSPENDED state|
      enum:
      - acknowledged
      - assessingCancelation
      - assessingModification
      - cancelled
      - completed
      - inProgress
      - rejected
      - scheduled
      - suspended
      type: string
    TestJob_Common:
      description: A definition of Test Job for a specific Service Identifier.
      properties:
        name:
          description: The name of the Test Job.
          type: string
        description:
          description: A description of the Test Job.
          type: string
        startDateTime:
          description: "The start date and time of the Test Job. If the Buyer desiresto\
            \ schedule a test, this is a future date/time. If the Buyer desires an\
            \ immediate test, this is empty."
          format: date-time
          type: string
        endDateTime:
          description: The end date and time of the Test Job.
          format: date-time
          type: string
        recurrencePeriod:
          $ref: '#/components/schemas/Duration'
        testProfile:
          $ref: '#/components/schemas/TestProfileRefOrValue'
        validFor:
          description: The last date that the Test Job is valid.
          format: date-time
          type: string
        relatedServiceFrom:
          $ref: '#/components/schemas/ServiceRef'
        relatedServiceTo:
          $ref: '#/components/schemas/ServiceRef'
        serviceSpecificTestJobConfiguration:
          $ref: '#/components/schemas/ServiceSpecificTestJobConfiguration'
      required:
      - endDateTime
      - name
      - relatedServiceFrom
      - relatedServiceTo
      - serviceSpecificTestJobConfiguration
      - testProfile
      - validFor
      type: object
    TestJob_Find:
      description: This class represents a single list item for the response of  `listTestJob`
      properties:
        endDateTime:
          description: The end date and time of the Test Job.
          type: string
        id:
          description: A unique identifier for the Test Job assigned by the Seller/Server.
          type: string
        name:
          description: The name of the Test Job..
          type: string
        relatedServiceFrom:
          $ref: '#/components/schemas/ServiceRef'
        relatedServiceTo:
          $ref: '#/components/schemas/ServiceRef'
        startDateTime:
          description: The start date and time of the Test Job.
          type: string
        testProfile:
          $ref: '#/components/schemas/TestProfileRefOrValue'
      required:
      - endDateTime
      - idRelatedContact
      - name
      - relatedServiceFrom
      - relatedServiceTo
      - startDateTime
      - testProfile
      type: object
    TestProfile:
      allOf:
      - $ref: '#/components/schemas/TestProfile_Common'
      - description: Detailed specification that includes the Test Job attributes
          and Service  Specifications that are specified to be tested by this Test
          Profile.
        type: object
      properties:
        creationDate:
          description: Date when Test Profile was created.
          format: date-time
          type: string
        href:
          description: Hyperlink reference
          format: uri
          type: string
        id:
          description: A unique identifier for the Test Profile assigned by the Seller/Server.
          type: string
        lifecycleState:
          $ref: '#/components/schemas/TestProfileLifecycleStateType'
        lastUpdate:
          description: Date and time of the last update of the Test Profile
          format: date-time
          type: string
      required:
      - creationDate
      - href
      - id
    TestProfileLifecycleStateType:
      description: |-
        Current lifecycle status of the Test Profile.

        | State          | MEF W136.1 name     | Description                                                                                    |
        | -------------- | ------------------- | ---------------------------------------------------------------------------------------------- |
        | `assigned`     | ASSIGNED            | The Test Profile has been  assigned to a Test Job.                                             |
        | `available`    | AVAILABLE           | The Test Profile has been created or modified and is ready for users to specify in a Test Job. |
      enum:
      - assigned
      - available
      type: string
    TestProfileLifecycleStatusType:
      description: |-
        Current lifecycle status of the Test Profile.

        | Status          | MEF W136.1 name     | Description                                             |
        | -------------- | ------------------- | -------------------------------------------------------- |
        | `experimental` | EXPERIMENTAL     | Test Profile use may be limited to a small number of users. |
        | `pending`      | PENDING          | Test Profile is waiting to be Approved                      |
        | `approved`     | APPROVED         | Test Profile has been Approved for general use.             |
        | `deprecated`   | DEPRECATED       | Test Profile has been replaced by another Test Profile.     |
      enum:
      - experimental
      - pending
      - approved
      - deprecated
      type: string
    TestProfileRef:
      allOf:
      - $ref: '#/components/schemas/TestProfileRefOrValue'
      - properties:
          href:
            description: Hyperlink to the referenced Test Profile
            type: string
          id:
            description: Identifier of the referenced Test Profile
            type: string
        required:
        - id
        type: object
      description: A reference to a Test Profile resource
    TestProfileRefOrValue:
      description: Defines the reference to Test Profile or defines values from TestProfile
        type.
      discriminator:
        mapping:
          TestProfileRef: '#/components/schemas/TestProfileRef'
          TestProfileValue: '#/components/schemas/TestProfileValue'
        propertyName: '@type'
      properties:
        '@type':
          description: This field is used as a discriminator to differentiate if object
            relates directly to Test Profile entity or defines values from TestProfile
            type.
          enum:
          - TestProfileRef
          - TestProfileValue
          type: string
      required:
      - '@type'
    TestProfileRelationship:
      properties:
        id:
          description: The unique identifier for a related Test Profile
          type: string
        name:
          description: The unique name for a related Test Profile
          type: string
        order:
          description: The order which the related Test Jobs are run during a Test
            Job
          type: integer
        relatedServiceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        role:
          $ref: '#/components/schemas/TestProfileRelationshipRole'
        validFor:
          description: The last date that the Test Profile is valid.
          format: date-time
          type: string
      required:
      - id
      - name
      - relatedServiceSpecification
      - role
      type: object
    TestProfileRelationshipRole:
      description: |-
        Role of the relationship.

        | role          | MEF W136.1 name    | Description                                                         |
        | ------------- | ------------------ | ------------------------------------------------------------------- |
        | `primary`      | PRIMARY           | Test Profile to be started first.                                   |
        | `secondary`    | SECONDARY         | Test Profile to be started after Primary Test Profile is completed. |
      enum:
      - primary
      - secondary
      type: string
    TestProfileValue:
      allOf:
      - $ref: '#/components/schemas/TestProfileRefOrValue'
      - properties:
          serviceSpecificTestProfileConfiguration:
            $ref: '#/components/schemas/ServiceSpecificTestProfileConfiguration'
          relatedServiceSpecification:
            $ref: '#/components/schemas/ServiceSpecificationRef'
          relatedContact:
            description: Contacts who manage or otherwise have an interest in this
              Test Profile
            items:
              $ref: '#/components/schemas/RelatedContact'
            type: array
        type: object
      description: Direct assignment of values defined by TestProfile type to TestJob
        object.  Necessary when TestJob is created without reference to TestProfile.
    TestProfile_Common:
      description: Detailed specification that includes the Test Job attributes and
        Service  Specifications that are specified to be tested by this Test Profile.
      properties:
        description:
          description: A free-text description of the Test Profile
          type: string
        isBundled:
          description: "Determines whether specification represents a single Test\
            \ Profile (false),  or a bundle of Test Profiles (true). For atomic Test\
            \ Profiles this is always set to false."
          type: boolean
        lifecycleStatus:
          $ref: '#/components/schemas/TestProfileLifecycleStatusType'
        name:
          description: The name of the Test Profile
          type: string
        validFor:
          description: Last date that the Test Profile is valid
          format: date-time
          type: string
        testProfileRelationship:
          description: Test profile may relate to more than one sub Test Profiles.
          items:
            $ref: '#/components/schemas/TestProfileRelationship'
          type: array
        serviceSpecificTestProfileConfiguration:
          $ref: '#/components/schemas/ServiceSpecificTestProfileConfiguration'
        relatedServiceSpecification:
          $ref: '#/components/schemas/ServiceSpecificationRef'
        relatedContact:
          description: Contacts who manage or otherwise have an interest in this Test
            Profile
          items:
            $ref: '#/components/schemas/RelatedContact'
          type: array
      type: object
    TestProfile_Create:
      allOf:
      - $ref: '#/components/schemas/TestProfile_Common'
      - description: Detailed specification that includes the Test Job attributes
          and Service  Specifications that are specified to be tested by this Test
          Profile. This type is used in the request.
        type: object
      required:
      - isBundled
      - lifecycleStatus
      - name
      - relatedServiceSpecification
      - validFor
    TestProfile_Modify:
      allOf:
      - $ref: '#/components/schemas/TestProfile_Common'
      - description: Detailed specification that includes the Test Job attributes
          and Service  Specifications that are specified to be tested by this Test
          Profile. This type is used in the request.
        type: object
      minProperties: 1
    TestResult:
      allOf:
      - $ref: '#/components/schemas/TestResult_Common'
      - description: The execution of a Test Job creates Test Result that provide
          Buyer/Client with the results of the Job.
        properties:
          serviceSpecificTestResultConfguration:
            $ref: '#/components/schemas/ServiceSpecificTestResultConfguration'
        required:
        - serviceSpecificTestResultConfguration
        type: object
    TestResult_Common:
      description: The execution of a Test Job creates Test Result that provide Buyer/Client
        with the results of the Job.
      properties:
        actualStartDateTime:
          description: The actual start date and time of the Test Result for a given
            Test Job.
          format: date-time
          type: string
        actualEndDateTime:
          description: The actual end date and time of the Test Result for a given
            Test Job.
          format: date-time
          type: string
        href:
          description: Hyperlink reference
          format: uri
          type: string
        id:
          description: A unique identifier for the Test Result assigned by the Seller/Server.
          type: string
        relatedServiceFrom:
          $ref: '#/components/schemas/ServiceRef'
        relatedServiceTo:
          $ref: '#/components/schemas/ServiceRef'
        testJob:
          $ref: '#/components/schemas/TestJobRef'
      required:
      - actualEndDateTime
      - actualStartDateTime
      - href
      - id
      - relatedServiceFrom
      - relatedServiceTo
      - testJob
      type: object
    TimeUnit:
      description: |
        Represents a unit of time.
      enum:
      - seconds
      - minutes
      - businessHours
      - calendarHours
      - businessDays
      - calendarDays
      - months
      - years
      type: string
  securitySchemes:
    oauth2MEFLSOAPI:
      description: Default m2m client code
      flows:
        clientCredentials:
          refreshUrl: http://mef.net/example/refresh
          scopes:
            default: default scope
          tokenUrl: http://mef.net/example/token
      type: oauth2
